######################################
# set some variables
######################################
{% if DOIAU == True %}
    {% set bkg_time = SNOW_WINDOW_BEGIN | to_fv3time %}
{% else %}
    {% set bkg_time = current_cycle | to_fv3time %}
{% endif %}
######################################
# create working directories
######################################
mkdir:
- "{{ DATA }}/bkg/det"
- "{{ DATA }}/bkg/det_ensres"
- "{{ DATA }}/inc/det"
- "{{ DATA }}/inc/det_ensres"
- "{{ DATA }}//inc/ensmean"
{% for mem in range(1, NMEM_ENS + 1) %}
- "{{ DATA }}/bkg/mem{{ '%03d' % mem }}"
- "{{ DATA }}/anl/mem{{ '%03d' % mem }}"
{% endfor %}
copy:
######################################
# copy deterministic background files
######################################
# define variables
# Declare a dict of search and replace terms to run on each template
{% set tmpl_dict = {'${ROTDIR}':ROTDIR,
                    '${RUN}':GDUMP,
                    '${YMD}':previous_cycle | to_YMD,
                    '${HH}':previous_cycle | strftime("%H"),
                    '${MEMDIR}':""} %}

{% for tile in range(1, ntiles+1) %}
- ["{{ COM_ATMOS_RESTART_TMPL | replace_tmpl(tmpl_dict) }}/{{ bkg_time }}.sfc_data.tile{{ tile }}.nc", "{{ DATA }}/bkg/det/{{ bkg_time }}.sfc_data.tile{{ tile }}.nc"]
{% endfor %}
######################################
# copy deterministic increment files
######################################
# define variables
# Declare a dict of search and replace terms to run on each template
{% set tmpl_dict = {'${ROTDIR}':ROTDIR,
                    '${RUN}':GDUMP,
                    '${YMD}':current_cycle | to_YMD,
                    '${HH}':current_cycle | strftime("%H"),
                    '${MEMDIR}':""} %}

{% for tile in range(1, ntiles+1) %}
- ["{{ COM_SNOW_ANALYSIS_TMPL | replace_tmpl(tmpl_dict) }}/snowinc.{{ current_cycle | to_fv3time }}.sfc_data.tile{{ tile }}.nc", "{{ DATA }}/inc/det/snowinc.{{ bkg_time }}.sfc_data.tile{{ tile }}.nc"]
{% endfor %}
######################################
# copy ensemble background files
######################################
{% for mem in range(1, NMEM_ENS + 1) %}
    # define variables
    # Declare a dict of search and replace terms to run on each template
    {% set tmpl_dict = {'${ROTDIR}':ROTDIR,
                        '${RUN}':RUN,
                        '${YMD}':previous_cycle | to_YMD,
                        '${HH}':previous_cycle | strftime("%H"),
                        '${MEMDIR}':"mem" + '%03d' % mem} %}

    # we need to copy them to two places, one serves as the basis for the analysis
    {% for tile in range(1, ntiles+1) %}
- ["{{ COM_ATMOS_RESTART_TMPL | replace_tmpl(tmpl_dict) }}/{{ current_cycle | to_fv3time }}.sfc_data.tile{{ tile }}.nc", "{{ DATA }}/bkg/mem{{ '%03d' % mem }}/{{ current_cycle | to_fv3time }}.sfc_data.tile{{ tile }}.nc"]
- ["{{ COM_ATMOS_RESTART_TMPL | replace_tmpl(tmpl_dict) }}/{{ current_cycle | to_fv3time }}.sfc_data.tile{{ tile }}.nc", "{{ DATA }}/anl/mem{{ '%03d' % mem }}/{{ current_cycle | to_fv3time }}.sfc_data.tile{{ tile }}.nc"]
    {% endfor %}
    {% if DOIAU == True %}
        # if using IAU, also need backgrounds copied at the beginning of the window
        # we need to copy them to two places, one serves as the basis for the analysis
        {% for tile in range(1, ntiles+1) %}
- ["{{ COM_ATMOS_RESTART_TMPL | replace_tmpl(tmpl_dict) }}/{{ SNOW_WINDOW_BEGIN | to_fv3time }}.sfc_data.tile{{ tile }}.nc", "{{ DATA }}/bkg/mem{{ '%03d' % mem }}/{{ SNOW_WINDOW_BEGIN | to_fv3time }}.sfc_data.tile{{ tile }}.nc"]
- ["{{ COM_ATMOS_RESTART_TMPL | replace_tmpl(tmpl_dict) }}/{{ SNOW_WINDOW_BEGIN | to_fv3time }}.sfc_data.tile{{ tile }}.nc", "{{ DATA }}/anl/mem{{ '%03d' % mem }}/{{ SNOW_WINDOW_BEGIN | to_fv3time }}.sfc_data.tile{{ tile }}.nc"]
        {% endfor %}
    {% endif %}
{% endfor %}
