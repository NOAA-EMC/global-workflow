gdas:
    {% set head = "gdas.t" + cycle_HH + "z." %}
    name: "GDAS"
    target: "{{ ATARDIR }}/{{ cycle_YMDH }}/gdas.tar"
    required:
        {% if MODE == "cycled" %}
        # Cycled logs
        - "logs/{{ cycle_YMDH }}/{{ RUN }}atmanlprod.log"
        - "logs/{{ cycle_YMDH }}/{{ RUN }}prep.log"
            {% if DO_JEDIATMVAR %}
        - "logs/{{ cycle_YMDH }}/{{ RUN }}prepatmiodaobs.log"
        - "logs/{{ cycle_YMDH }}/{{ RUN }}atmanlinit.log"
        - "logs/{{ cycle_YMDH }}/{{ RUN }}atmanlprod.log"
        - "logs/{{ cycle_YMDH }}/{{ RUN }}atmanlfinal.log"
        - "logs/{{ cycle_YMDH }}/{{ RUN }}atmanlfv3inc.log"
        - "logs/{{ cycle_YMDH }}/{{ RUN }}atmanlvar.log"
            {% else %}
        - "logs/{{ cycle_YMDH }}/{{ RUN }}anal.log"
        - "logs/{{ cycle_YMDH }}/{{ RUN }}analdiag.log"
            {% endif %}
        - "logs/{{ cycle_YMDH }}/{{ RUN }}atmanlupp.log"
            {% if DO_JEDIOCNVAR %}
        - "logs/{{ cycle_YMDH }}/{{ RUN }}prepoceanobs.log"
        - "logs/{{ cycle_YMDH }}/{{ RUN }}marineanlinit.log"
        - "logs/{{ cycle_YMDH }}/{{ RUN }}marinebmat.log"
        - "logs/{{ cycle_YMDH }}/{{ RUN }}marineanlvar.log"
        - "logs/{{ cycle_YMDH }}/{{ RUN }}marineanlfinal.log"
        - "logs/{{ cycle_YMDH }}/{{ RUN }}marineanlchkpt.log"
                {% if DOHYBVAR %}
        - "logs/{{ cycle_YMDH }}/{{ RUN }}ocnanalecen.log"
                {% endif %}
            {% endif %}
            {% if DO_VRFY_OCEANDA %}
        - "logs/{{ cycle_YMDH }}/{{ RUN }}ocnanalvrfy.log"
            {% endif %}

        # Analysis GRIB2 (sub-sampled) data
        - "{{ COMIN_ATMOS_GRIB_0p25 | relpath(ROTDIR) }}/{{ head }}pgrb2.0p25.anl"
        - "{{ COMIN_ATMOS_GRIB_0p25 | relpath(ROTDIR) }}/{{ head }}pgrb2.0p25.anl.idx"
        - "{{ COMIN_ATMOS_GRIB_1p00 | relpath(ROTDIR) }}/{{ head }}pgrb2.1p00.anl"
        - "{{ COMIN_ATMOS_GRIB_1p00 | relpath(ROTDIR) }}/{{ head }}pgrb2.1p00.anl.idx"

        # Analysis netCDF (raw) data
        - "{{ COMIN_ATMOS_ANALYSIS | relpath(ROTDIR) }}/{{ head }}atmanl.nc"
        - "{{ COMIN_ATMOS_ANALYSIS | relpath(ROTDIR) }}/{{ head }}sfcanl.nc"

            {% if DOHYBVAR %}
        # Ensemble analysis residual
        - "{{ COMIN_ATMOS_ANALYSIS | relpath(ROTDIR) }}/{{ head }}atmanl.ensres.nc"
                {% if DOIAU %}
        # Ensemble IAU analysis residuals
                    {% for fhr in IAUFHRS if fhr != 6 %}
        - "{{ COMIN_ATMOS_ANALYSIS | relpath(ROTDIR) }}/{{ head }}atma{{ '%03d' % fhr }}.ensres.nc"
                    {% endfor %}
                {% endif %}
        # End of ensemble analysis mean residuals
            {% endif %}

        # Analysis state
            {% if DO_JEDIATMVAR %}
        - "{{ COMIN_ATMOS_ANALYSIS | relpath(ROTDIR) }}/{{ head }}atmanlvar.yaml"
        - "{{ COMIN_ATMOS_ANALYSIS | relpath(ROTDIR) }}/{{ head }}atmanlfv3inc.yaml"
        - "{{ COMIN_ATMOS_ANALYSIS | relpath(ROTDIR) }}/{{ head }}atmstat"
            {% else %}
        - "{{ COMIN_ATMOS_ANALYSIS | relpath(ROTDIR) }}/{{ head }}gsistat"
        - "{{ COMIN_ATMOS_ANALYSIS | relpath(ROTDIR) }}/{{ head }}cnvstat"
        - "{{ COMIN_ATMOS_ANALYSIS | relpath(ROTDIR) }}/{{ head }}oznstat"
        - "{{ COMIN_ATMOS_ANALYSIS | relpath(ROTDIR) }}/{{ head }}radstat"
            {% endif %}
            {% if AERO_ANL_RUN == "gdas" or AERO_ANL_RUN == "both" %}
        - "{{ COMIN_CHEM_ANALYSIS | relpath(ROTDIR) }}/{{ head }}aerostat"
            {% endif %}
            {% if DO_PREP_OBS_AERO %}
        - "{{ COMIN_OBS | relpath(ROTDIR) }}/{{ head }}aeroobs"
        - "{{ COMIN_OBS | relpath(ROTDIR) }}/{{ head }}aerorawobs"
            {% endif %}
            {% if DO_JEDISNOWDA %}
        - "{{ COMIN_SNOW_ANALYSIS | relpath(ROTDIR) }}/{{ head }}snowstat.tgz"
            {% endif %}

        # Ozone verification
            {% if DO_VERFOZN %}
        - "{{ COMIN_ATMOS_OZNMON | relpath(ROTDIR) }}/time/bad_cnt.{{ cycle_YMDH }}"
        - "{{ COMIN_ATMOS_OZNMON | relpath(ROTDIR) }}/time/bad_diag.{{ cycle_YMDH }}"
        - "{{ COMIN_ATMOS_OZNMON | relpath(ROTDIR) }}/time/bad_pen.{{ cycle_YMDH }}"
        - "{{ COMIN_ATMOS_OZNMON | relpath(ROTDIR) }}/time/stdout.time.tar.gz"
        - "{{ COMIN_ATMOS_OZNMON | relpath(ROTDIR) }}/horiz/stdout.horiz.tar.gz"
        - "logs/{{ cycle_YMDH }}/{{ RUN }}verfozn.log"
            {% endif %}

        # Radiance verification
            {% if DO_VERFRAD %}
        - "{{ COMIN_ATMOS_RADMON | relpath(ROTDIR) }}/radmon_angle.tar.gz"
        - "{{ COMIN_ATMOS_RADMON | relpath(ROTDIR) }}/radmon_bcoef.tar.gz"
        - "{{ COMIN_ATMOS_RADMON | relpath(ROTDIR) }}/radmon_bcor.tar.gz"
        - "{{ COMIN_ATMOS_RADMON | relpath(ROTDIR) }}/radmon_time.tar.gz"
        - "logs/{{ cycle_YMDH }}/{{ RUN }}verfrad.log"
            {% endif %}

        # Minimization monitor
            {% if DO_VMINMON %}
        - "{{ COMIN_ATMOS_MINMON | relpath(ROTDIR) }}/{{ cycle_YMDH }}.costs.txt"
        - "{{ COMIN_ATMOS_MINMON | relpath(ROTDIR) }}/{{ cycle_YMDH }}.cost_terms.txt"
        - "{{ COMIN_ATMOS_MINMON | relpath(ROTDIR) }}/{{ cycle_YMDH }}.gnorms.ieee_d"
        - "{{ COMIN_ATMOS_MINMON | relpath(ROTDIR) }}/{{ cycle_YMDH }}.reduction.ieee_d"
        - "{{ COMIN_ATMOS_MINMON | relpath(ROTDIR) }}/gnorm_data.txt"
        - "logs/{{ cycle_YMDH }}/{{ RUN }}vminmon.log"
            {% endif %}
        {% endif %}  # End of cycled data

        # Forecast and post logs
        - "logs/{{ cycle_YMDH }}/{{ RUN }}fcst_seg0.log"

        {% for fhr in range(0, FHMAX + 1, 3) %}
            {% set fhr3 = '%03d' % fhr %}
        - "logs/{{ cycle_YMDH }}/{{ RUN }}atmos_prod_f{{ fhr3 }}.log"
            {% if not WRITE_DOPOST %}
        - "logs/{{ cycle_YMDH }}/{{ RUN }}atmos_upp_f{{ fhr3 }}.log"
            {% endif %}  ## not WRITE_DOPOST
        # Forecast GRIB2 data
        - "{{ COMIN_ATMOS_GRIB_0p25 | relpath(ROTDIR) }}/{{ head }}pgrb2.0p25.f{{ fhr3 }}"
        - "{{ COMIN_ATMOS_GRIB_0p25 | relpath(ROTDIR) }}/{{ head }}pgrb2.0p25.f{{ fhr3 }}.idx"
        - "{{ COMIN_ATMOS_GRIB_1p00 | relpath(ROTDIR) }}/{{ head }}pgrb2.1p00.f{{ fhr3 }}"
        - "{{ COMIN_ATMOS_GRIB_1p00 | relpath(ROTDIR) }}/{{ head }}pgrb2.1p00.f{{ fhr3 }}.idx"
        # Forecast GRIB2 fluxes
        - "{{ COMIN_ATMOS_MASTER | relpath(ROTDIR) }}/{{ head }}sfluxgrbf{{ fhr3 }}.grib2"
        - "{{ COMIN_ATMOS_MASTER | relpath(ROTDIR) }}/{{ head }}sfluxgrbf{{ fhr3 }}.grib2.idx"
        # FV3 log
        - "{{ COMIN_ATMOS_HISTORY | relpath(ROTDIR) }}/{{ head }}atm.logf{{ fhr3 }}.txt"
        # Raw netCDF forecasts
        - "{{ COMIN_ATMOS_HISTORY | relpath(ROTDIR) }}/{{ head }}atmf{{ fhr3 }}.nc"
        - "{{ COMIN_ATMOS_HISTORY | relpath(ROTDIR) }}/{{ head }}sfcf{{ fhr3 }}.nc"
        {% endfor %}
    optional:
        {% if MODE == "cycled" %}
            # Radiance verification (only created if there are problems)
            {% if DO_VERFRAD %}
        - "{{ COMIN_ATMOS_RADMON | relpath(ROTDIR) }}/bad_diag.{{ cycle_YMDH }}"
        - "{{ COMIN_ATMOS_RADMON | relpath(ROTDIR) }}/bad_pen.{{ cycle_YMDH }}"
        - "{{ COMIN_ATMOS_RADMON | relpath(ROTDIR) }}/low_count.{{ cycle_YMDH }}"
        - "{{ COMIN_ATMOS_RADMON | relpath(ROTDIR) }}/warning.{{ cycle_YMDH }}"
            {% endif %}

            {% if DO_VERFOZN %}
                # Not all of these ozone instruments always produce data
                {% set oznmon_types = [
                   "gome_metop-b", "omi_aura", "ompslp_npp", "ompsnp_n20",
                   "ompsnp_npp", "ompstc8_n20", "ompstc8_npp", "sbuv2_n19"
                ] %}
                {% for group in [ "horiz", "time" ] %}
                    {% if group == "horiz" %}
                        {% set suffix = ".gz" %}
                    {% else %}
                        {% set suffix = "" %}
                    {% endif %}
                    {% for type in oznmon_types %}
        - "{{ COMIN_ATMOS_OZNMON | relpath(ROTDIR) }}/{{ group }}/{{ type }}.anl.ctl"
        - "{{ COMIN_ATMOS_OZNMON | relpath(ROTDIR) }}/{{ group }}/{{ type }}.anl.{{ cycle_YMDH }}.ieee_d{{ suffix }}"
        - "{{ COMIN_ATMOS_OZNMON | relpath(ROTDIR) }}/{{ group }}/{{ type }}.ges.ctl"
        - "{{ COMIN_ATMOS_OZNMON | relpath(ROTDIR) }}/{{ group }}/{{ type }}.ges.{{ cycle_YMDH }}.ieee_d{{ suffix }}"
                    {% endfor %}
                {% endfor %}
            {% endif %}
        {% endif %}
