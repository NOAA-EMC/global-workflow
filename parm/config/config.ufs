#! /usr/bin/env bash

########## config.ufs ##########
# UFS model resolution specific parameters
# e.g. time-step, processor layout, physics and dynamics parameters
# This config sets default variables for FV3, MOM6, CICE6 for their resolutions
# User can over-ride after sourcing this config file

echo "BEGIN: config.ufs"

if [ $# -le 1 ]; then

    echo "Must specify an input resolution argument to set variables!"
    echo "argument can be any one of the following:"
    echo "--fv3 C48|C96|C192|C384|C768|C1152|C3072"
    echo "--mom6 500|100|025"
    echo "--cice6 500|100|025"
    echo "--ww3 gnh_10m;aoc_9km;gsh_15m|gwes_30m|mx050|mx025"

    exit 1

fi

# Initialize
skip_mom6=true
skip_cice6=true
skip_ww3=true

# Loop through named arguments
while [[ $# -gt 0 ]]; do
  key="$1"
  case "${key}" in
    "--fv3")
      fv3_res="$2"
      ;;
    "--mom6")
      mom6_res="$2"
      skip_mom6=false
      ;;
    "--cice6")
      cice6_res="$2"
      skip_cice6=false
      ;;
    "--ww3")
      ww3_res="$2"
      skip_ww3=false
      ;;
    *)    # unknown option
      echo "FATAL ERROR: Unknown option: ${key}, ABORT!"
      exit 1
      ;;
  esac
  shift
  shift
done

case "${machine}" in
  "WCOSS2")
    export npe_node_max=128
    ;;
  "HERA" | "ORION")
    export npe_node_max=40
    ;;
  "JET")
    case "${PARTITION_BATCH}" in
      "xjet")
        export npe_node_max=24
        ;;
      "vjet" | "sjet")
        export npe_node_max=16
        ;;
      "kjet")
        export npe_node_max=40
        ;;
      *)
        echo "FATAL ERROR: Unsupported PARTITION_BATCH = ${PARTITION_BATCH}, ABORT!"
        exit 1
        ;;
    esac
    ;;
  "S4")
    case "${PARTITION_BATCH}" in
      "s4")
        export npe_node_max=32
        ;;
      "ivy")
        export npe_node_max=20
        ;;
      *)
        echo "FATAL ERROR: Unsupported PARTITION_BATCH = ${PARTITION_BATCH}, ABORT!"
        exit 1
        ;;
    esac
    ;;
esac

# (Standard) Model resolution dependent variables
case "${fv3_res}" in
    "C48")
        export DELTIM=1200
        export layout_x=1
        export layout_y=1
        export layout_x_gfs=1
        export layout_y_gfs=1
        export nth_fv3=1
        export nth_fv3_gfs=1
        export cdmbgwd="0.071,2.1,1.0,1.0"  # mountain blocking, ogwd, cgwd, cgwd src scaling
        export WRITE_GROUP=1
        export WRTTASK_PER_GROUP=2
        export WRITE_GROUP_GFS=1
        export WRTTASK_PER_GROUP_GFS=2
        export WRTIOBUF="1M"
        ;;
    "C96")
        export DELTIM=600
        export layout_x=2
        export layout_y=2
        export layout_x_gfs=2
        export layout_y_gfs=2
        export nth_fv3=1
        export nth_fv3_gfs=1
        export cdmbgwd="0.14,1.8,1.0,1.0"  # mountain blocking, ogwd, cgwd, cgwd src scaling
        export WRITE_GROUP=1
        export WRTTASK_PER_GROUP=4
        export WRITE_GROUP_GFS=1
        export WRTTASK_PER_GROUP_GFS=4
        export WRTIOBUF="4M"
        ;;
    "C192")
        export DELTIM=450
        export layout_x=4
        export layout_y=6
        export layout_x_gfs=4
        export layout_y_gfs=6
        export nth_fv3=1
        export nth_fv3_gfs=2
        export cdmbgwd="0.23,1.5,1.0,1.0"  # mountain blocking, ogwd, cgwd, cgwd src scaling
        export WRITE_GROUP=1
        export WRTTASK_PER_GROUP=64
        export WRITE_GROUP_GFS=2
        export WRTTASK_PER_GROUP_GFS=64
        export WRTIOBUF="8M"
        ;;
    "C384")
        export DELTIM=${DELTIM:-200}
        export layout_x=6
        export layout_y=8
        export layout_x_gfs=${layout_x_gfs:-8}
        export layout_y_gfs=${layout_y_gfs:-12}
        export nth_fv3=1
        export nth_fv3_gfs=${nth_fv3_gfs:-2}
        export cdmbgwd="1.1,0.72,1.0,1.0"  # mountain blocking, ogwd, cgwd, cgwd src scaling
        export WRITE_GROUP=2
        export WRTTASK_PER_GROUP=64
        export WRITE_GROUP_GFS=${WRITE_GROUP_GFS:-2}
        export WRTTASK_PER_GROUP_GFS=${WRTTASK_PER_GROUP_GFS:-64}
        export WRTIOBUF=${WRTIOBUF:-"16M"}
        ;;
    "C768")
        export DELTIM=150
        export layout_x=8
        export layout_y=12
        export layout_x_gfs=16
        export layout_y_gfs=12
        export nth_fv3=4
        export nth_fv3_gfs=4
        export cdmbgwd="4.0,0.15,1.0,1.0"  # mountain blocking, ogwd, cgwd, cgwd src scaling
        export WRITE_GROUP=2
        export WRTTASK_PER_GROUP=64
        export WRITE_GROUP_GFS=4
        export WRTTASK_PER_GROUP_GFS=64
        export WRTIOBUF="32M"
        ;;
    "C1152")
        export DELTIM=120
        export layout_x=8
        export layout_y=16
        export layout_x_gfs=8
        export layout_y_gfs=16
        export nth_fv3=4
        export nth_fv3_gfs=4
        export cdmbgwd="4.0,0.10,1.0,1.0"  # mountain blocking, ogwd, cgwd, cgwd src scaling
        export WRITE_GROUP=4
        export WRTTASK_PER_GROUP=$(echo "2*${npe_node_max}" |bc)  # TODO: this is pointless because below this is getting reset
        export WRITE_GROUP_GFS=4
        export WRTTASK_PER_GROUP_GFS=$(echo "2*${npe_node_max}" |bc)  # TODO: this is pointless because below this is getting reset
        export WRTIOBUF="48M"
        ;;
    "C3072")
        export DELTIM=90
        export layout_x=16
        export layout_y=32
        export layout_x_gfs=16
        export layout_y_gfs=32
        export nth_fv3=4
        export nth_fv3_gfs=4
        export cdmbgwd="4.0,0.05,1.0,1.0"  # mountain blocking, ogwd, cgwd, cgwd src scaling
        export WRITE_GROUP=4
        export WRTTASK_PER_GROUP=$(echo "3*${npe_node_max}" |bc)  # TODO: this is pointless because below this is getting reset
        export WRITE_GROUP_GFS=4
        export WRTTASK_PER_GROUP_GFS=$(echo "3*${npe_node_max}" |bc)  # TODO: this is pointless because below this is getting reset
        export WRTIOBUF="64M"
        ;;
    *)
        echo "FATAL ERROR: Unsupported FV3 resolution = ${fv3_res}, ABORT!"
        exit 1
        ;;
esac

if [[ "${WRTTASK_PER_GROUP}" -gt "${npe_node_max}" ]]; then export WRTTASK_PER_GROUP=${npe_node_max} ; fi
if [[ "${WRTTASK_PER_GROUP_GFS}" -gt "${npe_node_max}" ]]; then export WRTTASK_PER_GROUP_GFS=${npe_node_max} ; fi

(( ntasks_fv3 = layout_x * layout_y * 6 ))
(( ntasks_fv3_gfs = layout_x_gfs * layout_y_gfs * 6 ))
export ntasks_fv3
export ntasks_fv3_gfs

(( ntasks_quilt = WRITE_GROUP * WRTTASK_PER_GROUP ))
(( ntasks_quilt_gfs = WRITE_GROUP_GFS * WRTTASK_PER_GROUP_GFS ))
export ntasks_quilt
export ntasks_quilt_gfs

# Determine whether to use parallel NetCDF based on resolution
case ${fv3_res} in
  "C48" | "C96" | "C192" | "C384")
    export OUTPUT_FILETYPE_ATM="netcdf"
    export OUTPUT_FILETYPE_SFC="netcdf"
    ;;
  "C768" | "C1152" | "C3072")
    export OUTPUT_FILETYPE_ATM="netcdf_parallel"
    export OUTPUT_FILETYPE_SFC="netcdf_parallel"
    ;;
esac

# MOM6 specific settings
if [[ "${skip_mom6}" == "false" ]]; then
  export nth_mom6=1  # MOM6 is not thread-safe (allegedly)
  case "${mom6_res}" in
    "500")
      export ntasks_mom6=8
      export OCNTIM=3600
      ;;
    "100")
      export ntasks_mom6=20
      export OCNTIM=3600
      ;;
    "50")
      export ntasks_mom6=60
      export OCNTIM=3600
      ;;
    "025")
      export ntasks_mom6=220
      export OCNTIM=1800
      ;;
    *)
      echo "FATAL ERROR: Unsupported MOM6 resolution = ${mom6_res}, ABORT!"
      exit 1
      ;;
  esac
fi

# CICE6 specific settings
if [[ "${skip_cice6}" == "false" ]]; then
  export nth_cice6=${mom6_res}  # CICE6 needs to run on same threads as MOM6 (allegedly)
  case "${cice6_res}" in
    "500")
      export ntasks_cice6=4
      export NX_GLB="72"
      export NY_GLB="35"
      export cice_processor_shape="slenderX1"
      ;;
    "100")
      export ntasks_cice6=10
      echo "FATAL ERROR: Unsupported CICE6 resolution = ${cice6_res}, ABORT!"
      exit 1
      ;;
    "050")
      export ntasks_cice6=30
      echo "FATAL ERROR: Unsupported CICE6 resolution = ${cice6_res}, ABORT!"
      exit 1
      ;;
    "025")
      export ntasks_cice6=120
      export NX_GLB="1440"
      export NY_GLB="1080"
      export cice_processor_shape="slenderX2"
      ;;
    *)
      echo "FATAL ERROR: Unsupported CICE6 resolution = ${cice6_res}, ABORT!"
      exit 1
      ;;
  esac
fi

# WW3 specific settings
if [[ "${skip_ww3}" == "false" ]]; then
  export nth_ww3=2
  case "${ww3_res}" in
    "gnh_10m;aoc_9km;gsh_15m")
      export ntasks_ww3=140
      ;;
    "gwes_30m")
      export ntasks_ww3=100
      ;;
    "mx050")
      export ntasks_ww3=240
      ;;
    "mx025")
      export ntasks_ww3=80
      ;;
    *)
      echo "FATAL ERROR: Unsupported WW3 resolution = ${ww3_res}, ABORT!"
      exit 1
      ;;
  esac
fi

echo "END: config.ufs"
