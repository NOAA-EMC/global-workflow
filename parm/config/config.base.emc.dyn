#!/bin/ksh -x

########## config.base ##########
# Common to all steps

echo "BEGIN: config.base"

# Machine environment
export machine="@MACHINE@"

# EMC parallel or NCO production
export RUN_ENVIR="emc"

# Account, queue, etc.
if [ $machine = "THEIA" -o $machine = "HERA" ]; then

    export ACCOUNT="fv3-cpu"
    export QUEUE="batch"
    export QUEUE_ARCH="service"

elif [ $machine = "WCOSS_C" -o $machine = "WCOSS_DELL_P3" ]; then

    export ACCOUNT="FV3GFS-T2O"
    export QUEUE="dev"
    export QUEUE_ARCH="dev_transfer"

elif [ $machine = "GAEA" ]; then

    export ACCOUNT="nggps_emc"
    export QUEUE="batch"
    export QUEUE_ARCH="rdtn"

fi

# Project to use in mass store:
HPSS_PROJECT=emc-global

# Directories relative to installation areas:
export HOMEgfs=@HOMEgfs@
export PARMgfs=$HOMEgfs/parm
export FIXgfs=$HOMEgfs/fix
export USHgfs=$HOMEgfs/ush
export UTILgfs=$HOMEgfs/util
export EXECgfs=$HOMEgfs/exec
export SCRgfs=$HOMEgfs/scripts

# GLOBAL static environment parameters
if [ $machine = "GAEA" ]; then

    export NWPROD="/lustre/f1/unswept/ncep"
    export DMPDIR="/lustre/f1/pdata/ncep/gdump"
    export RTMFIX="/lustre/f1/pdata/ncep_shared/NCEPLIBS/lib/crtm/v2.0.6/src/fix"

elif [ $machine = "THEIA" ]; then

    export NWPROD="/scratch4/NCEPDEV/global/save/glopara/nwpara"
    export DMPDIR="/scratch4/NCEPDEV/global/noscrub/dump"
    export RTMFIX="/scratch4/NCEPDEV/da/save/Michael.Lueken/nwprod/lib/crtm/2.2.3/fix_update"

elif [ $machine = "HERA" ]; then

    #export NWPROD="/scratch1/NCEPDEV/global/glopara/nwpara"
    export DMPDIR="/scratch1/NCEPDEV/global/glopara/dump"
    export RTMFIX=$CRTM_FIX

elif [ $machine = "WCOSS_C" ]; then

    export NWPROD="/gpfs/hps/nco/ops/nwprod"
    export DMPDIR="/gpfs/dell3/emc/global/dump"
    export RTMFIX=$CRTM_FIX

elif [ $machine = "WCOSS_DELL_P3" ]; then

    export NWPROD="/gpfs/dell1/nco/ops/nwprod"
    export DMPDIR="/gpfs/dell3/emc/global/dump"
    export RTMFIX=$CRTM_FIX
fi


# Machine specific paths used everywhere
if [ $machine = "GAEA" ]; then

    # USER specific paths
    export HOMEDIR="/lustre/f1/unswept/ncep/$USER"
    export STMP="/lustre/f1/pdata/ncep/$USER"
    export PTMP="/lustre/f1/pdata/ncep/$USER"
    export NOSCRUB="/lustre/f1/unswept/ncep/$USER"

    # Base directories for various builds
    export BASE_GIT="/lustre/f1/unswept/ncep/$USER"
    export BASE_SVN="/scratch4/NCEPDEV/global/save/glopara/svn"

elif [ $machine = "THEIA" ]; then

    # USER specific paths
    export HOMEDIR="/scratch4/NCEPDEV/global/save/$USER"
    export STMP="/scratch4/NCEPDEV/stmp3/$USER"
    export PTMP="/scratch4/NCEPDEV/stmp4/$USER"
    export NOSCRUB="/scratch4/NCEPDEV/global/noscrub/$USER"

    # Base directories for various builds
    export BASE_GIT="/scratch4/NCEPDEV/global/save/glopara/git"
    export BASE_SVN="/scratch4/NCEPDEV/global/save/glopara/svn"

elif [ $machine = "HERA" ]; then

    # USER specific paths
    export HOMEDIR="/scratch1/NCEPDEV/global/$USER"
    export STMP="/scratch1/NCEPDEV/stmp2/$USER"
    export PTMP="/scratch1/NCEPDEV/stmp4/$USER"
    export NOSCRUB="$HOMEDIR"

    # Base directories for various builds
    export BASE_GIT="/scratch1/NCEPDEV/global/glopara/git"
    export BASE_SVN="/scratch1/NCEPDEV/global/glopara/svn"

elif [ $machine = "WCOSS_C" ]; then

    # USER specific paths
    export HOMEDIR="/gpfs/hps3/emc/global/noscrub/$USER"
    export STMP="/gpfs/hps2/stmp/$USER"
    export PTMP="/gpfs/hps2/ptmp/$USER"
    export NOSCRUB="/gpfs/hps3/emc/global/noscrub/$USER"

    # Base directories for various builds
    export BASE_GIT="/gpfs/hps3/emc/global/noscrub/emc.glopara/git"
    export BASE_SVN="/gpfs/hps3/emc/global/noscrub/emc.glopara/svn"

elif [ $machine = "WCOSS_DELL_P3" ]; then

    # USER specific paths
    export HOMEDIR="/gpfs/dell2/emc/modeling/noscrub/$USER"
    export STMP="/gpfs/dell3/stmp/$USER"
    export PTMP="/gpfs/dell3/ptmp/$USER"
    export NOSCRUB="/gpfs/dell2/emc/modeling/noscrub/$USER"

    # Base directories for various builds
    export BASE_GIT="/gpfs/dell2/emc/modeling/noscrub/emc.glopara/git"
    export BASE_SVN="/gpfs/dell2/emc/modeling/noscrub/emc.glopara/git"

fi

# Utilities needed in the scripts (mostly post)
if [ $machine = "GAEA" ]; then

    module use /lustre/f1/pdata/ncep_shared/fv3/modulefiles
    module load grib_util
    export NHOUR="/lustre/f1/pdata/ncep_shared/emc.nemspara/soft/prod_util/1.0.18/exec/nhour"
    export GRBINDEX2="/lustre/f1/pdata/ncep_shared/fv3/exec/grb2index"
    export CNVGRIB21_GFS="/lustre/f1/pdata/ncep_shared/fv3/exec/cnvgrib21_gfs"
    export COMPUTE_PARTITION="c3:c4"
    export SERVICE_PARTITION="es"
    export COMPUTE_PARTITION_LINE="-l partition=&COMPUTE_PARTITION;"
    export SERVICE_PARTITION_LINE="-l partition=&SERVICE_PARTITION;"

elif [ $machine = "THEIA" ]; then

    export NDATE="$NWPROD/util/exec/ndate"
    export NHOUR="$NWPROD/util/exec/nhour"
    export WGRIB="$NWPROD/util/exec/wgrib"
    export WGRIB2="/scratch3/NCEPDEV/nwprod/utils/wgrib2.v2.0.6c/wgrib2/wgrib2"
    export COPYGB="$NWPROD/util/exec/copygb"
    export COPYGB2="$NWPROD/util/exec/copygb2"
    export GRBINDEX="$NWPROD/util/exec/grbindex"
    export GRB2INDEX="$NWPROD/util/exec/grb2index"
    export GRBINDEX2="$NWPROD/util/exec/grb2index"
    export CNVGRIB="/apps/cnvgrib/1.4.0/bin/cnvgrib"
    export POSTGRB2TBL="/scratch3/NCEPDEV/nwprod/lib/g2tmpl/v1.5.0/sorc/params_grib2_tbl_new"

fi

# Toggle to turn on/off GFS downstream processing.
export DO_BUFRSND="NO"
export DO_GEMPAK="NO"
export DO_AWIPS="NO"

# NO for retrospective parallel; YES for real-time parallel
export REALTIME="NO"

####################################################
# DO NOT ADD MACHINE DEPENDENT STUFF BELOW THIS LINE
# IF YOU HAVE TO MAKE MACHINE SPECIFIC CHANGES BELOW
# FEEL FREE TO MOVE THEM ABOVE THIS LINE TO KEEP IT
# CLEAR
####################################################
# Build paths relative to $HOMEgfs
export HOMEgsi="$HOMEgfs"
export FIXgsi="$HOMEgfs/fix/fix_gsi"
export HOMEfv3gfs="$HOMEgfs/sorc/fv3gfs.fd"
export HOMEpost="$HOMEgfs"
export HOMEobsproc_prep="$BASE_GIT/obsproc/OT-obsproc_prep.v5.2.0-20190614"
export HOMEobsproc_network="$BASE_GIT/obsproc/OT-obsproc_global.v3.2.1-20190613"
export BASE_VERIF="$BASE_SVN/verif/global/tags/vsdb"

# CONVENIENT utility scripts and other environment parameters
export NCP="/bin/cp -p"
export NMV="/bin/mv"
export NLN="/bin/ln -sf"
export VERBOSE="YES"
export KEEPDATA="NO"
export CHGRP_CMD="chgrp rstprod"
export NEMSIOGET="$HOMEgfs/exec/nemsio_get"

# Machine environment, jobs, and other utility scripts
export BASE_ENV="$HOMEgfs/env"
export BASE_JOB="$HOMEgfs/jobs/rocoto"

# EXPERIMENT specific environment parameters
export SDATE=@SDATE@
export EDATE=@EDATE@
export assim_freq=6
export PSLOT="@PSLOT@"
export EXPDIR="@EXPDIR@/$PSLOT"
export ROTDIR="@ROTDIR@/$PSLOT"
export ROTDIR_DUMP="YES"                #Note: A value of "NO" does not currently work
export DUMP_SUFFIX=""
export RUNDIR="$STMP/RUNDIRS/$PSLOT"
export DATAROOT="$RUNDIR/$CDATE/$CDUMP"
export ARCDIR="$NOSCRUB/archive/$PSLOT"
export ICSDIR="@ICSDIR@"
export ATARDIR="/NCEPDEV/$HPSS_PROJECT/1year/$USER/$machine/scratch/$PSLOT"

# Commonly defined parameters in JJOBS
export envir=${envir:-"prod"}
export NET="gfs"
export RUN=${RUN:-${CDUMP:-"gfs"}}
export jlogfile="${EXPDIR}/logs/jlogfile"
export ERRSCRIPT=${ERRSCRIPT:-'eval [[ $err = 0 ]]'}
export LOGSCRIPT=${LOGSCRIPT:-""}
#export ERRSCRIPT=${ERRSCRIPT:-"err_chk"}
#export LOGSCRIPT=${LOGSCRIPT:-"startmsg"}
export REDOUT="1>"
export REDERR="2>"

export SENDECF="NO"
export SENDCOM="NO"
export SENDDBN="NO"
export SENDSDM="NO"

# Resolution specific parameters
export LEVS=65
export CASE="@CASECTL@"
export CASE_ENKF="@CASEENS@"

# Surface cycle update frequency
if [[ "$CDUMP" == "gdas" ]] ; then
   export FHCYC=1
   export FTSFS=10
elif [[ "$CDUMP" == "gfs" ]] ; then
   export FHCYC=24
fi

# Output frequency of the forecast model (for cycling)
export FHMIN=0
export FHMAX=9
export FHOUT=3

# GFS cycle info
export gfs_cyc=@gfs_cyc@ # 0: no GFS cycle, 1: 00Z only, 2: 00Z and 12Z only, 4: all 4 cycles.

# GFS output and frequency
export FHMIN_GFS=0

export FHMAX_GFS_00=240
export FHMAX_GFS_06=240
export FHMAX_GFS_12=240
export FHMAX_GFS_18=240
export FHMAX_GFS=$(eval echo \${FHMAX_GFS_$cyc})

export FHOUT_GFS=3
export FHMAX_HF_GFS=0
export FHOUT_HF_GFS=1

# I/O QUILTING, true--use Write Component; false--use GFDL FMS
# if quilting=true, choose OUTPUT_GRID as cubed_sphere_grid in netcdf or gaussian_grid
# if gaussian_grid, set OUTPUT_FILE for nemsio or netcdf
export QUILTING=".true."
export OUTPUT_GRID="gaussian_grid"
export OUTPUT_FILE="nemsio"

# IAU related parameters
export DOIAU="NO"
export IAUFHRS=6
export IAU_DELTHRS=6
export DOIAU_ENKF="NO"
export IAUFHRS_ENKF=6
export IAU_DELTHRS_ENKF=6
[[ "$SDATE" = "$CDATE" ]] && ( export DOIAU="NO"; export DOIAU_ENKF="NO" )

# Microphysics Options: 99-ZhaoCarr, 8-Thompson; 6-WSM6, 10-MG, 11-GFDL
export imp_physics=11

# Shared parameters
# Hybrid related
export DOHYBVAR="YES"
export NMEM_ENKF=@NMEM_ENKF@
export SMOOTH_ENKF="YES"
export l4densvar=".true."
export lwrite4danl=".false."

# EnKF output frequency
if [ $DOHYBVAR = "YES" ]; then
    export FHMIN_ENKF=3
    export FHMAX_ENKF=9
    if [ $l4densvar = ".true." ]; then
        export FHOUT=1
        export FHOUT_ENKF=1
    else
        export FHOUT_ENKF=3
    fi
fi

# turned on nsst in anal and/or fcst steps, and turn off rtgsst
export DONST="YES"
if [ $DONST = "YES" ]; then export FNTSFA="        "; fi

# The switch to apply SST elevation correction or not
export nst_anl=.true.

# Analysis increments to zero in CALCINCEXEC
export INCREMENTS_TO_ZERO="'delz_inc','clwmr_inc','icmr_inc'"

# Archiving options
export HPSSARCH="NO"         # save data to HPSS archive
export ARCH_CYC=00           # Archive data at this cycle for warm_start capability
export ARCH_WARMICFREQ=4     # Archive frequency in days for warm_start capability
export ARCH_FCSTICFREQ=1     # Archive frequency in days for gdas and gfs forecast-only capability

echo "END: config.base"
