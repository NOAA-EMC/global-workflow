#! /usr/bin/env bash

########## config.resources ##########
# Set resource information for job tasks
# e.g. walltime, node, cores per node, memory etc.

if [ $# -ne 1 ]; then

    echo "Must specify an input task argument to set resource variables!"
    echo "argument can be any one of the following:"
    echo "getic init coupled_ic aerosol_init"
    echo "atmanalprep atmanalrun atmanalpost"
    echo "atmensanalprep atmensanalrun atmensanalpost"
    echo "aeroanlinit aeroanlrun aeroanlfinal"
    echo "anal sfcanl analcalc analdiag gldas fcst post vrfy metp arch echgres"
    echo "eobs ediag eomg eupd ecen esfc efcs epos earc"
    echo "init_chem mom6ic ocnpost"
    echo "waveinit waveprep wavepostsbs wavepostbndpnt wavepostbndpntbll wavepostpnt"
    echo "wavegempak waveawipsbulls waveawipsgridded"
    echo "postsnd awips gempak"
    echo "wafs wafsgrib2 wafsblending wafsgrib20p25 wafsblending0p25 wafsgcip"
    exit 1

fi

step=$1

echo "BEGIN: config.resources"

if [[ "$machine" = "JET" ]]; then
   if [[ "$PARTITION_BATCH" = "xjet" ]]; then
     export npe_node_max=24
   elif [[ "$PARTITION_BATCH" = "vjet" || "$PARTITION_BATCH" = "sjet" ]]; then
     export npe_node_max=16
   elif [[ "$PARTITION_BATCH" = "kjet" ]]; then
     export npe_node_max=40
   fi
elif [[ "$machine" = "HERA" ]]; then
   export npe_node_max=40
elif [[ "$machine" = "ORION" ]]; then
   export npe_node_max=40
fi

if [ ${step} = "prep" -o ${step} = "prepbufr" ]; then
    eval "export wtime_${step}='00:45:00'"
    eval "export npe_${step}=4"
    eval "export npe_node_${step}=2"
    eval "export nth_${step}=1"
    eval "export memory_${step}=40G"

elif [ ${step} = "aerosol_init" ]; then
    export wtime_aerosol_init="00:05:00"
    export npe_aerosol_init=1
    export nth_aerosol_init=1
    export npe_node_aerosol_init=$(echo "${npe_node_max} / $nth_aerosol_init" | bc)
    export NTASKS=${npe_aerosol_init}
    export memory_aerosol_init="6G"

elif [ ${step} = "waveinit" ]; then

    export wtime_waveinit="00:10:00"
    export npe_waveinit=12
    export nth_waveinit=1
    export npe_node_waveinit=$(echo "${npe_node_max} / $nth_waveinit" | bc)
    export NTASKS=${npe_waveinit}

elif [ ${step} = "waveprep" ]; then

    export wtime_waveprep="00:30:00"
    export npe_waveprep=65
    export nth_waveprep=1
    export npe_node_waveprep=$(echo "${npe_node_max} / $nth_waveprep" | bc)
    export NTASKS=${npe_waveprep}

elif [ ${step} = "wavepostsbs" ]; then

    export wtime_wavepostsbs="06:00:00"
    export npe_wavepostsbs=10
    export nth_wavepostsbs=1
    export npe_node_wavepostsbs=$(echo "${npe_node_max} / $nth_wavepostsbs" | bc)
    export NTASKS=${npe_wavepostsbs}

elif [ ${step} = "wavepostbndpnt" ]; then

    export wtime_wavepostbndpnt="02:00:00"
    export npe_wavepostbndpnt=280
    export nth_wavepostbndpnt=1
    export npe_node_wavepostbndpnt=$(echo "${npe_node_max} / $nth_wavepostbndpnt" | bc)
    export NTASKS=${npe_wavepostbndpnt}

elif [ ${step} = "wavepostbndpntbll" ]; then

    export wtime_wavepostbndpntbll="01:00:00"
    export npe_wavepostbndpntbll=280
    export nth_wavepostbndpntbll=1
    export npe_node_wavepostbndpntbll=$(echo "${npe_node_max} / $nth_wavepostbndpntbll" | bc)
    export NTASKS=${npe_wavepostbndpntbll}

elif [ ${step} = "wavepostpnt" ]; then

    export wtime_wavepostpnt="02:00:00"
    export npe_wavepostpnt=280
    export nth_wavepostpnt=1
    export npe_node_wavepostpnt=$(echo "${npe_node_max} / $nth_wavepostpnt" | bc)
    export NTASKS=${npe_wavepostpnt}

elif [ ${step} = "wavegempak" ]; then

    export wtime_wavegempak="01:00:00"
    export npe_wavegempak=${npe_node_max}
    export nth_wavegempak=1
    export npe_node_wavegempak=$(echo "${npe_node_max} / $nth_wavegempak" | bc)
    export NTASKS=${npe_wavegempak}

elif [ ${step} = "waveawipsbulls" ]; then

    export wtime_waveawipsbulls="00:30:00"
    export npe_waveawipsbulls=${npe_node_max}
    export nth_waveawipsbulls=1
    export npe_node_waveawipsbulls=$(echo "${npe_node_max} / $nth_waveawipsbulls" | bc)
    export NTASKS=${npe_waveawipsbulls}

elif [ ${step} = "waveawipsgridded" ]; then

    export wtime_waveawipsgridded="00:30:00"
    export npe_waveawipsgridded=${npe_node_max}
    export nth_waveawipsgridded=1
    export npe_node_waveawipsgridded=$(echo "${npe_node_max} / $nth_waveawipsgridded" | bc)
    export NTASKS=${npe_waveawipsgridded}

elif [ ${step} = "atmanalprep" ]; then

    export wtime_atmanalprep="00:10:00"
    export npe_atmanalprep=1
    export nth_atmanalprep=1
    export npe_node_atmanalprep=$(echo "${npe_node_max} / $nth_atmanalprep" | bc)
    export memory_atmanalprep="3072M"

elif [ ${step} = "atmanalrun" ]; then

    # make below case dependent later
    export layout_x=1
    export layout_y=1

    export wtime_atmanalrun="00:30:00"
    export npe_atmanalrun=$(echo "$layout_x * $layout_y * 6" | bc)
    export npe_atmanalrun_gfs=$(echo "$layout_x * $layout_y * 6" | bc)
    export nth_atmanalrun=1
    export nth_atmanalrun_gfs=$nth_atmanalrun
    export native_atmanalrun="--exclusive"
    export npe_node_atmanalrun=$(echo "${npe_node_max} / $nth_atmanalrun" | bc)

elif [ ${step} = "atmanalpost" ]; then

    export wtime_atmanalpost="00:30:00"
    export npe_atmanalpost=${npe_node_max}
    export nth_atmanalpost=1
    export npe_node_atmanalpost=$(echo "${npe_node_max} / $nth_atmanalpost" | bc)

elif [ ${step} = "aeroanlinit" ]; then

    export wtime_aeroanlinit="00:10:00"
    export npe_aeroanlinit=1
    export nth_aeroanlinit=1
    export npe_node_aeroanlinit=$(echo "${npe_node_max} / $nth_aeroanlinit" | bc)
    export memory_aeroanlinit="3072M"

elif [ ${step} = "aeroanlrun" ]; then

   case "${CASE}" in
     C768)    
        layout_x=6
        layout_y=6
        ;;
      C384)    
        layout_x=5
        layout_y=5
        ;;
     C192 | C96 | C48)    
        layout_x=3
        layout_y=3
        ;;
    esac

    export wtime_aeroanlrun="00:30:00"
    export npe_aeroanlrun=$(echo "$layout_x * $layout_y * 6" | bc)
    export npe_aeroanlrun_gfs=$(echo "$layout_x * $layout_y * 6" | bc)
    export nth_aeroanlrun=1
    export nth_aeroanlrun_gfs=1
    export native_aeroanlrun="--exclusive"
    export npe_node_aeroanlrun=$(echo "${npe_node_max} / $nth_aeroanlrun" | bc)

elif [ ${step} = "aeroanlfinal" ]; then

    export wtime_aeroanlfinal="00:10:00"
    export npe_aeroanlfinal=1
    export nth_aeroanlfinal=1
    export npe_node_aeroanlfinal=$(echo "${npe_node_max} / $nth_aeroanlfinal" | bc)
    export memory_aeroanlfinal="3072M"

elif [ ${step} = "anal" ]; then

    export wtime_anal="01:00:00"
    export npe_anal=1000
    export nth_anal=5
    export npe_anal_gfs=1000
    if [ "${CASE}" = "C384" ]; then
      export npe_anal=400
      export npe_anal_gfs=400
    fi
    if [ "${CASE}" = "C192" -o "${CASE}" = "C96" -o "${CASE}" = "C48" ]; then
      export npe_anal=84
      export npe_anal_gfs=84
    fi
    export nth_anal_gfs=$nth_anal
    export npe_node_anal=$(echo "${npe_node_max} / $nth_anal" | bc)
    export nth_cycle=$nth_anal

elif [ ${step} = "analcalc" ]; then

    export wtime_analcalc="00:10:00"
    export npe_analcalc=127
    export nth_analcalc=1
    export npe_node_analcalc=${npe_node_max}

elif [ ${step} = "analdiag" ]; then

    export wtime_analdiag="00:10:00"
    export npe_analdiag=112
    export nth_analdiag=1
    export npe_node_analdiag=${npe_node_max}

elif [ ${step} = "sfcanl" ]; then

    export wtime_sfcanl="00:10:00"
    export npe_sfcanl=6
    export nth_sfcanl=1
    export npe_node_sfcanl=$(echo "${npe_node_max} / $nth_sfcanl" | bc)

elif [ ${step} = "gldas" ]; then

    export wtime_gldas="00:10:00"
    export npe_gldas=96
    export nth_gldas=1
    export npe_node_gldas=${npe_node_max}
    export npe_gaussian=96
    export nth_gaussian=1
    export npe_node_gaussian=24

elif [ ${step} = "fcst" ]; then

    export wtime_fcst="00:30:00"
    if [ "${CASE}" = "C768" ]; then
      export wtime_fcst_gfs="06:00:00"
    elif [ "${CASE}" = "C384" ]; then
      export wtime_fcst_gfs="06:00:00"
    else
      export wtime_fcst_gfs="03:00:00"
    fi

    # During workflow creation, we need resources for all CDUMPs and CDUMP is undefined
    CDUMP_LIST=${CDUMP:-"gdas gfs"}
    for CDUMP in $CDUMP_LIST; do
        if [[ "$CDUMP" == "gfs" ]]; then
            export layout_x=$layout_x_gfs
            export layout_y=$layout_y_gfs
            export WRITE_GROUP=$WRITE_GROUP_GFS
            export WRTTASK_PER_GROUP=$WRTTASK_PER_GROUP_GFS
        fi

        (( ATMPETS = layout_x * layout_y * 6 ))

        # Mediator only uses the atm model PETS or less
        export MEDPETS=${MEDPETS:-ATMPETS}

        if [[ $DO_AERO == "YES" ]]; then
            # Aerosol model only uses the atm model PETS
            export CHMPETS=$ATMPETS
            # Aerosol model runs on same PETs as ATM, so don't add to $NTASKS_TOT
        fi

        # If using in-line post, add the write tasks to the ATMPETS
        if [[ $QUILTING == ".true." ]]; then
            (( ATMPETS = ATMPETS + WRITE_GROUP * WRTTASK_PER_GROUP ))
        fi
        export ATMPETS
        NTASKS_TOT=$ATMPETS

        export nth_fcst=${nth_fv3:-2}
        export nth_fcst_gfs=${nth_fv3_gfs:-2}

        export npe_node_fcst=$(echo "${npe_node_max} / $nth_fcst" | bc)
        export npe_node_fcst_gfs=$(echo "${npe_node_max} / $nth_fcst_gfs" | bc)

        if [[ $DO_WAVE == "YES" ]]; then
            case $waveGRD in
                'gnh_10m aoc_9km gsh_15m') export WAVPETS=140 ;;
                'gwes_30m') export WAVPETS=100 ;;
                'mx050') export WAVPETS=240 ;;
                'mx025') export WAVPETS=80 ;;
                *)
                    echo "FATAL: Number of PEs not defined for wave grid '$waveGRD'"
                    echo "  Please add an entry to config.resources within fcst for this grid"
                    exit 3
            esac
            (( NTASKS_TOT = NTASKS_TOT + WAVPETS ))
        fi

        if [[ $DO_OCN == "YES" ]]; then
            case $OCNRES in
                # Except for 025, these are guesses for now
                100) export OCNPETS=20 ;;
                050) export OCNPETS=60 ;;
                025) export OCNPETS=220 ;;
                *)
                    echo "FATAL: Number of PEs not defined for ocean resolution '$OCNRES'"
                    echo "  Please add an entry to config.resources within fcst for this resolution"
                    exit 3
            esac
            (( NTASKS_TOT = NTASKS_TOT + OCNPETS ))
        fi

        if [[ $DO_ICE == "YES" ]]; then
            case $ICERES in
                # Except for 025, these are guesses for now
                100) export ICEPETS=10 ;;
                050) export ICEPETS=30 ;;
                025) export ICEPETS=120 ;;
                *)
                    echo "FATAL: Number of PEs not defined for ice resolution '$ICERES'"
                    echo "  Please add an entry to config.resources within fcst for this resolution"
                    exit 3
            esac
            (( NTASKS_TOT = NTASKS_TOT + ICEPETS ))
        fi

        if [[ $CDUMP == "gfs" ]]; then
            export npe_fcst_gfs=$NTASKS_TOT
        else
            export npe_fcst=$NTASKS_TOT
        fi
    done

elif [ ${step} = "ocnpost" ]; then

    export wtime_ocnpost="00:30:00"
    export npe_ocnpost=1
    export npe_node_ocnpost=1
    export nth_ocnpost=1
    export memory_ocnpost="96G"

elif [ ${step} = "post" ]; then

    export wtime_post="02:00:00"
    export wtime_post_gfs="06:00:00"
    export npe_post=112
    export nth_post=1
    export npe_node_post=12
    export npe_node_dwn=${npe_node_max}

elif [ ${step} = "wafs" ]; then

    export wtime_wafs="00:30:00"
    export npe_wafs=1
    export npe_node_wafs=1
    export nth_wafs=1

elif [ ${step} = "wafsgcip" ]; then

    export wtime_wafsgcip="00:30:00"
    export npe_wafsgcip=2
    export npe_node_wafsgcip=1
    export nth_wafsgcip=1

elif [ ${step} = "wafsgrib2" ]; then

    export wtime_wafsgrib2="00:30:00"
    export npe_wafsgrib2=1
    export npe_node_wafsgrib2=1
    export nth_wafsgrib2=1

elif [ ${step} = "wafsblending" ]; then

    export wtime_wafsblending="00:30:00"
    export npe_wafsblending=1
    export npe_node_wafsblending=1
    export nth_wafsblending=1

elif [ ${step} = "wafsgrib20p25" ]; then

    export wtime_wafsgrib20p25="00:30:00"
    export npe_wafsgrib20p25=1
    export npe_node_wafsgrib20p25=1
    export nth_wafsgrib20p25=1

elif [ ${step} = "wafsblending0p25" ]; then

    export wtime_wafsblending0p25="00:30:00"
    export npe_wafsblending0p25=1
    export npe_node_wafsblending0p25=1
    export nth_wafsblending0p25=1

elif [ ${step} = "vrfy" ]; then

    export wtime_vrfy="03:00:00"
    export wtime_vrfy_gfs="06:00:00"
    export npe_vrfy=3
    export nth_vrfy=1
    export npe_node_vrfy=1
    export npe_vrfy_gfs=1
    export npe_node_vrfy_gfs=1
    if [[ "$machine" == "HERA" ]]; then
      export memory_vrfy="16384M"
    fi

elif [ ${step} = "metp" ]; then

    export nth_metp=1
    export wtime_metp="03:00:00"
    export npe_metp=4
    export npe_node_metp=4
    export wtime_metp_gfs="06:00:00"
    export npe_metp_gfs=4
    export npe_node_metp_gfs=4

elif [ ${step} = "echgres" ]; then

    export wtime_echgres="00:10:00"
    export npe_echgres=3
    export nth_echgres=${npe_node_max}
    export npe_node_echgres=1

elif [ ${step} = "init" ]; then

    export wtime_init="00:30:00"
    export npe_init=24
    export nth_init=1
    export npe_node_init=6
    export memory_init="70G"

elif [ ${step} = "init_chem" ]; then

    export wtime_init_chem="00:30:00"
    export npe_init_chem=1
    export npe_node_init_chem=1

elif [ ${step} = "mom6ic" ]; then

    export wtime_mom6ic="00:30:00"
    export npe_mom6ic=24
    export npe_node_mom6ic=24

elif [ ${step} = "arch" -o ${step} = "earc" -o ${step} = "getic" ]; then

    eval "export wtime_${step}='06:00:00'"
    eval "export npe_${step}=1"
    eval "export npe_node_${step}=1"
    eval "export nth_${step}=1"
    eval "export memory_${step}=2048M"

elif [ ${step} = "coupled_ic" ]; then

    export wtime_coupled_ic="00:15:00"
    export npe_coupled_ic=1
    export npe_node_coupled_ic=1
    export nth_coupled_ic=1

elif [ ${step} = "atmensanalprep" ]; then

    export wtime_atmensanalprep="00:10:00"
    export npe_atmensanalprep=1
    export nth_atmensanalprep=1
    export npe_node_atmensanalprep=$(echo "${npe_node_max} / $nth_atmensanalprep" | bc)

elif [ ${step} = "atmensanalrun" ]; then

    # make below case dependent later
    export layout_x=2
    export layout_y=3

    export wtime_atmensanalrun="00:30:00"
    export npe_atmensanalrun=$(echo "$layout_x * $layout_y * 6" | bc)
    export npe_atmensanalrun_gfs=$(echo "$layout_x * $layout_y * 6" | bc)
    export nth_atmensanalrun=1
    export nth_atmensanalrun_gfs=$nth_atmensanalrun
    export native_atmensanalrun="--exclusive"
    export npe_node_atmensanalrun=$(echo "${npe_node_max} / $nth_atmensanalrun" | bc)

elif [ ${step} = "atmensanalpost" ]; then

    export wtime_atmensanalpost="00:30:00"
    export npe_atmensanalpost=${npe_node_max}
    export nth_atmensanalpost=1
    export npe_node_atmensanalpost=$(echo "${npe_node_max} / $nth_atmensanalpost" | bc)

elif [ ${step} = "eobs" -o ${step} = "eomg" ]; then

    export wtime_eobs="00:45:00"
    export wtime_eomg="01:00:00"
    if [ "${CASE}" = "C768" ]; then
      export npe_eobs=200
    elif [ "${CASE}" = "C384" ]; then
      export npe_eobs=100
    elif [ "${CASE}" = "C192" ]; then
      export npe_eobs=40
    elif [ "${CASE}" = "C96" -o "${CASE}" = "C48" ]; then
      export npe_eobs=20
    fi
    export npe_eomg=$npe_eobs
    export nth_eobs=2
    export nth_eomg=$nth_eobs
    export npe_node_eobs=$(echo "${npe_node_max} / $nth_eobs" | bc)
    export npe_node_eomg=$npe_node_eobs

elif [ ${step} = "ediag" ]; then

    export wtime_ediag="00:06:00"
    export npe_ediag=56
    export nth_ediag=1
    export npe_node_ediag=${npe_node_max}

elif [ ${step} = "eupd" ]; then

    export wtime_eupd="00:30:00"
    if [ "${CASE}" = "C768" ]; then
      export npe_eupd=480
      export nth_eupd=6
      if [[ "$machine" = "HERA" ]]; then
        export npe_eupd=150
        export nth_eupd=40
      fi
    elif [ "${CASE}" = "C384" ]; then
      export npe_eupd=270
      export nth_eupd=2
      if [[ "$machine" = "HERA" ]]; then
        export npe_eupd=100
        export nth_eupd=40
      fi
    elif [ "${CASE}" = "C192" -o "${CASE}" = "C96" -o "${CASE}" = "C48" ]; then
      export npe_eupd=42
      export nth_eupd=2
      if [[ "$machine" = "HERA" ]]; then
        export npe_eupd=40
        export nth_eupd=40
      fi
    fi
    export npe_node_eupd=$(echo "${npe_node_max} / $nth_eupd" | bc)

elif [ ${step} = "eupdfsoi" ]; then

    export wtime_eupdfsoi="03:00:00"
    if [ "${CASE}" = "C768" ]; then
      export npe_eupdfsoi=960
      export nth_eupdfsoi=6
      if [[ "$machine" = "WCOSS_DELL_P3" ]]; then
        export nth_eupdfsoi=7
      fi
      if [[ "$machine" = "HERA" ]]; then
        export npe_eupdfsoi=150
        export nth_eupdfsoi=40
      fi
    elif [ "${CASE}" = "C384" ]; then
      export npe_eupdfsoi=400
      export nth_eupdfsoi=5
      if [[ "$machine" = "WCOSS_DELL_P3" ]]; then
        export nth_eupdfsoi=9
      fi
      if [[ "$machine" = "HERA" ]]; then
        export npe_eupdfsoi=100
        export nth_eupdfsoi=40
      fi
    elif  [ "${CASE}" = "C192" ] || [ "${CASE}" = "C96" ] || [ "${CASE}" = "C48" ] ; then
      export npe_eupdfsoi=42
      export nth_eupdfsoi=2
      if [[ "$machine" = "HERA" ]]; then
        export npe_eupdfsoi=40
        export nth_eupdfsoi=40
      fi
    fi
    export npe_node_eupdfsoi=$(echo "${npe_node_max} / $nth_eupdfsoi" | bc)

elif [ ${step} = "efsoi" ]; then

    export wtime_efsoi="00:30:00"
    if [ "${CASE}" = "C768" ]; then
      export npe_efsoi=960
      export nth_efsoi=6
      if [[ "$machine" = "WCOSS_DELL_P3" ]]; then
        export nth_efsoi=7
      fi
      if [[ "$machine" = "HERA" ]]; then
        export npe_efsoi=150
        export nth_efsoi=40
      fi
    elif [ "${CASE}" = "C384" ]; then
      export npe_efsoi=270
      export nth_efsoi=2
      if [[ "$machine" = "WCOSS_DELL_P3" ]]; then
        export nth_efsoi=9
      fi
      if [[ "$machine" = "HERA" ]]; then
        export npe_efsoi=100
        export nth_efsoi=40
      fi
    elif  [ "${CASE}" = "C192" ] || [ "${CASE}" = "C96" ] || [ "${CASE}" = "C48" ] ; then
      export npe_efsoi=42
      export nth_efsoi=2
      if [[ "$machine" = "HERA" ]]; then
        export npe_efsoi=40
        export nth_efsoi=40
      fi
    fi
    export npe_node_efsoi=$(echo "${npe_node_max} / $nth_efsoi" | bc)


elif [ ${step} = "ecen" ]; then

    export wtime_ecen="00:10:00"
    export npe_ecen=80
    export nth_ecen=6
    if [ "${CASE}" = "C384" -o "${CASE}" = "C192" -o "${CASE}" = "C96" -o "${CASE}" = "C48" ]; then export nth_ecen=2; fi
    export npe_node_ecen=$(echo "${npe_node_max} / $nth_ecen" | bc)
    export nth_cycle=$nth_ecen

elif [ ${step} = "ecenfsoi" ]; then

    export wtime_ecenfsoi="00:10:00"
    export npe_ecenfsoi=80
    export nth_ecenfsoi=6
    if [[ "$machine" = "WCOSS_DELL_P3" ]]; then export nth_ecenfsoi=7; fi
    if [ "${CASE}" = "C384" -o "${CASE}" = "C192" -o "${CASE}" = "C96" -o "${CASE}" = "C48" ]; then export nth_ecenfsoi=2; fi
    export npe_node_ecenfsoi=$(echo "${npe_node_max} / $nth_ecenfsoi" | bc)
    export nth_cycle=$nth_ecenfsoi

elif [ ${step} = "esfc" ]; then

    export wtime_esfc="00:06:00"
    export npe_esfc=80
    export npe_node_esfc=${npe_node_max}
    export nth_esfc=1
    export nth_cycle=$nth_esfc

elif [ ${step} = "esfcfsoi" ]; then

    export wtime_esfcfsoi="00:06:00"
    export npe_esfcfsoi=80
    export npe_node_esfcfsoi=${npe_node_max}
    export nth_esfcfsoi=1
    export nth_cycle=$nth_esfcfsoi

elif [ ${step} = "efcs" ]; then

    if [ "${CASE}" = "C768" ]; then
      export wtime_efcs="01:00:00"
    else
      export wtime_efcs="00:40:00"
    fi
    export npe_efcs=$(echo "$layout_x * $layout_y * 6" | bc)
    export nth_efcs=${nth_fv3:-2}
    npe_node_efcs=$(echo "${npe_node_max} / $nth_efcs" | bc)
    export npe_node_efcs

elif [ ${step} = "efcsfsoi" ]; then

    export wtime_efcsfsoi="00:40:00"
    npe_efcsfsoi=$(echo "$layout_x * $layout_y * 6" | bc)
    export npe_efcsfsoi
    export nth_efcsfsoi=${nth_fv3:-2}
    npe_node_efcsfsoi=$(echo "${npe_node_max} / $nth_efcsfsoi" | bc)
    export npe_node_efcsfsoi

elif [ ${step} = "epos" ]; then

    export wtime_epos="00:15:00"
    export npe_epos=80
    export nth_epos=6
    npe_node_epos=$(echo "${npe_node_max} / $nth_epos" | bc)
    export npe_node_epos

elif [ ${step} = "eposfsoi" ]; then

    export wtime_eposfsoi="00:15:00"
    export npe_eposfsoi=80
    export nth_eposfsoi=6
    if [[ "$machine" = "WCOSS_DELL_P3" ]]; then export nth_eposfsoi=7; fi
    export npe_node_eposfsoi=$(echo "${npe_node_max} / $nth_eposfsoi" | bc)

elif [ ${step} = "postsnd" ]; then

    export wtime_postsnd="02:00:00"
    export npe_postsnd=40
    export nth_postsnd=1
    export npe_node_postsnd=5
    export npe_postsndcfp=9
    export npe_node_postsndcfp=3
    if [ $OUTPUT_FILE == "nemsio" ]; then
        export npe_postsnd=13
        export npe_node_postsnd=4
    fi
    if [[ "$machine" = "HERA" ]]; then export npe_node_postsnd=2; fi

elif [ ${step} = "awips" ]; then

    export wtime_awips="03:30:00"
    export npe_awips=4
    export npe_node_awips=4
    export nth_awips=2

elif [ ${step} = "gempak" ]; then

    export wtime_gempak="02:00:00"
    export npe_gempak=28
    export npe_node_gempak=4
    export nth_gempak=3

else

    echo "Invalid step = ${step}, ABORT!"
    exit 2

fi

echo "END: config.resources"
