%comment - ecf user variables
COM = /gpfs/dell1/nco/ops/com
COMPATH: = 
CYC = 12
DBNLOG: = 
E = t
ECF_LOGHOST = tecflow2
ECF_VERSION = 4.7.1
ENVIR = test
FILESYSTEM:dell1 = dell1
KEEPDATA:NO = NO
MAILTO: = 
NET:gfs = gfs
PDY: = 20190523
PROJ = GFS-T2O
QUEUE = prod
RUN = gfs
SENDDBN:YES = YES
SENDDBN_NTC:YES = YES
prod_envir_ver = 1.0.3
prod_util_ver = 1.1.0
%end - ecf user variables
#! /bin/sh
#BSUB -q prod
#BSUB -P GFS-T2O
#BSUB -J tgfs_forecast_high_12
#BSUB -o /gpfs/dell1/nco/ops/com/output/test/today/gfs_forecast_high_12.o%J
#BSUB -W 3:00
#BSUB -n 6384
#BSUB -R affinity[core(2)]
#BSUB -R span[ptile=12]
#BSUB -cwd /tmp

set -xe  # print commands as they are executed and enable signal trapping

export PS4='+ $SECONDS + ' 

# Variables needed for communication with ecFlow
export ECF_NAME=/test/WSC/gfs_FV3_12/forecast/jgfs_forecast_high
#export ECF_HOST=t14z1
export ECF_HOST=tecflow2
export ECF_PORT=31415
export ECF_PASS=0RwK7D8y
export ECF_TRYNO=16
export ECF_RID=$LSB_JOBID

# Tell ecFlow we have started
# POST_OUT variable enables LSF post_exec to communicate with ecFlow
if [ -d /opt/modules ]; then
    # WCOSS TO4 (Cray XC40)
    . /opt/modules/default/init/sh
    module load ecflow
    POST_OUT=/gpfs/hps/tmpfs/ecflow/ecflow_post_in.$LSB_BATCH_JID
elif [ -d /usrx/local/Modules ]; then
    # WCOSS Phase 1 & 2 (IBM iDataPlex)
    . /usrx/local/Modules/default/init/sh
    module load ecflow
    POST_OUT=/var/lsf/ecflow_post_in.$LSB_BATCH_JID
else
    # WCOSS Phase 3 (Dell PowerEdge)
    . /usrx/local/prod/lmod/lmod/init/sh
    module load ips/18.0.1.163 ecflow/4.7.1
    POST_OUT=/var/lsf/ecflow_post_in.$USER.$LSB_BATCH_JID
fi
ecflow_client --init=${ECF_RID}

cat > $POST_OUT <<ENDFILE
ECF_NAME=${ECF_NAME}
ECF_HOST=${ECF_HOST}
ECF_PORT=${ECF_PORT}
ECF_PASS=${ECF_PASS}
ECF_TRYNO=${ECF_TRYNO}
ECF_RID=${ECF_RID}
ENDFILE

# Define error handler
ERROR() {
  set +ex
  if [ "$1" -eq 0 ]; then
     msg="Killed by signal (likely via bkill)"
  else
     msg="Killed by signal $1"
  fi
  ecflow_client --abort="$msg"
  echo $msg
  echo "Trap Caught" >>$POST_OUT
  trap $1; exit $1
}
# Trap all error and exit signals
trap 'ERROR $?' ERR EXIT

# envir-p3.h
export job=${job:-$LSB_JOBNAME} #Can't use $job in filenames!
export jobid=${jobid:-$job.$LSB_JOBID}

export RUN_ENVIR=${RUN_ENVIR:-nco}
export envir=test
export SENDDBN=${SENDDBN:-YES}
export SENDDBN_NTC=${SENDDBN_NTC:-YES}
FILESYSTEMROOT=/gpfs/dell1

module load prod_envir/1.0.3 prod_util/1.1.0

case $envir in
  prod)
    export DATAROOT=${DATAROOT:-${FILESYSTEMROOT}/nco/ops/tmpnwprd}
    if [ "$SENDDBN" == "YES" ]; then
       export DBNROOT=/iodprod_dell/dbnet_siphon
    else
       export DBNROOT=${UTILROOT}/fakedbn
    fi
    ;;
  eval)
    export envir=para
    export DATAROOT=${DATAROOT:-${FILESYSTEMROOT}/nco/ops/tmpnwprd}
    if [ "$SENDDBN" == "YES" ]; then
       export DBNROOT=${UTILROOT}/para_dbn
       SENDDBN_NTC=NO
    else
       export DBNROOT=${UTILROOT}/fakedbn
    fi
    ;;
  para|test)
    export DATAROOT=${DATAROOT:-${FILESYSTEMROOT}/nco/ops/tmpnwprd}
    export DBNROOT=${UTILROOT}/fakedbn
    ;;
  *)
    ecflow_client --abort="ENVIR must be prod, para, eval, or test [envir.h]"
    exit
    ;;
esac

export COMROOT=${FILESYSTEMROOT}/nco/ops/com
export COREROOT=${FILESYSTEMROOT}/ptmp/production.core/$jobid
export NWROOT=/gpfs/dell1/nco/ops/nw${envir}
export SENDECF=${SENDECF:-YES}
export SENDCOM=${SENDCOM:-YES}
export KEEPDATA=${KEEPDATA:-NO}

if [ -n "20190523" ]; then export PDY=${PDY:-20190523}; fi
if [ -n "" ]; then export COMPATH=${COMPATH:-}; fi
if [ -n "" ]; then export MAILTO=${MAILTO:-}; fi
if [ -n "" ]; then export DBNLOG=${DBNLOG:-}; fi

set -x

export NET=gfs
export RUN=gfs
export CDUMP=gfs

model=gfs
. ${NWROOT:?}/versions/${model:?}.ver
eval export HOME${model}=${NWROOT}/${model}.\${${model}_ver:?}

# Configuration files 
export EXPDIR=${HOMEgfs}/parm/config

############################################################
# Load modules
############################################################
module load EnvVars/$EnvVars_ver
module load lsf/$lsf_ver
module load ips/$ips_ver
module load impi/$impi_ver
module load ESMF/$ESMF_ver
module load NetCDF/$NetCDF_ver
module load HDF5-serial/$HDF5_serial_ver

module list

export USE_CFP=YES
export ROTDIR=/gpfs/dell1/nco/ops/com
export cyc=12
export cycle=t12z

############################################################
# CALL executable job script here
############################################################
${HOMEgfs}/jobs/JGLOBAL_FORECAST

if [ $? -ne 0 ]; then
   ecflow_client --msg="***JOB ${ECF_NAME} ERROR RUNNING J-SCRIPT ***"
   ecflow_client --abort
   exit
fi

ecflow_client --complete  # Notify ecFlow of a normal end
trap 0                    # Remove all traps
exit 0                    # End the shell
%manual

%end