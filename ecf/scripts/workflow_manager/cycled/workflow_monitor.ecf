#PBS -S /bin/bash
#PBS -N %RUN%_workflow_monitor_%CYC%
#PBS -j oe
#PBS -q %QUEUE%
#PBS -A %PROJ%-%PROJENVIR%
#PBS -l walltime=06:00:00
#PBS -l place=vscatter,select=1:ncpus=1:mem=1GB
#PBS -l debug=true

model=gfs
%include <head.h>
%include <envir-p1.h>

set -x

export NET=%NET:gfs%
export RUN=%RUN%
export CDUMP=%RUN%

############################################################
# Load modules
############################################################
module load PrgEnv-intel/${PrgEnv_intel_ver}
module load craype/${craype_ver}
module load intel/${intel_ver}
module load cray-mpich/${cray_mpich_ver}
module load cray-pals/${cray_pals_ver}
module load python/${python_ver}

module list

export edate=%EDATE%
export cyc=%CYC%
export cycle=t${cyc}z
%include <emc_cdate.h>

GDATE=$($NDATE -06 $CDATE)
gPDY=$(echo $GDATE | cut -c1-8)
gcyc=$(echo $GDATE | cut -c9-10)

#### Ensure obsproc input exist
OBSPROC_GDAS_Trigger=$(compath.py ${envir}/obsproc/${obsproc_ver})/gdas.${PDY}/${cyc}/atmos/gdas.t${cyc}z.updated.status.tm00.bufr_d
IMSSNOW_GDAS_Trigger=$(compath.py ${envir}/obsproc/${obsproc_ver})/gdas.${PDY}/${cyc}/atmos/gdas.t${cyc}z.imssnow96.grib2
OBSPROC_GFS_Trigger=$(compath.py ${envir}/obsproc/${obsproc_ver})/gfs.${PDY}/${cyc}/atmos/gfs.t${cyc}z.updated.status.tm00.bufr_d
IMSSNOW_gfs_Trigger=$(compath.py ${envir}/obsproc/${obsproc_ver})/gfs.${PDY}/${cyc}/atmos/gfs.t${cyc}z.imssnow96.grib2
COMIN_OBS_gfs=$(compath.py prod/obsproc/${obsproc_ver})/gfs.$PDY/$cyc/atmos/gfs.$cycle.prepbufr
COMIN_OBS_gdas=$(compath.py prod/obsproc/${obsproc_ver})/gdas.$PDY/$cyc/atmos/gdas.$cycle.prepbufr
ic=1
release_gdas="NO"
release_gfs="NO"
release_enkfgdas="NO"
while [ $ic -le 20 ];
do
  if [ -s "$OBSPROC_GDAS_Trigger" -a -s "$IMSSNOW_GDAS_Trigger" -a -s "$COMIN_OBS_gdas" -a $release_gdas = "NO" ]; then
    release_gdas="YES"
    ecflow_client --event release_gdas
  fi
  if [ -s "$OBSPROC_GDAS_Trigger" -a -s "$IMSSNOW_gfs_Trigger" -a -s "$COMIN_OBS_gfs" -a $release_gfs = "NO" ]; then
    release_gfs="YES"
    ecflow_client --event release_gfs
  fi
  if [ -s $COMIN_OBS_gdas ]; then
    release_enkfgdas="YES"
    ecflow_client --event release_enkfgdas
  fi
  if [ $release_gdas = "YES" -a $release_gfs = "YES" -a $release_enkfgdas = "YES" ]; then
    break
  fi
  ic=`expr $ic + 1`
  if [ $ic -gt 20 ]; then
    exit 99
  fi
  sleep 38
done

#### Ensure MetPlus input exist
release_fg_metpg2o1="NO"
release_fg_metppcp1="NO"
COMIN_vppg="/lfs/h2/emc/vpppg/noscrub/emc.vpppg/verification/global"
COMIN_vppg_gdas=${COMIN_vppg}/archive/obs_data/prepbufr/gdas/prepbufr.gdas.${PDYm1}00
COMIN_vppg_nam_PDY=${COMIN_vppg}/archive/obs_data/prepbufr/nam/nam.${PDY}        # /nam.t*z.prepbufr.tm*
COMIN_vppg_nam_PDYm1=${COMIN_vppg}/archive/obs_data/prepbufr/nam/nam.${PDYm1}    # /nam.t*z.prepbufr.tm*
COMIN_vppg_nam_PDYm2=${COMIN_vppg}/archive/obs_data/prepbufr/nam/nam.${PDYm2}    # /nam.t*z.prepbufr.tm*
COMIN_vppg_ccpa=${COMIN_vppg}/archive/obs_data/ccpa_accum24hr/ccpa.${PDYm1}12.24h
echo "Checking metpg2o1 input for prepbufr file on ${PDYm1}"
ic=1
while [ $ic -le 20 ];
do
  echo $COMIN_vppg_gdas
  if [ -s $COMIN_vppg_gdas ]; then
    cd $COMIN_vppg_nam_PDYm1
    test_ct_1=`find . -name "nam.t*z.prepbufr.tm*"|wc -l`
    cd $COMIN_vppg_nam_PDYm2
    test_ct_2=`find . -name "nam.t*z.prepbufr.tm*"|wc -l`
    if [ $test_ct_1 -eq 8 ]; then
      if [ $test_ct_2 -eq 8 ]; then
        release_fg_metpg2o1="YES"
      fi
    fi
  fi
  echo "Checking metppcp1 input for prepbufr file on ${PDYm1}"
  if [ -s $COMIN_vppg_ccpa ]; then
    release_fg_metppcp1="YES"
  fi
  if [ $release_fg_metpg2o1 = "YES" -a $release_fg_metppcp1 = "YES" ]; then
    ecflow_client --event release_metplus
    break
  fi
  ic=`expr $ic + 1`
  if [ $ic -gt 20 ]; then
    exit 99
  fi
  sleep 38
done

%include <tail.h>
%manual

%end

