# This file is used to generate config.fcst, which is one of two files
# used to control the forecast job.  The other file is config.fv3.
# This file sets physics, dynamics, and I/O options.

config_fcst:
  filename: config.fcst
  FCSTEXEC: ufs_model
  more_exports_for_microphys: !FirstTrue
    - when: !calc ( doc.fv3_gfs_settings.imp_physics=="11" )
      do: !expand |
        export hord_mt_nh_nonmono={doc.fv3_gfs_settings.phy_dependent_var.hord_mt_nh_nonmono}
        export hord_xx_nh_nonmono={doc.fv3_gfs_settings.phy_dependent_var.hord_xx_nh_nonmono}
        export vtdm4_nh_nonmono={doc.fv3_gfs_settings.phy_dependent_var.vtdm4_nh_nonmono}
        export nord={doc.fv3_gfs_settings.phy_dependent_var.nord}
        export d4_bg={doc.fv3_gfs_settings.phy_dependent_var.d4_bg}
    - otherwise: ""

  level_exports: !FirstTrue
    - when: !calc doc.fv3_gfs_settings.LEVS==128
      do: !expand |
        export  tau=10.0
        export  rf_cutoff=7.5e2
        export  d2_bg_k1=0.20
        export  d2_bg_k2=0.04
        export  dz_min=2
        export  n_sponge=42
    - otherwise: ""

  resource_a: !FirstTrue
    - when: !calc doc.settings.cplflx==".true."
      do: !calc doc.partition_common.resources.run_coupled_fcst
    - otherwise: !calc doc.partition_common.resources.run_gdasfcst

  resource_b: !FirstTrue
    - when: !calc doc.settings.cplflx==".true."
      do: !calc doc.partition_common.resources.run_coupled_fcst
    - otherwise: !calc doc.partition_common.resources.run_gfsfcst

  restart_interval_gfs: !FirstTrue
    - when: !calc doc.settings.cplchem == ".false."
      do: !calc doc.fv3_gfs_settings.restart_interval
    - otherwise: !FirstTrue
      - when: !calc doc.fv3_gfs_settings.restart_interval == "0"
        # Add restart file at forecast cadence in addition to end of forecast
        do: !calc tools.dt_to_HMS(doc.settings.STEP_GFS).split(':')[0] + " " + str(doc.output_settings.FHMAX_GFS)
      - when: !calc len(doc.fv3_gfs_settings.restart_interval.split(' ')) == 1
        # Make sure forecast cadence is included in restart interval
        do: !FirstTrue
          # STEP_GFS is already a multiple of the restart interval, don't change
          - when: !calc int(tools.dt_to_HMS(doc.settings.STEP_GFS).split(':')[0])%int(doc.fv3_gfs_settings.restart_interval) == 0
            do: !calc doc.fv3_gfs_settings.restart_interval
          # STEP_GFS is not a multiple of the restart interval, convert to explicit list and add
          - otherwise: !calc tools.join(tools.seq(0,doc.output_settings.FHMAX_GFS,int(doc.fv3_gfs_settings.restart_interval)) + [tools.dt_to_HMS(doc.settings.STEP_GFS).split(':')[0]], ' ')
      # restart_interval is already an explicit list, make sure STEP_GFS is in the list
      - otherwise: !FirstTrue
        - when: !calc doc.fv3_gfs_settings.restart_interval.split(' ')[-1] == "-1"
          do: !calc tools.join(doc.fv3_gfs_settings.restart_interval.split(' ')[:-1], ' ') + " " + tools.dt_to_HMS(doc.settings.STEP_GFS).split(':')[0]
        - otherwise: !calc doc.fv3_gfs_settings.restart_interval + " " + tools.dt_to_HMS(doc.settings.STEP_GFS).split(':')[0]

  content: !expand |
    #!/bin/ksh -x
    
    # This file is automatically generated from the YAML-based system
    # in ecf/ecfutils/.  Any changes will be overwritten if
    # setup_case.sh is rerun.
    
    ########## config.fcst ##########
    # Forecast specific
    
    echo "BEGIN: config.fcst"
    
    # Source model specific information that is resolution dependent
    . $EXPDIR/config.fv3 $CDUMP
    
    if [ $DONST = "YES" ]; then
        . $EXPDIR/config.nsst
    fi

    export npe_fcst="{resource_a[0].mpi_ranks}"
    export npe_fcst_gfs="{resource_b[0].mpi_ranks}"
    export npe_node_fcst="{resource_a[0].max_ppn}"
    export nth_fcst="{doc.fv3_gfs_settings.layout.nth}"
    export NTHREADS_FV3="{doc.fv3_gfs_settings.layout.nth}"
    export memory_fcst="1024M"

    #######################################################################
    # COUPLING COMPONENTS
    export OCN_model="{doc.ocn_settings.MOD}"
    export ICE_model="{doc.ice_settings.MOD}"
    export WAV_model="{doc.wave_settings.MOD}"
    export CHM_model="{doc.chem_settings.MOD}"

    #######################################################################
    # COUPLING COMPONENTS
    export use_coldstart="{tools.fort(doc.settings.use_coldstart)}"

    #######################################################################
    # PE Mapping
    export ATMPETS="{doc.fv3_gfs_settings.ATMPETS}"
    export MEDPETS="{doc.fv3_gfs_settings.MEDPETS}"
    export OCNPETS="{doc.ocn_settings.OCNPETS}"
    export ICEPETS="{doc.ice_settings.ICEPETS}"
    export WAVPETS="{doc.wave_settings.WAVPETS}"
    export CHMPETS="{resource_a[0].mpi_ranks}"
    #
    #######################################################################    
    # CICE parameters
    export NX_GLB="{doc.ice_settings.NX_GLB}"
    export NY_GLB="{doc.ice_settings.NY_GLB}"
    export MESH_OCN_ICE="mesh.mx{doc.ice_settings.ICERES}.nc"
    
    if [[ "$machine" == "WCOSS_C" ]]; then
        export memory_fcst="1024M"
    elif [[ "$machine" == "GAEA" ]]; then
        export memory_fcst="1024M"
    fi
    
    export FORECASTSH="$HOMEgfs/scripts/exglobal_forecast.sh"
    export FCSTEXECDIR="$HOMEgfs/exec"
    export FCSTEXEC="{FCSTEXEC}"
   
    # Model configuration
    export TYPE="{doc.fv3_gfs_settings.nh_type}"
    export MONO="{doc.fv3_gfs_settings.MONO}"
    #export launch_level=27
    #This should be: export launch_level=$(echo "$LEVS/2.35" |bc)
    # hard coding for 128 LEVS for now: 
    export launch_level=54

    # Options of stratosphere O3 physics reaction coefficients
    export new_o3forc="{tools.YES_NO(doc.fv3_gfs_settings.new_o3force)}"

    # fv3_core_nml section
    export dnats={doc.fv3_gfs_settings.phy_dependent_var.dnats}
    export do_sat_adj="{tools.fort(doc.fv3_gfs_settings.phy_dependent_var.do_sat_adjust)}"
    export nwat={doc.fv3_gfs_settings.phy_dependent_var.nwat}
    export dddmp={doc.fv3_gfs_settings.dddmp}

    # gfs_physics_nml section
    export fscav_aero="{tools.fort(doc.fv3_gfs_settings.fscav_aero)}"

    export h2o_phys="{tools.fort(doc.fv3_gfs_settings.h2o_phys)}"

    export ncld={doc.fv3_gfs_settings.phy_dependent_var.ncld}

    export n_split={doc.fv3_gfs_settings.n_split}
    export adjust_dry_mass=".false."

    export IALB=1
    export IEMS=1
    export ISOL=2
    export IAER=5111
    export ICO2=2

    export icliq_sw=2
    export iovr=3
    export isubc_sw=2
    export isubc_lw=2
    
    export cal_pre="{tools.fort(doc.fv3_gfs_settings.phy_dependent_var.cal_pre)}"

    export lgfdlmprad=".true."
    export effr_in=".true."
    export reiflag=2
    export hybedmf=.false.
    export satmedmf=.true.
    export isatmedmf=1
    tbf=""
    if [ $satmedmf = ".true." ]; then tbf="_satmedmf" ; fi

    export lheatstrg=.false.

    export random_clds="{tools.fort(doc.fv3_gfs_settings.phy_dependent_var.random_clds)}"
    #export cnvcld="{tools.fort(doc.fv3_gfs_settings.cnvcld)}"

    export FIELD_TABLE="{doc.fv3_gfs_settings.phy_dependent_var.FIELD_TABLE}"
    {more_exports_for_microphys}
    {level_exports}


    #coupling settings 
    export FRAC_GRID="{doc.settings.FRAC_GRID}"
    export cplmode="{doc.settings.cplmode}"
    export psm_bc="{doc.fv3_gfs_settings.psm_bc}"

    export min_lakeice="{doc.fv3_gfs_settings.min_lakeice}"
    export min_seaice="{doc.fv3_gfs_settings.min_seaice}" 

    export FSICL="{doc.fv3_gfs_settings.FSICL}"

    # Stochastic physics parameters
    # nam_stochy section
    export SEEDLET="{doc.fv3_gfs_settings.SEEDLET}"
    export DO_SKEB="{tools.fort(doc.fv3_gfs_settings.DO_SKEB)}"
    export DO_SHUM="{tools.fort(doc.fv3_gfs_settings.DO_SHUM)}"
    export DO_SPPT="{tools.fort(doc.fv3_gfs_settings.DO_SPPT)}"

    export SKEB=0.6,-999,-999,-999,-999
    export iseed_skeb=$ISEED_SKEB
    export SKEB_TAU=2.16E4,1.728E5,2.592E6,7.776E6,3.1536E7
    export SKEB_LSCALE=500.E3,1000.E3,2000.E3,2000.E3,2000.E3
    export SKEBNORM=1
    
    export SPPT=0.8,0.4,0.2,0.08,0.04
    export iseed_sppt=$ISEED_SPPT
    export SPPT_TAU=2.16E4,2.592E5,2.592E6,7.776E6,3.1536E7
    export SPPT_LSCALE=500.E3,1000.E3,2000.E3,2000.E3,2000.E3
    export sppt_logit=.TRUE.
    export sppt_sfclimit=.true.
    export use_zmtnblck=.true.

    #---------------------------------------------------------------------
    # Disable the use of coupler.res; get model start time from model_configure
    export USE_COUPLER_RES="NO"
    
    if [[ "$CDUMP" == "gdas" ]] ; then # GDAS cycle specific parameters
    
        # Variables used in DA cycling
        if [ $QUILTING = ".true." -a $OUTPUT_GRID = "gaussian_grid" ]; then
            export DIAG_TABLE="$HOMEgfs/parm/parm_fv3diag/diag_table_da"
        else
            export DIAG_TABLE="$HOMEgfs/parm/parm_fv3diag/diag_table_da_orig"
        fi
    
        # Write restart files at next assimilation time
        export restart_interval={doc.fv3_enkf_settings.restart_interval}
        export npe_remap={doc.partition_common.resources.fallback_run_gfsremap[0].mpi_ranks}
        export nth_remap={doc.partition_common.resources.fallback_run_gfsremap[0].OMP_NUM_THREADS}

    elif [[ "$CDUMP" == "gfs" ]] ; then # GFS cycle specific parameters
    
        # Write more variables to output
        if [ $QUILTING = ".true." -a $OUTPUT_GRID = "gaussian_grid" ]; then
            export DIAG_TABLE="$HOMEgfs/parm/parm_fv3diag/diag_table"
        else
            export DIAG_TABLE="$HOMEgfs/parm/parm_fv3diag/diag_table_orig"
        fi
        export restart_interval="{restart_interval_gfs}"
        export npe_remap={doc.partition_common.resources.fallback_run_gfsremap[0].mpi_ranks}
        export nth_remap={doc.partition_common.resources.fallback_run_gfsremap[0].OMP_NUM_THREADS}
    fi

    if [ $cplchem = .true. ]; then # temporary settings for aerosol coupling
        export DIAG_TABLE="$HOMEgfs/parm/parm_fv3diag/diag_table_aer"
        export FIELD_TABLE="$HOMEgfs/parm/parm_fv3diag/field_table_aer"
        export CHM_CFGDIR="{doc.chem_settings.CFGDIR}"
        export CHM_INPDIR="{doc.chem_settings.INPDIR}"
        export dnats="$(( $dnats + {doc.chem_settings.ntdiag} ))"
        export KMP_INIT_AT_FORK=FALSE # Temporary setting
    elif [[ $cpl == .true. ]] ; then # coupled model
        export DIAG_TABLE="$HOMEgfs/parm/parm_fv3diag/diag_table_cpl"
    fi
    
    # Regrid tiles to global Gaussian grid in NEMSIO
    export REGRID_NEMSIO_SH="$HOMEgfs/ush/fv3gfs_regrid_nemsio.sh"
    if [ $DONST = YES ]; then
        export REGRID_NEMSIO_TBL="$HOMEgfs/parm/parm_fv3diag/variable_table_da.txt"
    else
        export REGRID_NEMSIO_TBL="$HOMEgfs/parm/parm_fv3diag/variable_table_da_nonsst.txt"
    fi
    
    # Remap tiles to global latlon grid in NetCDF
    export REMAPSH="$HOMEgfs/ush/fv3gfs_remap.sh"
    export master_grid="{doc.post.master_grid}"                   # 1deg 0p5deg 0p25deg 0p125deg etc
    
    # Global latlon NetCDF to nemsio utility parameters
    export NC2NEMSIOSH="$HOMEgfs/ush/fv3gfs_nc2nemsio.sh"
    
    # Remember config.efcs will over-ride these values for ensemble forecasts
    # if these variables are re-defined there.
    # Otherwise, the ensemble forecast will inherit from config.fcst
    
    echo "END: config.fcst"
    
