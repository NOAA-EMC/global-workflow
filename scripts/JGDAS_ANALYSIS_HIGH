#!/bin/ksh 
set -xa
#
# Specify whether the run is production or development
#
export RUN_ENVIR=${RUN_ENVIR:-prod}

#####################################################################################
# Run config file to get input parameters
# This config file should define the following variables
# DATA_IN: Location of working directory, default to /tmpnwprd2
# DEV_ECF: If the job is to be running using ECF, default to YES
# SENDDBN: Set to NO for developers, default to YES
# COM_IN:  Directory for input files, default to /com/$NET/${envir}
# COM_OUT: Directory for output file, default to /com/$NET/${envir}
# gespath: Directory for the guess or restart files, default to /nwges/${envir}
#####################################################################################
if [ "$RUN_ENVIR" != prod ]      ### For Developers, "group_name" is passed from the ECF script
then
  . ${PARA_CONFIG:-/global/save/${LOGNAME}/2jif/q3fy12_hybrid/tests/para_config}
  export userid=$LOGNAME
  export DATA_IN=${DATA_IN:-/ptmp/$userid}
fi

###############################################################
# This block can be modified for different test environment
###############################################################
if [[ $RUN_ENVIR = prod && $envir != prod ]] ; then
  export DBNROOT=/nwprod/spa_util/fakedbn
  export jlogfile=${jlogfile:-/com/logs/${envir}/jlogfile}
fi

####################################
# Specify NET and RUN Name and model
####################################
export NET=gfs
export RUN=gdas1
export RUNENS=enkf


####################################
# Specify version numbers
####################################
export crtm_ver=${crtm_ver:-v2.1.3}
export gsi_ver=${gsi_ver:-v5.0.0}
export gsm_ver=${gsm_ver:-v12.0.0}
export util_ver=${util_ver:-v1.0.0}


####################################
# set up job name and  environment
####################################
export job=${job:-$RUN}
export envir=${envir:-prod}
export host=${host:-`hostname | cut -c1`}

###############################################

export PS4='$SECONDS + '

# #### 05/05/99 ###############################
# SETUP GDAS ANALYSIS PROCESSING VARIABLES
# #############################################

####################################
# obtain unique process id (pid) and make temp directory
####################################
export pid=$$
export DATA_IN=${DATA_IN:-/tmpnwprd2}

export DATA=$DATA_IN/${job}.${pid}
mkdir -p $DATA
cd $DATA

####################################
# Determine Job Output Name on System
####################################
export cyc=${cyc:-00}
export outid="LL$job"
[ $envir != prod ]  && export outid="LL${job}_${envir}"
export jobid="${outid}.o${pid}"
export pgmout="OUTPUT.${pid}"
export pgmerr=errfile
export cycle=t${cyc}z

####################################
# SENDECF  - Flag Events on ECF
# SENDCOM  - Copy Files From TMPDIR to $COMOUT
# SENDDBN  - Issue DBNet Client Calls
# VERBOSE  - Specify Verbose Output in exglobal_fcst.sh.ecf
####################################
export SAVEGES=${SAVEGES:-YES}
export SENDECF=${SENDECF:-YES}
export SENDCOM=${SENDCOM:-YES}
export SENDDBN=${SENDDBN:-YES}
export RERUN=${RERUN:-NO}
export VERBOSE=${VERBOSE:-YES}

#################################
# Define the Log File directory
#################################
export jlogfile=${jlogfile:-/com/logs/jlogfiles/jlogfile.${job}.${pid}}


####################################
# Specify Execution Areas
####################################
export HOMEGLOBAL=${HOMEGLOBAL:-/nw${envir}/gsm.${gsm_ver}}
export EXECGLOBAL=${EXECGLOBAL:-$HOMEGLOBAL/exec}
export FIXGLOBAL=${FIXGLOBAL:-$HOMEGLOBAL/fix/fix_am}
export USHGLOBAL=${USHGLOBAL:-$HOMEGLOBAL/ush}
export SCRGLOBAL=${SCRGLOBAL:-$HOMEGLOBAL/scripts}
export UTILGLOBAL=${UTILGLOBAL:-$HOMEGLOBAL/util}
export PARMGLOBAL=${PARMGLOBAL:-$HOMEGLOBAL/parm}

export HOMEGSM=${HOMEGSM:-/nw${envir}/gsm.$gsm_ver}
export EXECGSM=${EXECGSM:-$HOMEGSM/exec}
export FIXGSM=${FIXGSM:-$HOMEGSM/fix/fix_am}
export USHGSM=${USHGSM:-$HOMEGSM/ush}
export SCRGSM=${SCRGSM:-$HOMEGSM/scripts}
export UTILGSM=${UTILGSM:-$HOMEGSM/util}
export PARMGSM=${PARMGSM:-$HOMEGSM/parm}

export HOMEGSI=${HOMEGSI:-/nw${envir}/gsi.$gsi_ver}
export EXECGSI=${EXECGSI:-$HOMEGSI/exec}
export FIXGSI=${FIXGSI:-$HOMEGSI/fix}
export USHGSI=${USHGSI:-$HOMEGSI/ush}
export SCRGSI=${SCRGSI:-$HOMEGSI/scripts}
export UTILGSI=${UTILGSI:-$HOMEGSI/util}
export PARMGSI=${PARMGSI:-$HOMEGSI/parm}

export HOMEUTIL=${HOMEUTIL:-/nw${envir}/util.${util_ver}}
export EXECUTIL=${EXECUTIL:-$HOMEUTIL/exec}
export FIXUTIL=${FIXUTIL:-$HOMEUTIL/fix}
export PARMUTIL=${PARMUTIL:-$HOMEUTIL/parm}
export SCRUTIL=${SCRUTIL:-$HOMEUTIL/scripts}
export USHUTIL=${USHUTIL:-$HOMEUTIL/ush}

##############################
# Set up the UTILITIES
##############################
export utilscript=${utilscript:-$USHUTIL}
export utilexec=${utilexec:-$EXECUTIL}
export NDATE=${NDATE:-$utilexec/ndate}

# Run setup to initialize working directory and utility scripts
##############################
$utilscript/setup.sh

err_chk=${err_chk:-$utilscript/err_chk.sh}
startmsg=${startmsg:-$utilscript/startmsg.sh}
ERRSCRIPT=${ERRSCRIPT:-$err_chk}
LOGSCRIPT=${LOGSCRIPT:-$startmsg}
export FILESTYLE=${FILESTYLE:-'L'}

##############################
# Run setpdy and initialize PDY variables
##############################
$utilscript/setpdy.sh
. ./PDY

# Set CDATE and GDATE
export CDATE=${CDATE:-${PDY}${cyc}}
export GDATE=`$NDATE -06 $CDATE`
export PDYges=`echo $GDATE | cut -c1-8`
export cycges=`echo $GDATE | cut -c9-10`

##############################################
# Define COM directories
##############################################
export COM_IN=${COM_IN:-/com/${NET}/${envir}}
export COM_OUT=${COM_OUT:-/com/${NET}/${envir}}

export COMIN=$COM_IN/gdas.${PDY}
export COMOUT=$COM_OUT/gdas.${PDY}
export COMINENS=${COMINENS:-$COM_IN/enkf.${PDYges}/$cycges}

mkdir -m 775 -p $COMOUT

##############################################
# Define GES directories
##############################################
export gespath=${gespath:-/nwges/${envir}}
export GESdir=$gespath/gdas.$PDY
mkdir -m 775 -p $GESdir


####################################
# Specify Special Fcst Vars
####################################
#
# Set executable, script, and fix
export GSIEXEC=${GSIEXEC:-$EXECGSI/global_gsi}
export ANALYSISSH=${ANALYSISSH:-$SCRGSI/exglobal_analysis.sh.ecf}

#
# Forecast Horizontal Resolution
#
export JCAP=${JCAP:-1534}
export JCAP_A=${JCAP_A:-574}
export JCAP_ges=${JCAP_ges:-1534}

#
# Forecast Vertical Resolution
#
export LEVS=${LEVS:-64}
export LEVS_ges=${LEVS_ges:-64}
#
# These are for the T574L64
#
export LONA=${LONA:-1152}
export LATA=${LATA:-576}
export LONB=${LONB:-3072}
export LATB=${LATB:-1536}
export LSOIL=${LSOIL:-4}
export NLAT=$((${LATA}+2))

# Set hybrid and ensemble resolution parameters
export DOHYBVAR=${DOHYBVAR:-YES}

export NMEM_ENS=${NMEM_ENS:-80}
export JCAP_ENS=${JCAP_ENS:-574}
export NLAT_ENS=${NLAT_ENS:-578}
export NLON_ENS=${NLON_ENS:-1152}

#
# Time Step
#
export DELTIM=${DELTIM:-450}

#
# Surface cycle
#
export use_ufo=${use_ufo:-.true.}
export SNOW_NUDGE_COEFF=${SNOW_NUDGE_COEFF:-'-2.'}

#
# Analysis Fix Fields
#
export FNGLAC=${FNGLAC:-${FIXGSM}/global_glacier.2x2.grb}
export FNMXIC=${FNMXIC:-${FIXGSM}/global_maxice.2x2.grb}
export FNTSFC=${FNTSFC:-$FIXGSM/RTGSST.1982.2012.monthly.clim.grb}
export FNSNOC=${FNSNOC:-${FIXGSM}/global_snoclim.1.875.grb}
export FNZORC=${FNZORC:-'sib'}
export FNALBC=${FNALBC:-${FIXGSM}/global_albedo4.1x1.grb}
export FNAISC=${FNAISC:-${FIXGSM}/CFSR.SEAICE.1982.2012.monthly.clim.grb}
export FNTG3C=${FNTG3C:-${FIXGSM}/global_tg3clim.2.6x1.5.grb}
export FNVEGC=${FNVEGC:-${FIXGSM}/global_vegfrac.0.144.decpercent.grb}
export FNVETC=${FNVETC:-${FIXGSM}/global_vegtype.1x1.grb}
export FNSOTC=${FNSOTC:-${FIXGSM}/global_soiltype.1x1.grb}
export FNSMCC=${FNSMCC:-${FIXGSM}/global_soilmgldas.t${JCAP}.$LONB.$LATB.grb}
export FNOROG=${FNOROG:-${FIXGSM}/global_orography.t${JCAP}.$LONB.$LATB.grb}
export FNMASK=${FNMASK:-${FIXGSM}/global_slmask.t${JCAP}.$LONB.$LATB.grb}
export OROGRAPHY=${OROGRAPHY:-${FIXGSM}/global_orography.t${JCAP}.$LONB.$LATB.grb}
export OROGRAPHY_UF=${OROGRAPHY_UF:-${FIXGSM}/global_orography_uf.t${JCAP}.$LONB.$LATB.grb}
export SLMASK=${SLMASK:-${FIXGSM}/global_slmask.t${JCAP}.$LONB.$LATB.grb}

export BERROR=${BERROR:-${FIXGSI}/Big_Endian/global_berror.l${LEVS}y${NLAT}.f77}
export SATANGL=${SATANGL:-${FIXGSI}/global_satangbias.txt}
export SATINFO=${SATINFO:-${FIXGSI}/global_satinfo.txt}
export ATMSFILTER=${ATMSFILTER:-${FIXGSI}/atms_beamwidth.txt}
export ANAVINFO=${ANAVINFO:-${FIXGSI}/global_anavinfo.l${LEVS}.txt}
export CONVINFO=${CONVINFO:-${FIXGSI}/global_convinfo.txt}
export OZINFO=${OZINFO:-${FIXGSI}/global_ozinfo.txt}
export PCPINFO=${PCPINFO:-${FIXGSI}/global_pcpinfo.txt}
export AEROINFO=${AEROINFO:-${FIXGSI}/global_aeroinfo.txt}
export SCANINFO=${SCANINFO:-${FIXGSI}/global_scaninfo.txt}
export HYBENSINFO=${HYBENSINFO:-${FIXGSI}/global_hybens_locinfo.l${LEVS}.txt}
export OBERROR=${OBERROR:-${FIXGSI}/prepobs_errtable.global}

export RTMFIX=${RTMFIX:-/nw${envir}/fix/crtm_${crtm_ver}}


#
# Analysis Input Fields
#
export PREINP=${PREINP:-${RUN}.${cycle}.}
export PREINPENS=${PREINPENS:-${RUNENS}.${cycle}.}

export FNTSFA=${FNTSFA:-${COMIN}/${PREINP}rtgssthr.grb}
export FNACNA=${FNACNA:-${COMIN}/${PREINP}seaice.5min.blend.grb}
export FNSNOA=${FNSNOA:-${COMIN}/${PREINP}snogrb_t${JCAP}.${LONB}.${LATB}}

export PREPQC=${PREPQC:-${COMIN}/${PREINP}prepbufr}


export GSNDBF=${GSNDBF:-${COMIN}/${PREINP}goesnd.tm00.bufr_d}
export GSNDBF1=${GSNDBF1:-${COMIN}/${PREINP}goesfv.tm00.bufr_d}
export B1HRS2=${B1HRS2:-${COMIN}/${PREINP}1bhrs2.tm00.bufr_d}
export B1MSU=${B1MSU:-${COMIN}/${PREINP}1bmsu.tm00.bufr_d}
export B1HRS3=${B1HRS3:-${COMIN}/${PREINP}1bhrs3.tm00.bufr_d}
export B1AMUA=${B1AMUA:-${COMIN}/${PREINP}1bamua.tm00.bufr_d}
export B1AMUB=${B1AMUB:-${COMIN}/${PREINP}1bamub.tm00.bufr_d}
export B1HRS4=${B1HRS4:-${COMIN}/${PREINP}1bhrs4.tm00.bufr_d}
export B1MHS=${B1MHS:-${COMIN}/${PREINP}1bmhs.tm00.bufr_d}
export ESHRS3=${ESHRS3:-${COMIN}/${PREINP}eshrs3.tm00.bufr_d}
export ESAMUA=${ESAMUA:-${COMIN}/${PREINP}esamua.tm00.bufr_d}
export ESAMUB=${ESAMUB:-${COMIN}/${PREINP}esamub.tm00.bufr_d}
export AIRSBF=${AIRSBF:-${COMIN}/${PREINP}airsev.tm00.bufr_d}
export IASIBF=${IASIBF:-${COMIN}/${PREINP}mtiasi.tm00.bufr_d}
export SEVIRIBF=${SEVIRIBF:-${COMIN}/${PREINP}sevcsr.tm00.bufr_d}
export ATMSBF=${ATMSBF:-${COMIN}/${PREINP}atms.tm00.bufr_d}
export CRISBF=${CRISBF:-${COMIN}/${PREINP}cris.tm00.bufr_d}
export SBUVBF=${SBUVBF:-${COMIN}/${PREINP}osbuv8.tm00.bufr_d}
export GOMEBF=${GOMEBF:-${COMIN}/${PREINP}gome.tm00.bufr_d}
export OMIBF=${OMIBF:-${COMIN}/${PREINP}omi.tm00.bufr_d}
export MLSBF=${MLSBF:-${COMIN}/${PREINP}mls.tm00.bufr_d}
export SMIPCP=${SMIPCP:-${COMIN}/${PREINP}spssmi.tm00.bufr_d}
export TMIPCP=${TMIPCP:-${COMIN}/${PREINP}sptrmm.tm00.bufr_d}
export GPSROBF=${GPSROBF:-${COMIN}/${PREINP}gpsro.tm00.bufr_d}
export TCVITL=${TCVITL:-${COMIN}/${PREINP}syndata.tcvitals.tm00}
export SATWND=${SATWND:-${COMIN}/${PREINP}satwnd.tm00.bufr_d}

export SIGGES=${SIGGES:-${COMIN}/${PREINP}sgesprep}
export SIGG03=${SIGG03:-${COMIN}/${PREINP}sgm3prep}
export SIGG04=${SIGG04:-${COMIN}/${PREINP}sgm2prep}
export SIGG05=${SIGG05:-${COMIN}/${PREINP}sgm1prep}
export SIGG07=${SIGG07:-${COMIN}/${PREINP}sgp1prep}
export SIGG08=${SIGG08:-${COMIN}/${PREINP}sgp2prep}
export SIGG09=${SIGG09:-${COMIN}/${PREINP}sgp3prep}

export SIGGESENS=${SIGGESENS:-${COMINENS}/sfg_${GDATE}_fhr06s}

# Set non-assimilated obs fles as /dev/null to prevent reading
export GSNDBF=${GSNDBF:-/dev/null}
export AMSREBF=${AMSREBF:-/dev/null}
export SSMITBF=${SSMITBF:-/dev/null}


############################################################################ 
#
# Check grib date of current snogrb vs that of prev cycle 
#
# if cdate_of_snogrb -le cdate_of_snoprv, i.e. file has not been updated 
#   then set namelist input to CYCLEXEC to use the snow from the guess
#   FNSNOA=" ";CYCLVARS="FSNOL=99999.,FSNOS=99999.,"
#   FNSNOA is the name of the snow depth  analysis file 
#     when not supplied, signals to CYCLEXEC to blend guess and climatology
#     (Note: file must be " ", not "" or the shell syntax for default
#      values X=${X:-default} will reset to default if X="")
#     FSNOL=99999.,FSNOS=99999., sets the blending of guess and climo to
#		use 100% guess
#
####################################
prev_cdate=$($utilexec/ndate -6 $PDY$cyc)
wgrib=$utilexec/wgrib
RUN_GETGES=${RUN_GETGES:-YES}        # Set to NO if not running getges.sh
if [ $RUN_GETGES = YES ]; then
 GETGESSH=${GETGESSH:-$utilscript/getges.sh}
 export gesenvir=${gesenvir:-$envir}
 snoprv=$($GETGESSH -q -t snogrb_$JCAP -e $gesenvir -n gdas -v $prev_cdate)
else
 snoprv=${snoprv:-$FNSNOG}
fi
if [ `$wgrib -4yr ${FNSNOA} 2>/dev/null|grep -i snowc |\
          awk -F: '{print $3}'|awk -F= '{print $2}'` -le \
     `$wgrib -4yr $snoprv 2>/dev/null |grep -i snowc  |\
                        awk -F: '{print $3}'|awk -F= '{print $2}'` ] ; then
        export FNSNOA=" "
        export CYCLVARS="FSNOL=99999.,FSNOS=99999.,"
else
     export SNOW_NUDGE_COEFF=${SNOW_NUDGE_COEFF:-0.}
     export CYCLVARS="FSNOL=${SNOW_NUDGE_COEFF},$CYCLVARS"
fi

############################################################################ 
#
# Output File Names
#
export SFCANL=${SFCANL:-$DATA/${RUN}.${cycle}.sfcanl}
export SIGANL=${SIGANL:-$DATA/${RUN}.${cycle}.sanl}
export ABIAS=${ABIAS:-$DATA/${RUN}.${cycle}.abias}
export ABIASPC=${ABIASPC:-$DATA/${RUN}.${cycle}.abias_pc}
export GINCOUT=${GINCOUT:-$DATA/${RUN}.${cycle}.gesfile}
export PCPSTAT=${PCPSTAT:-${COMOUT}/${RUN}.${cycle}.pcpstat}
export RADSTAT=${RADSTAT:-${COMOUT}/${RUN}.${cycle}.radstat}
export GSISTAT=${GSISTAT:-${COMOUT}/${RUN}.${cycle}.gsistat}
export CNVSTAT=${CNVSTAT:-${COMOUT}/${RUN}.${cycle}.cnvstat}
export OZNSTAT=${OZNSTAT:-${COMOUT}/${RUN}.${cycle}.oznstat}

#
# PDS Grid Designator
#
export IGEN=${IGEN:-82}

msg="HAS BEGUN on `hostname`"
./postmsg "$jlogfile" "$msg"

####################################
# Check if this is a restart
#
# Define Previous Guess File Names
####################################
if [ $RUN_GETGES = YES ]; then
  export gesenvir=${gesenvir:-$envir}
  $GETGESSH -t sfcges -r ${JCAP_ges}${LEVS_ges} -v $PDY$cyc -e $gesenvir -n gdas bges
err1=$?
  $GETGESSH -t sfcgm3 -r ${JCAP_ges}${LEVS_ges} -v $PDY$cyc -e $gesenvir -n gdas sfcgm3
  $GETGESSH -t sfcgp3 -r ${JCAP_ges}${LEVS_ges} -v $PDY$cyc -e $gesenvir -n gdas sfcgp3
  $GETGESSH -t biascr -r ${JCAP_ges}${LEVS_ges} -v $PDY$cyc -e $gesenvir -n gdas gbias
  $GETGESSH -t biascr_pc -r ${JCAP_ges}${LEVS_ges} -v $PDY$cyc -e $gesenvir -n gdas gbias_pc
  $GETGESSH -t radstat -r ${JCAP_ges}${LEVS_ges} -v $PDY$cyc -e $gesenvir -n gdas gradstat
fi

export SFCGES=${SFCGES:-$DATA/bges}
export SFCG03=${SFCG03:-$DATA/sfcgm3}
export SFCG09=${SFCG09:-$DATA/sfcgp3}
export GBIAS=${GBIAS:-$DATA/gbias}
export GBIASPC=${GBIASPC:-$DATA/gbias_pc}
export GRADSTAT=${GRADSTAT:-$DATA/gradstat}
export GESFIL=${GESFIL:-$DATA/gesfile}

if test "$err1" -eq '0'
then
   msg="Analysis Starting/Guess Fields Found"
   ./postmsg "$jlogfile" "$msg"

else
   msg="Analysis Cannot Start/Guess Fields Not Available"
   ./postmsg "$jlogfile" "$msg"
   export pgm=$job
   export err=911
   ./err_chk
fi

############################
if [[ -s $GESFIL ]]; then
   export GINCIN=$GESFIL
fi

# Set namelist jobs for hybrid 3dvar-ensemble analysis
if [[ "$DOHYBVAR" = "YES" ]]; then
   export HYBRID_ENSEMBLE="l_hyb_ens=.true.,n_ens=$NMEM_ENS,beta1_inv=0.25,s_ens_h=800.,s_ens_v=-0.8,generate_ens=.false.,uv_hyb_ens=.true.,jcap_ens=$JCAP_ENS,nlat_ens=$NLAT_ENS,nlon_ens=$NLON_ENS,aniso_a_en=.false.,jcap_ens_test=$JCAP_ENS,readin_localization=.true.,oz_univ_static=.true.,"
   export STRONGOPTS="tlnmc_option=2,"
fi

################################################################################
# Do not produce RAD, PCP, OZN, CNV diagnostic (STAT) files for GFS early analysis.
SETUPGFS=""
export USE_NEWRADBC=${USE_NEWRADBC:-YES}
export SETUP_NEWRADBC=${SETUP_NEWRADBC-'newpc4pred=.true.,adp_anglebc=.true.,angord=4,passive_bc=.true.,use_edges=.false.,diag_precon=.true.,step_start=1.e-3,emiss_bc=.true.,'}
if [[ "${RUN}" = 'gfs' ]]; then
  export SETUPGFS='diag_rad=.false.,diag_pcp=.false.,diag_conv=.false.,diag_ozone=.false.,write_diag(3)=.false.,'
fi 
export SETUP="$SETUPGFS $SETUP_NEWRADBC"

############################
# WCOSS environment settings

export MP_EAGER_LIMIT=65536
export MP_COREFILE_FORMAT=lite
export MP_EUIDEVELOP=min
export MP_EUIDEVICE=sn_all
export MP_EUILIB=us
export MP_MPILIB=mpich2

export MP_LABELIO=yes
export MP_USE_BULK_XFER=yes
export MP_SHARED_MEMORY=yes

export MPICH_ALLTOALL_THROTTLE=0
export MP_COLLECTIVE_OFFLOAD=no
export KMP_STACKSIZE=2048m

export NTHREADS_GSI=${NTHREADS_GSI:-4}
export NTHSTACK=1024000000                # stacks for fcst step; default 128000000
export NTHSTACK_GSI=1024000000            # stack size for anal, default=128000000

export OMP_NUM_THREADS_CY=32

export machine=WCOSS
##export APRUNCY=
export APRUN='mpirun.lsf'

env

#############################################################
# Execute the script
${ANALYSISSH:-$SCRGSI/exglobal_analysis.sh.ecf}
#############################################################

#export MP_PMDLOG=no
#poe rm -rf /tmp/mplog*

##########
# NOTES: 1) script exglobal_analysis.sh.ecf compresses the contents of
#           RADSTAT, PCPSTAT, OZNSTAT, and CNVSTAT.  These stat files
#           files are tarballs of compressed files.
#        2) SFCANL, SIGANL are input to the GFS forecast following the analysis
#        3) ABIAS is used in the following analysis cycle
#        4) GINCOUT from the GFS early cycle (GFS) is used as input in the
#           GFS late (GDAS) cycle
#        5) GSISTAT, RADSTAT, PCPSTAT, OZNSTAT, CNVSTAT are diagnostic output
##########

if test $SENDDBN = 'YES'
then
   $DBNROOT/bin/dbn_alert MODEL GDAS1_MSC_abias $job $COMOUT/${RUN}.${cycle}.abias
fi

cat $pgmout

grep memory $DATA/mpi*

echo "`hostname`  --  `date`" > $COMOUT/where_ibm_${RUN}_anal_ran.${cycle}

msg="ENDED NORMALLY."
./postmsg "$jlogfile" "$msg"

##############################
# Remove the Temporary working directory
##############################
cd $DATA_IN
if [ ${RM_TMPDIR:-YES} = YES ] ; then rm -rf $DATA ; fi

date
