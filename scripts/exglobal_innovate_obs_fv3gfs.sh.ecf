#!/bin/ksh
################################################################################
####  UNIX Script Documentation Block
#                      .                                             .
# Script name:         exglobal_innovate_obs_fv3gfs.sh.ecf
# Script description:  Compute global_gsi innovations
#
# Author: Rahul Mahajan     Org: NCEP/EMC     Date: 2017-03-02
#
# Abstract: This script computes global_gsi innovations
#
# $Id$
#
# Attributes:
#   Language: POSIX shell
#   Machine: WCOSS-Cray/Theia
#
################################################################################

# Set environment.
export VERBOSE=${VERBOSE:-"YES"}
if [ $VERBOSE = "YES" ]; then
   echo $(date) EXECUTING $0 $* >&2
   set -x
fi

# Directories.
pwd=$(pwd)
export HOMEDIR=${HOMEDIR:-$NWROOT}
export NWPROD=${NWPROD:-$HOMEDIR}
export BASE_GSI=${BASE_GSI:-$NWPROD}
export SCR_GSI=${SCR_GSI:-$BASE_GSI/scripts}
export DATA=${DATA:-$pwd}
export COMIN=${COMIN:-$pwd}
export COMIN_OBS=${COMIN_OBS:-$COMIN}
export COMIN_GES=${COMIN_GES:-$COMIN}
export COMIN_GES_ENS=${COMIN_GES_ENS:-$COMIN}
export COMOUT=${COMOUT:-$COMIN}

# Utilities
export NCP=${NCP:-"/bin/cp -p"}
export NLN=${NLN:-"/bin/ln -sf"}
export ERRSCRIPT=${ERRSCRIPT:-'eval [[ $err = 0 ]]'}

# Scripts.
export ANALYSISSH=${ANALYSISSH:-$SCR_GSI/exglobal_analysis_fv3gfs.sh.ecf}

# Prefix and Suffix Variables.
export OPREFIX=${OPREFIX:-${PREFIX:-""}}
export OSUFFIX=${OSUFFIX:-${SUFFIX:-""}}
export GPREFIX=${GPREFIX:-${PREFIX:-""}}
export GSUFFIX=${GSUFFIX:-${SUFFIX:-""}}
export APREFIX=${APREFIX:-${PREFIX:-""}}
export ASUFFIX=${ASUFFIX:-${SUFFIX:-""}}

# Files.
export GBIAS=${GBIAS:-${COMIN_GES}/${GPREFIX}abias}
export GBIASPC=${GBIASPC:-${COMIN_GES}/${GPREFIX}abias_pc}
export GBIASAIR=${GBIASAIR:-${COMIN_GES}/${GPREFIX}abias_air}
export GRADSTAT=${GRADSTAT:-${COMIN_GES}/${GPREFIX}radstat}
export SELECT_OBS=${SELECT_OBS:-$COMOUT/${APREFIX}obsinput.ensmean}

# Member
export MEMBER=${MEMBER:-"0"} # <-1: control member,  0: ensemble mean, >0: ensemble member $MEMBER

# Observation Operator GSI namelist initialization
export SETUP_ENKF=${SETUP_ENKF:-""}
export GRIDOPTS_ENKF=${GRIDOPTS_ENKF:-""}
export BKGVERR_ENKF=${BKGVERR_ENKF:-""}
export ANBKGERR_ENKF=${ANBKGERR_ENKF:-""}
export JCOPTS_ENKF=${JCOPTS_ENKF:-""}
export STRONGOPTS_ENKF=${STRONGOPTS_ENKF:-""}
export OBSQC_ENKF=${OBSQC_ENKF:-""}
export OBSINPUT_ENKF=${OBSINPUT_ENKF:-""}
export SUPERRAD_ENKF=${SUPERRAD_ENKF:-""}
export SINGLEOB_ENKF=${SINGLEOB_ENKF:-""}
export LAGDATA_ENKF=${LAGDATA_ENKF:-""}
export HYBRID_ENSEMBLE_ENKF=${HYBRID_ENSEMBLE_ENKF:-""}
export RAPIDREFRESH_CLDSURF_ENKF=${RAPIDREFRESH_CLDSURF_ENKF:-""}
export CHEM_ENKF=${CHEM_ENKF:-""}

################################################################################
#  Preprocessing
if [ ! -d $DATA ]; then mkdir -p $DATA; fi
cd $DATA || exit 8

################################################################################
# ObsInput file from ensemble mean
rm -f obs_input*
$NLN $SELECT_OBS obs_input.tar

################################################################################
# Special treatment when dealing with control (MEMBER<0) or ensemble mean (MEMBER=0)
if [ $MEMBER -le 0 ]; then
   memchar=""
   export DIAG_SUFFIX=""
   export RUN_SELECT="YES"
   export USE_SELECT="NO"
   lread_obs_save=".true."
   lread_obs_skip=".false."
   if [ $MEMBER -eq 0 ]; then
      export DIAG_SUFFIX="_ensmean"
      export GSUFFIX=".ensmean"
   fi
else
   memchar="mem"`printf %03i $MEMBER`
   export DIAG_SUFFIX="_"$memchar
   export RUN_SELECT="NO"
   export USE_SELECT="YES"
   lread_obs_save=".false."
   lread_obs_skip=".true."
fi

# Innovation Specific setup for ANALYSISSH
export DOHYBVAR="NO"
export DIAG_COMPRESS="NO"
export DIAG_TARBALL="YES"

# GSI Namelist options for observation operator only
export SETUP="miter=0,niter=1,lread_obs_save=$lread_obs_save,lread_obs_skip=$lread_obs_skip,lwrite_predterms=.true.,lwrite_peakwt=.true.,reduce_diag=.true.,$SETUP_ENKF"
export GRIDOPTS="$GRIDOPTS $GRIDOPTS_ENKF"
export BKGVERR="bkgv_flowdep=.false.,$BKGVERR_ENKF"
export ANBKGERR="$ANBKGERR $ANBKGERR_ENKF"
export JCOPTS="$JCOPTS $JCOPTS_ENKF"
export STRONGOPTS="tlnmc_option=0,nstrong=0,nvmodes_keep=0,baldiag_full=.false.,baldiag_inc=.false.,$STRONGOPTS_ENKF"
export OBSQC="tcp_width=60.0,tcp_ermin=2.0,tcp_ermax=12.0,$OBSQC_ENKF"
export OBSINPUT="dmesh(1)=225.0,dmesh(2)=225.0,$OBSINPUT_ENKF"
export SUPERRAD="$SUPERRAD $SUPERRAD_ENKF"
export SINGLEOB="$SINGLEOB $SINGLEOB_ENKF"
export LAGDATA="$LAGDATA $LAGDATA_ENKF"
export HYBRID_ENSEMBLE=""
export RAPIDREFRESH_CLDSURF="$RAPIDREFRESH_CLDSURF $RAPIDREFRESH_CLDSURF_ENKF"
export CHEM="$CHEM $CHEM_ENKF"

################################################################################
# Directories based on control or ensemble member
if [ $MEMBER -lt 0 ]; then
   export COMIN_GES=$COMIN_GES/$memchar
else
   export COMIN_GES=$COMIN_GES_ENS/$memchar
fi
export COMOUT=$COMOUT/$memchar

$ANALYSISSH

export ERR=$?
export err=$ERR
$ERRSCRIPT || exit 2

################################################################################
# Postprocessing
cd $pwd
[[ ${KEEPDATA:-"NO"} = "NO" ]]&& rm -rf $DATA
set +x
if [ $VERBOSE = "YES" ]; then
   echo $(date) EXITING $0 with return code $err >&2
fi
exit $err
