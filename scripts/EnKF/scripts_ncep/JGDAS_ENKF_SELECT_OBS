#!/bin/ksh

set -xa
##export MP_IOAGENT_CNT=all
##export MP_IO_BUFFER_SIZE=8M
#
# Specify whether the run is production or development
#
export RUN_ENVIR=${RUN_ENVIR:-prod}

#####################################################################################
# Run config file to get input parameters
# This config file should define the following variables
# DATA_IN: Location of working directory, default to /tmpnwprd
# DEV_ECF: If the job is to be running using ECF, default to YES
# SENDDBN: Set to NO for developers, default to NO
# COM_IN:  Directory for input files, default to /com/$NET/${envir}
# COM_OUT: Directory for output file, default to /com/$NET/${envir}
# gespath: Directory for the guess or restart files, default to /nwges/${envir}
#####################################################################################
if [ "$RUN_ENVIR" != prod ]      ### For Developers, "group_name" is passed from the ECF script
then
  . ${PARA_CONFIG:-/global/save/${LOGNAME}/2jif/q3fy12_hybrid/tests/para_config}
  export userid=$LOGNAME
  export DATA_IN=${DATA_IN:-/ptmp/$userid}
fi

###############################################################
# This block can be modified for different test environment
###############################################################
if [[ $RUN_ENVIR = prod && $envir != prod ]]; then
  export SENDDBN=${SENDDBN:-NO}
  export jlogfile=${jlogfile:-/com/logs/${envir}/jlogfile}
fi

#
####################################
# Specify NET and RUN Name and model
####################################
export NET=gfs
export RUN=enkf

####################################
# set up job name and  environment
####################################
export job=${job:-$RUN}
export envir=${envir:-prod}
export host=${host:-`hostname | cut -c1`}

###############################################

date
export PS4='$SECONDS + '

# ##############################################
# SETUP EnKF DATA SELECTION PROCESSING VARIABLES
# ##############################################

####################################
# obtain unique process id (pid) and make temp directory
####################################
export pid=${pid:-$$}
export DATA_IN=${DATA_IN:-/tmpnwprd}

export DATA=$DATA_IN/${job}.${pid}
mkdir -p $DATA
cd $DATA
#

####################################
# Determine Job Output Name on System
####################################
export cyc=${cyc:-00}
export outid="LL$job"
[ $envir != prod ]  && export outid="LL${job}_${envir}"
export jobid="${outid}.o${pid}"
export pgmout="OUTPUT.${pid}"
export pgmerr=errfile
export cycle=t${cyc}z

####################################
# SENDECF  - Flag Events on ECF
# SENDCOM  - Copy Files From TMPDIR to $COMOUT
# SENDDBN  - Issue DBNet Client Calls
# RERUN    - Rerun fcst from beginning (default no)
# VERBOSE  - Specify Verbose Output in exglobal_fcst.sh.ecf
####################################
export SAVEGES=${SAVEGES:-NO}
export SENDECF=${SENDECF:-YES}
export SENDCOM=${SENDCOM:-NO}
export SENDDBN=${SENDDBN:-NO}
export RERUN=${RERUN:-NO}
export VERBOSE=${VERBOSE:-YES}

#################################
# Define the Log File directory
#################################
export jlogfile=${jlogfile:-/com/logs/jlogfiles/jlogfile.${job}.${pid}}

####################################
# Specify Execution Areas
####################################
export HOMEGLOBAL=${HOMEGLOBAL:-/nw${envir}}
export EXECGLOBAL=${EXECGLOBAL:-$HOMEGLOBAL/exec}
export FIXGLOBAL=${FIXGLOBAL:-$HOMEGLOBAL/fix}
export USHGLOBAL=${USHGLOBAL:-$HOMEGLOBAL/ush}
export SCRGLOBAL=${SCRGLOBAL:-$HOMEGLOBAL/scripts}
export UTILGLOBAL=${UTILGLOBAL:-$HOMEGLOBAL/util}
export PARMGLOBAL=${PARMGLOBAL:-$HOMEGLOBAL/parm}

##############################
# Set up the UTILITIES
##############################
export utilscript=${utilscript:-$UTILGLOBAL/ush}
export utilexec=${utilexec:-$UTILGLOBAL/exec}
export NDATE=${NDATE:-$utilexec/ndate}

# Run setup to initialize working directory and utility scripts
##############################
$utilscript/setup.sh

err_chk=${err_chk:-$utilscript/err_chk.sh}
startmsg=${startmsg:-$utilscript/startmsg.sh}
ERRSCRIPT=${ERRSCRIPT:-$err_chk}
LOGSCRIPT=${LOGSCRIPT:-$startmsg}
export FILESTYLE=${FILESTYLE:-'L'}

##############################
# Run setpdy and initialize PDY variables
##############################
##export PDY=2012011006
$utilscript/setpdy.sh
. ./PDY

# Set CDATE and GDATE
export CDATE=${CDATE:-${PDY}${cyc}}
export GDATE=`$NDATE -06 $CDATE`
export PDYges=`echo $GDATE | cut -c1-8`
export CYCges=`echo $GDATE | cut -c9-10`

##############################################
# Define COM directories
##############################################
export COM_IN=${COM_IN:-/com/${NET}/${envir}}
export COM_OUT=${COM_OUT:-/com/${NET}/${envir}}

export COMIN=$COM_IN/enkf.${PDY}/$cyc
export COMOUT=$COM_OUT/enkf.${PDY}/$cyc
export COMINGDAS=${COMINGDAS:-$COM_IN/gdas.${PDY}}
export COMINGES=$COM_IN/enkf.${PDYges}/$CYCges

mkdir -m 775 -p $COMOUT

##############################################
# Define GES directories
##############################################
export gespath=${gespath:-/nwges/${envir}}
export GESdir=$gespath/gdas.$PDY
mkdir -m 775 -p $GESdir
####################################
# Specify Special Fcst Vars
####################################
#
# Set executable, script, fix
export GSIEXEC=${GSIEXEC:-$EXECGLOBAL/global_gsi}
export ANALYSISSH=${ANALYSISSH:-$SCRGLOBAL/exglobal_analysis.sh.ecf}

#Set hybrid and ensemble resolution parameters
export DOHYBVAR=${DOHYBVAR:-YES}
export DIAG_SUFFIX=${DIAG_SUFFIX:-"_ensmean"}
export DIAG_COMPRESS=${DIAG_COMPRESS:-NO}
export DIAG_TARBALL=${DIAG_TARBALL:-YES}
export RUN_SELECT=${RUN_SELECT:-YES}
export USE_SELECT=${USE_SELECT:-NO}

export NMEM_ENS=${NMEM_ENS:-80}

export JCAP_ENKF=${JCAP_ENKF:-254}
export LEVS_ENKF=${LEVS_ENKF:-64}
export LONB_ENKF=${LONB_ENKF:-768}
export LATB_ENKF=${LATB_ENKF:-384}
export LONA_ENKF=${LONA_ENKF:-512}
export LATA_ENKF=${LATA_ENKF:-256}
export DELTIM_ENKF=${DELTIM_ENKF:-300}

#
# Forecast Model Horizontal Resolution
#
export JCAP=${JCAP_ENKF:-254}
export JCAP_A=${JCAP_ENKF:-254}
export JCAP_ges=${JCAP_ENKF:-254}
export JCAP_HIRES=${JCAP_HIRES:-574}

#
# Forecast Model Vertical Resolution
#
export LEVS=${LEVS_ENKF:-64}
export LEVS_ges=${LEVS:-64}


#
# These defaults are for the T254L64
#
export LONA=${LONA_ENKF:-512}
export LATA=${LATA_ENKF:-256}
export LONB=${LONB_ENKF:-768}
export LATB=${LATB_ENKF:-384}

export NLAT=$(($LATA+2))
export NLON=$LONA
export NLON_A=$LONA
export NLAT_A=$(($LATA+2))

export LSOIL=${LSOIL:-4}

#
# Time Step
#
export DELTIM=${DELTIM_ENKF:-300}

#
# Analysis Fix Fields
#
export FNGLAC=${FNGLAC:-${FIXGLOBAL}/global_glacier.2x2.grb}
export FNMXIC=${FNMXIC:-${FIXGLOBAL}/global_maxice.2x2.grb}
export FNTSFC=${FNTSFC:-${FIXGLOBAL}/cfs_oi2sst1x1monclim19822001.grb}
export FNSNOC=${FNSNOC:-${FIXGLOBAL}/global_snoclim.1.875.grb}
export FNZORC=${FNZORC:-${FIXGLOBAL}/global_zorclim.1x1.grb}
export FNALBC=${FNALBC:-${FIXGLOBAL}/global_albedo4.1x1.grb}
export FNAISC=${FNAISC:-${FIXGLOBAL}/cfs_ice1x1monclim19822001.grb}
export FNTG3C=${FNTG3C:-${FIXGLOBAL}/global_tg3clim.2.6x1.5.grb}
export FNVEGC=${FNVEGC:-${FIXGLOBAL}/global_vegfrac.0.144.decpercent.grb}
export FNVETC=${FNVETC:-${FIXGLOBAL}/global_vegtype.1x1.grb}
export FNSOTC=${FNSOTC:-${FIXGLOBAL}/global_soiltype.1x1.grb}
export FNSMCC=${FNSMCC:-${FIXGLOBAL}/global_soilmcpc.1x1.grb}
export FNOROG=${FNOROG:-${FIXGLOBAL}/global_orography.t${JCAP}.grb}
export FNMASK=${FNMASK:-${FIXGLOBAL}/global_slmask.t${JCAP}.grb}
export OROGRAPHY=${OROGRAPHY:-${FIXGLOBAL}/global_orography.t${JCAP}.grb}
export SLMASK=${SLMASK:-${FIXGLOBAL}/global_slmask.t${JCAP}.grb}

export BERROR_ENKF=${BERROR_ENKF:-${FIXGLOBAL}/global_berror.l${LEVS}y${NLAT}.f77}
export BERROR=${BERROR_ENKF:-${FIXGLOBAL}/global_berror.l${LEVS}y${NLAT}.f77}
export SATANGL=${SATANGL:-${FIXGLOBAL}/global_satangbias.txt}
export SATINFO=${SATINFO:-${FIXGLOBAL}/global_satinfo.txt}
export ATMSFILTER=${ATMSFILTER:-${FIXGLOBAL}/atms_beamwidth.txt}
export ANAVINFO=${ANAVINFO:-${FIXGLOBAL}/global_anavinfo.l${LEVS}.txt}
export CONVINFO=${CONVINFO:-${FIXGLOBAL}/global_convinfo.txt}
export OZINFO=${OZINFO:-${FIXGLOBAL}/global_ozinfo.txt}
export PCPINFO=${PCPINFO:-${FIXGLOBAL}/global_pcpinfo.txt}
export AEROINFO=${AEROINFO:-${FIXGLOBAL}/global_aeroinfo.txt}
export SCANINFO=${SCANINFO:-${FIXGLOBAL}/global_scaninfo.txt}
export HYBENSINFO=${HYBENSINFO:-${FIXGLOBAL}/global_hybens_locinfo.l${LEVS}.txt}
export OBERROR=${OBERROR:-${FIXGLOBAL}/prepobs_errtable.global}

export RTMFIX=${RTMFIX:-${FIXGLOBAL}/crtm_2.0.5}


#
# Analysis Input Fields
#
export PREINPGDAS=${PREINPGDAS:-gdas1.${cycle}.}

export FNTSFA=${FNTSFA:-${COMINGDAS}/${PREINPGDAS}sstgrb}
export FNACNA=${FNACNA:-${COMINGDAS}/${PREINPGDAS}engicegrb}
export FNSNOA=${FNSNOA:-${COMINGDAS}/${PREINPGDAS}snogrb_t574}

export PREPQC=${PREPQC:-${COMINGDAS}/${PREINPGDAS}prepbufr}

export GSNDBF=${GSNDBF:-${COMINGDAS}/${PREINPGDAS}goesnd.tm00.bufr_d}
export GSNDBF1=${GSNDBF1:-${COMINGDAS}/${PREINPGDAS}goesfv.tm00.bufr_d}
export B1HRS2=${B1HRS2:-${COMINGDAS}/${PREINPGDAS}1bhrs2.tm00.bufr_d}
export B1MSU=${B1MSU:-${COMINGDAS}/${PREINPGDAS}1bmsu.tm00.bufr_d}
export B1HRS3=${B1HRS3:-${COMINGDAS}/${PREINPGDAS}1bhrs3.tm00.bufr_d}
export B1AMUA=${B1AMUA:-${COMINGDAS}/${PREINPGDAS}1bamua.tm00.bufr_d}
export B1AMUB=${B1AMUB:-${COMINGDAS}/${PREINPGDAS}1bamub.tm00.bufr_d}
export B1HRS4=${B1HRS4:-${COMINGDAS}/${PREINPGDAS}1bhrs4.tm00.bufr_d}
export B1MHS=${B1MHS:-${COMINGDAS}/${PREINPGDAS}1bmhs.tm00.bufr_d}
export ESHRS3=${ESHRS3:-${COMINGDAS}/${PREINPGDAS}eshrs3.tm00.bufr_d}
export ESAMUA=${ESAMUA:-${COMINGDAS}/${PREINPGDAS}esamua.tm00.bufr_d}
export ESAMUB=${ESAMUB:-${COMINGDAS}/${PREINPGDAS}esamub.tm00.bufr_d}
export AIRSBF=${AIRSBF:-${COMINGDAS}/${PREINPGDAS}airsev.tm00.bufr_d}
export IASIBF=${IASIBF:-${COMINGDAS}/${PREINPGDAS}mtiasi.tm00.bufr_d}
export SEVIRIBF=${SEVIRIBF:-${COMINGDAS}/${PREINPGDAS}sevcsr.tm00.bufr_d}
export ATMSBF=${ATMSBF:-${COMINGDAS}/${PREINPGDAS}atms.tm00.bufr_d}
export CRISBF=${CRISBF:-${COMINGDAS}/${PREINPGDAS}cris.tm00.bufr_d}
export SBUVBF=${SBUVBF:-${COMINGDAS}/${PREINPGDAS}osbuv8.tm00.bufr_d}
export GOMEBF=${GOMEBF:-${COMINGDAS}/${PREINPGDAS}gome.tm00.bufr_d}
export OMIBF=${OMIBF:-${COMINGDAS}/${PREINPGDAS}omi.tm00.bufr_d}
export MLSBF=${MLSBF:-${COMINGDAS}/${PREINPGDAS}mls.tm00.bufr_d}
export GPSROBF=${GPSROBF:-${COMINGDAS}/${PREINPGDAS}gpsro.tm00.bufr_d}
export TCVITL=${TCVITL:-${COMINGDAS}/${PREINPGDAS}syndata.tcvitals.tm00}
export SATWND=${SATWND:-${COMINGDAS}/${PREINPGDAS}satwnd.tm00.bufr_d}
# EnKF does not process precipitation rate data
##export SMIPCP=${SMIPCP:-${COMINGDAS}/${PREINPGDAS}spssmi.tm00.bufr_d}
##export TMIPCP=${TMIPCP:-${COMINGDAS}/${PREINPGDAS}sptrmm.tm00.bufr_d}
export SMIPCP=/dev/null
export TMIPCP=/dev/null

export SIGGES=${SIGGES:-${COMINGES}/sfg_${GDATE}_fhr06_ensmean}
export SIGG03=${SIGG03:-${COMINGES}/sfg_${GDATE}_fhr03_ensmean}
export SIGG04=${SIGG04:-${COMINGES}/sfg_${GDATE}_fhr04_ensmean}
export SIGG05=${SIGG05:-${COMINGES}/sfg_${GDATE}_fhr05_ensmean}
export SIGG06=${SIGG06:-${COMINGES}/sfg_${GDATE}_fhr06_ensmean}
export SIGG07=${SIGG07:-${COMINGES}/sfg_${GDATE}_fhr07_ensmean}
export SIGG08=${SIGG08:-${COMINGES}/sfg_${GDATE}_fhr08_ensmean}
export SIGG09=${SIGG09:-${COMINGES}/sfg_${GDATE}_fhr09_ensmean}

export SFCGES=${SFCGES:-${COMINGES}/bfg_${GDATE}_fhr06_ensmean}
export SFCG03=${SFCG03:-${COMINGES}/bfg_${GDATE}_fhr03_ensmean}
export SFCG04=${SFCG04:-${COMINGES}/bfg_${GDATE}_fhr04_ensmean}
export SFCG05=${SFCG05:-${COMINGES}/bfg_${GDATE}_fhr05_ensmean}
export SFCG06=${SFCG06:-${COMINGES}/bfg_${GDATE}_fhr06_ensmean}
export SFCG07=${SFCG07:-${COMINGES}/bfg_${GDATE}_fhr07_ensmean}
export SFCG08=${SFCG08:-${COMINGES}/bfg_${GDATE}_fhr08_ensmean}
export SFCG09=${SFCG09:-${COMINGES}/bfg_${GDATE}_fhr09_ensmean}


# Set non-assimilated obs fles as /dev/null to prevent reading
# added 11/2008 by wx11sc to decrease run time, since SSMI and AMSRE are
# not assimilated
export AMSREBF=${AMSREBF:-/dev/null}
export SSMITBF=${SSMITBF:-/dev/null}

############################################################################ 
#
# Check grib date of current snogrb vs that of prev cycle 
#
# if cdate_of_snogrb -le cdate_of_snoprv, i.e. file has not been updated 
#   then set namelist input to CYCLEXEC to use the snow from the guess
#   FNSNOA=" ";CYCLVARS="FSNOL=99999.,FSNOS=99999.,"
#   FNSNOA is the name of the snow depth  analysis file 
#     when not supplied, signals to CYCLEXEC to blend guess and climatology
#     (Note: file must be " ", not "" or the shell syntax for default
#      values X=${X:-default} will reset to default if X="")
#     FSNOL=99999.,FSNOS=99999., sets the blending of guess and climo to
#		use 100% guess
#
####################################
prev_cdate=$($utilexec/ndate -6 ${PDY}$cyc)
wgrib=$utilexec/wgrib
RUN_GETGES=${RUN_GETGES:-YES}        # Set to NO if not running getges.sh
if [ $RUN_GETGES = YES ]; then
 GETGESSH=${GETGESSH:-$utilscript/getges.sh}
 export gesenvir=${envir}
 snoprv=$($GETGESSH -q -t snogrb_$JCAP_HIRES -e $gesenvir -n gdas -v $prev_cdate)
else
 snoprv=${snoprv:-$FNSNOG}
fi
if [ `$wgrib -4yr ${FNSNOA} 2>/dev/null|grep -i snowc |\
	  awk -F: '{print $3}'|awk -F= '{print $2}'` -le \
     `$wgrib -4yr $snoprv 2>/dev/null |grep -i snowc  |\
			awk -F: '{print $3}'|awk -F= '{print $2}'` ] ; then
	export FNSNOA=" "
	export CYCLVARS="FSNOL=99999.,FSNOS=99999.,"
fi

############################################################################ 
#
# Output File Names

export SIGANL=/dev/null
export ABIAS=/dev/null

export SFCANL=${SFCANL:-$COMOUT/sfcanl_${CDATE}_ensmean}
export GSISTAT=${GSISTAT:-${COMOUT}/gsistat_${CDATE}_ensmean}
export CNVSTAT=${CNVSTAT:-${COMOUT}/cnvstat_${CDATE}_ensmean}
export OZNSTAT=${OZNSTAT:-${COMOUT}/oznstat_${CDATE}_ensmean}
export PCPSTAT=${PCPSTAT:-${COMOUT}/pcpstat_${CDATE}_ensmean}
export RADSTAT=${RADSTAT:-${COMOUT}/radstat_${CDATE}_ensmean}
export SELECT_OBS=${SELECT_OBS:-${COMOUT}/obsinput_${CDATE}_ensmean}


#
# PDS Grid Designator
# What IGEN to use for GDAS EnKF?
export IGEN=${IGEN:-82}

msg="HAS BEGUN on `hostname`"
./postmsg "$jlogfile" "$msg"

####################################
# Check if this is a restart
#
# Define Previous Guess File Names (dev users must provide from outside)
####################################
if [ $RUN_GETGES = YES ]; then
  gesenvir=${gesenvir:-$envir}

  $GETGESSH -t biascr -r ${JCAP_ges}$LEVS_ges -v ${PDY}$cyc -e $gesenvir -n gdas gbias
err1=$?
  $GETGESSH -t satang -r ${JCAP_ges}$LEVS_ges -v ${PDY}$cyc -e $gesenvir -n gdas gsatang
fi

export GBIAS=${GBIAS:-$DATA/gbias}
export GSATANG=${GSATANG:-$DATA/gsatang}
export GBIASPC=${GBIASPC:-/dev/null}


if [ $err1 -eq 0 ] ; then
   msg="Analysis Starting/Guess Fields Found"
   ./postmsg "$jlogfile" "$msg"
else
   msg="Analysis Cannot Start/Guess Fields Not Available"
   ./postmsg "$jlogfile" "$msg"
   export pgm=$job
   export err=911
   ./err_chk
fi

############################
# Make use of updated angle dependent bias file, if it exists.
if [[ -s $GSATANG ]]; then
   export SATANGL=$GSATANG
fi


# Set namelist jobs for ensemble data selection
if [[ "$DOHYBVAR" = "YES" ]]; then
   export HYBRID_ENSEMBLE="l_hyb_ens=.true.,n_ens=$NMEM_ENS,beta1_inv=0.25,s_ens_h=800.,s_ens_v=-0.8,generate_ens=.false.,uv_hyb_ens=.true.,jcap_ens=$JCAP_ENS,nlat_ens=$NLAT_ENS,nlon_ens=$NLON_ENS,aniso_a_en=.false.,jcap_ens_test=$JCAP_ENS,readin_localization=.true.,oz_univ_static=.true.,"
fi

export SETUP="miter=0,niter=1,lread_obs_save=.true.,lread_obs_skip=.false.,lwrite_predterms=.true.,lwrite_peakwt=.true.,reduce_diag=.true.,passive_bc=.false.,"
export BKGVERR="bkgv_flowdep=.false.,"
export STRONGOPTS="tlnmc_option=0,nstrong=0,nvmodes_keep=0,baldiag_full=.false.,baldiag_inc=.false.,"
export OBSQC="tcp_width=60.0,tcp_ermin=2.0,tcp_ermax=12.0,"
export OBSINPUT="dmesh(1)=225.0,dmesh(2)=225.0,"
export HYBRID_ENSEMBLE=" "


############################
# WCOSS environment settings
##export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usrx/local/netcdf-3.6.3/lib

export MP_EAGER_LIMIT=65536
export MP_COREFILE_FORMAT=lite
export MP_EUIDEVELOP=min
export MP_EUIDEVICE=sn_all
export MP_EUILIB=us
export MP_MPILIB=mpich2

export MP_LABELIO=yes
export MP_USE_BULK_XFER=yes
export MP_SHARED_MEMORY=yes
export MPICH_ALLTOALL_THROTTLE=0
export MP_COLLECTIVE_OFFLOAD=yes
export KMP_STACKSIZE=1024m

export NTHREADS_GSI=${NTHREADS_GSI:-2}
export MP_TASK_AFFINITY=${MP_TASK_AFFINITY:-cpu:$NTHREADS_GSI}

export machine=WCOSS
##export APRUNCY=
export APRUN='mpirun.lsf'



env

#############################################################
# Execute the script
${ANALYSISSH:-$SCRGLOBAL/exglobal_analysis.sh.ecf}
#############################################################

##########
# NOTES: 1) script exglobal_analysis.sh.ecf compresses the contents of
#           RADSTAT, PCPSTAT, OZNSTAT, and CNVSTAT.  These stat files
#           files are tarballs of compressed files.
##########

if [ $SENDDBN = YES ] ; then
   $DBNROOT/bin/dbn_alert MODEL ENKF1_MSC_gsistat $job $COMOUT/gsistat_${CDATE}_ensmean
fi

cat $pgmout

grep memory $DATA/mpi*

msg="ENDED NORMALLY."
./postmsg "$jlogfile" "$msg"

##############################
# Remove the Temporary working directory
##############################
cd $DATA_IN
if [ ${RM_TMPDIR:-YES} = YES ] ; then rm -rf $DATA ; fi

date
