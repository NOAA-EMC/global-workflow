#!/bin/ksh

set -xa
#
# Specify whether the run is production or development
#
export RUN_ENVIR=${RUN_ENVIR:-prod}

#####################################################################################
# Run config file to get input parameters
# This config file should define the following variables
# DATA_IN: Location of working directory, default to /tmpnwprd2
# DEV_ECF: If the job is to be running using ECF, default to YES
# SENDDBN: Set to NO for developers, default to NO
# COM_IN:  Directory for input files, default to /com/$NET/${envir}
# COM_OUT: Directory for output file, default to /com/$NET/${envir}
# gespath: Directory for the guess or restart files, default to /nwges/${envir}
#####################################################################################
if [ "$RUN_ENVIR" != prod ]      ### For Developers, "group_name" is passed from the ECF script
then
  . ${PARA_CONFIG:-/global/save/${LOGNAME}/2jif/q3fy12_hybrid/tests/para_config}
  export userid=$LOGNAME
  export DATA_IN=${DATA_IN:-/ptmp/$userid}
fi

###############################################################
# This block can be modified for different test environment
###############################################################
if [[ $RUN_ENVIR = prod && $envir != prod ]]; then
  export DBNROOT=/nwprod/spa_util/fakedbn
  export jlogfile=${jlogfile:-/com/logs/${envir}/jlogfile}
fi

#
####################################
# Specify NET and RUN Name and model
####################################
export NET=gfs
export RUN=enkf

####################################
# Specify version numbers
####################################
export crtm_ver=${crtm_ver:-v2.2.1}
export gdas_ver=${gdas_ver:-v1.0.0}
export global_shared_ver=${global_shared_ver:-v1.0.0}
export gsm_ver=${gsm_ver:-v12.0.0}
export util_ver=${util_ver:-v1.0.0}

####################################
# set up job name and  environment
####################################
export job=${job:-$RUN}
export envir=${envir:-prod}
export host=${host:-`hostname | cut -c1`}

###############################################

date
export PS4='$SECONDS + '

# ##############################################
# SETUP EnKF DATA SELECTION PROCESSING VARIABLES
# ##############################################

####################################
# obtain unique process id (pid) and make temp directory
####################################
export pid=${pid:-$$}
export DATA_IN=${DATA_IN:-/tmpnwprd2}

export DATA=$DATA_IN/${job}.${pid}
mkdir -p $DATA
cd $DATA
#

####################################
# Determine Job Output Name on System
####################################
export cyc=${cyc:-00}
export outid="LL$job"
[ $envir != prod ]  && export outid="LL${job}_${envir}"
export jobid="${outid}.o${pid}"
export pgmout="OUTPUT.${pid}"
export pgmerr=errfile
export cycle=t${cyc}z

####################################
# SENDECF  - Flag Events on ECF
# SENDCOM  - Copy Files From TMPDIR to $COMOUT
# SENDDBN  - Issue DBNet Client Calls
# RERUN    - Rerun fcst from beginning (default no)
# VERBOSE  - Specify Verbose Output in exglobal_fcst.sh.ecf
####################################
export SAVEGES=${SAVEGES:-NO}
export SENDECF=${SENDECF:-YES}
export SENDCOM=${SENDCOM:-NO}
export SENDDBN=${SENDDBN:-YES}
export RERUN=${RERUN:-NO}
export VERBOSE=${VERBOSE:-YES}

#################################
# Define the Log File directory
#################################
export jlogfile=${jlogfile:-/com/logs/jlogfiles/jlogfile.${job}.${pid}}

####################################
# Specify Execution Areas
####################################
export HOMEGLOBAL=${HOMEGLOBAL:-/nw${envir}/gsm.$gsm_ver}
export EXECGLOBAL=${EXECGLOBAL:-$HOMEGLOBAL/exec}
export FIXGLOBAL=${FIXGLOBAL:-$HOMEGLOBAL/fix/fix_am}
export USHGLOBAL=${USHGLOBAL:-$HOMEGLOBAL/ush}
export SCRGLOBAL=${SCRGLOBAL:-$HOMEGLOBAL/scripts}
export UTILGLOBAL=${UTILGLOBAL:-$HOMEGLOBAL/util}
export PARMGLOBAL=${PARMGLOBAL:-$HOMEGLOBAL/parm}

export HOMEGSM=${HOMEGSM:-/nw${envir}/gsm.$gsm_ver}
export EXECGSM=${EXECGSM:-$HOMEGSM/exec}
export FIXGSM=${FIXGSM:-$HOMEGSM/fix/fix_am}
export USHGSM=${USHGSM:-$HOMEGSM/ush}
export SCRGSM=${SCRGSM:-$HOMEGSM/scripts}
export UTILGSM=${UTILGSM:-$HOMEGSM/util}
export PARMGSM=${PARMGSM:-$HOMEGSM/parm/parm_am}

export HOMEGSI=${HOMEGSI:-/nw${envir}/global_shared.$global_shared_ver}
export EXECGSI=${EXECGSI:-$HOMEGSI/exec}
export FIXGSI=${FIXGSI:-$HOMEGSI/fix}
export SCRGSI=${SCRGSI:-$HOMEGSI/scripts}

export HOMEUTIL=${HOMEUTIL:-/nw${envir}/util.${util_ver}}
export EXECUTIL=${EXECUTIL:-$HOMEUTIL/exec}
export FIXUTIL=${FIXUTIL:-$HOMEUTIL/fix}
export PARMUTIL=${PARMUTIL:-$HOMEUTIL/parm}
export SCRUTIL=${SCRUTIL:-$HOMEUTIL/scripts}
export USHUTIL=${USHUTIL:-$HOMEUTIL/ush}

##############################
# Set up the UTILITIES
##############################
export utilscript=${utilscript:-$USHUTIL}
export utilexec=${utilexec:-$EXECUTIL}
export NDATE=${NDATE:-$utilexec/ndate}

# Run setup to initialize working directory and utility scripts
##############################
$utilscript/setup.sh

err_chk=${err_chk:-$utilscript/err_chk.sh}
startmsg=${startmsg:-$utilscript/startmsg.sh}
ERRSCRIPT=${ERRSCRIPT:-$err_chk}
LOGSCRIPT=${LOGSCRIPT:-$startmsg}
export FILESTYLE=${FILESTYLE:-'L'}

##############################
# Run setpdy and initialize PDY variables
##############################
$utilscript/setpdy.sh
. ./PDY

# Set CDATE and GDATE
export CDATE=${CDATE:-${PDY}${cyc}}
export GDATE=`$NDATE -06 $CDATE`
export PDYges=`echo $GDATE | cut -c1-8`
export CYCges=`echo $GDATE | cut -c9-10`

##############################################
# Define COM directories
##############################################
export COM_IN=${COM_IN:-/com/${NET}/${envir}}
export COM_OUT=${COM_OUT:-/com/${NET}/${envir}}

export COMIN=$COM_IN/enkf.${PDY}/$cyc
export COMOUT=$COM_OUT/enkf.${PDY}/$cyc
export COMINGDAS=${COMINGDAS:-$COM_IN/gdas.${PDY}}
export COMINGES=$COM_IN/enkf.${PDYges}/$CYCges

mkdir -m 775 -p $COMOUT

##############################################
# Define GES directories
##############################################
export gespath=${gespath:-/nwges/${envir}}
export GESdir=$gespath/gdas.$PDY
mkdir -m 775 -p $GESdir
####################################
# Specify Special Fcst Vars
####################################
#
# Set executable, script, fix
export GSIEXEC=${GSIEXEC:-$EXECGSI/global_gsi}
export ANALYSISSH=${ANALYSISSH:-$SCRGSI/exglobal_analysis.sh.ecf}

#Set hybrid and ensemble resolution parameters
export DOHYBVAR=${DOHYBVAR:-YES}
export DIAG_SUFFIX=${DIAG_SUFFIX:-"_ensmean"}
export DIAG_COMPRESS=${DIAG_COMPRESS:-NO}
export DIAG_TARBALL=${DIAG_TARBALL:-YES}
export RUN_SELECT=${RUN_SELECT:-YES}
export USE_SELECT=${USE_SELECT:-NO}

export NMEM_ENS=${NMEM_ENS:-80}

export JCAP_ENKF=${JCAP_ENKF:-574}
export LEVS_ENKF=${LEVS_ENKF:-64}
export LONB_ENKF=${LONB_ENKF:-1152}
export LATB_ENKF=${LATB_ENKF:-576}
export LONA_ENKF=${LONA_ENKF:-1152}
export LATA_ENKF=${LATA_ENKF:-576}
export DELTIM_ENKF=${DELTIM_ENKF:-900}

#
# Forecast Model Horizontal Resolution
#
export JCAP=${JCAP_ENKF:-574}
export JCAP_A=${JCAP_ENKF:-574}
export JCAP_ges=${JCAP_ENKF:-574}
export JCAP_HIRES=${JCAP_HIRES:-1534}

#
# Forecast Model Vertical Resolution
#
export LEVS=${LEVS_ENKF:-64}
export LEVS_ges=${LEVS:-64}


#
# These defaults are for the T254L64
#
export LONA=${LONA_ENKF:-1152}
export LATA=${LATA_ENKF:-576}
export LONB=${LONB_ENKF:-1152}
export LATB=${LATB_ENKF:-576}

export NLAT=$(($LATA+2))
export NLON=$LONA
export NLON_A=$LONA
export NLAT_A=$(($LATA+2))

export LSOIL=${LSOIL:-4}

#
# Time Step
#
export DELTIM=${DELTIM_ENKF:-900}

#
# Surface cycle
#
export use_ufo=${use_ufo:-.true.}
export SNOW_NUDGE_COEFF=${SNOW_NUDGE_COEFF:-'-2.'}

#
# Analysis Fix Fields
#
export FNGLAC=${FNGLAC:-${FIXGSM}/global_glacier.2x2.grb}
export FNMXIC=${FNMXIC:-${FIXGSM}/global_maxice.2x2.grb}
export FNTSFC=${FNTSFC:-$FIXGSM/RTGSST.1982.2012.monthly.clim.grb}
export FNSNOC=${FNSNOC:-${FIXGSM}/global_snoclim.1.875.grb}
export FNZORC=${FNZORC:-'sib'}
export FNALBC=${FNALBC:-${FIXGSM}/global_albedo4.1x1.grb}
export FNAISC=${FNAISC:-${FIXGSM}/CFSR.SEAICE.1982.2012.monthly.clim.grb}
export FNTG3C=${FNTG3C:-${FIXGSM}/global_tg3clim.2.6x1.5.grb}
export FNVEGC=${FNVEGC:-${FIXGSM}/global_vegfrac.0.144.decpercent.grb}
export FNVETC=${FNVETC:-${FIXGSM}/global_vegtype.1x1.grb}
export FNSOTC=${FNSOTC:-${FIXGSM}/global_soiltype.1x1.grb}
export FNSMCC=${FNSMCC:-${FIXGSM}/global_soilmgldas.t${JCAP}.$LONB.$LATB.grb}
export FNOROG=${FNOROG:-${FIXGSM}/global_orography.t${JCAP}.$LONB.$LATB.grb}
export FNMASK=${FNMASK:-${FIXGSM}/global_slmask.t${JCAP}.$LONB.$LATB.grb}
export OROGRAPHY=${OROGRAPHY:-${FIXGSM}/global_orography.t${JCAP}.$LONB.$LATB.grb}
export OROGRAPHY_UF=${OROGRAPHY_UF:-${FIXGSM}/global_orography_uf.t${JCAP}.$LONB.$LATB.grb}
export SLMASK=${SLMASK:-${FIXGSM}/global_slmask.t${JCAP}.$LONB.$LATB.grb}

export BERROR_ENKF=${BERROR_ENKF:-${FIXGSI}/Big_Endian/global_berror.l${LEVS}y${NLAT}.f77}
export BERROR=${BERROR_ENKF:-${FIXGSI}/global_berror.l${LEVS}y${NLAT}.f77}
export SATANGL=${SATANGL:-${FIXGSI}/global_satangbias.txt}
export SATINFO=${SATINFO:-${FIXGSI}/global_satinfo.txt}
export ATMSFILTER=${ATMSFILTER:-${FIXGSI}/atms_beamwidth.txt}
export ANAVINFO=${ANAVINFO:-${FIXGSI}/global_anavinfo.l${LEVS}.txt}
export CONVINFO=${CONVINFO:-${FIXGSI}/global_convinfo.txt}
export OZINFO=${OZINFO:-${FIXGSI}/global_ozinfo.txt}
export PCPINFO=${PCPINFO:-${FIXGSI}/global_pcpinfo.txt}
export AEROINFO=${AEROINFO:-${FIXGSI}/global_aeroinfo.txt}
export SCANINFO=${SCANINFO:-${FIXGSI}/global_scaninfo.txt}
export HYBENSINFO=${HYBENSINFO:-${FIXGSI}/global_hybens_locinfo.l${LEVS}.txt}
export OBERROR=${OBERROR:-${FIXGSI}/prepobs_errtable.global}

export RTMFIX=${RTMFIX:-/nw${envir}/fix/crtm_${crtm_ver}}


#
# Analysis Input Fields
#
export PREINPGDAS=${PREINPGDAS:-gdas1.${cycle}.}

export FNTSFA=${FNTSFA:-${COMINGDAS}/${PREINPGDAS}rtgssthr.grb}
export FNACNA=${FNACNA:-${COMINGDAS}/${PREINPGDAS}seaice.5min.blend.grb}
export FNSNOA=${FNSNOA:-${COMINGDAS}/${PREINPGDAS}snogrb_t${JCAP}.${LONB}.${LATB}}

export PREPQC=${PREPQC:-${COMINGDAS}/${PREINPGDAS}prepbufr}
export PREPQCPF=${PREPQCPF:-${COMINGDAS}/${PREINPGDAS}prepbufr.acft_profiles}

export GSNDBF=${GSNDBF:-${COMINGDAS}/${PREINPGDAS}goesnd.tm00.bufr_d}
export GSNDBF1=${GSNDBF1:-${COMINGDAS}/${PREINPGDAS}goesfv.tm00.bufr_d}
export B1HRS2=${B1HRS2:-${COMINGDAS}/${PREINPGDAS}1bhrs2.tm00.bufr_d}
export B1MSU=${B1MSU:-${COMINGDAS}/${PREINPGDAS}1bmsu.tm00.bufr_d}
export B1HRS3=${B1HRS3:-${COMINGDAS}/${PREINPGDAS}1bhrs3.tm00.bufr_d}
export B1AMUA=${B1AMUA:-${COMINGDAS}/${PREINPGDAS}1bamua.tm00.bufr_d}
export B1AMUB=${B1AMUB:-${COMINGDAS}/${PREINPGDAS}1bamub.tm00.bufr_d}
export B1HRS4=${B1HRS4:-${COMINGDAS}/${PREINPGDAS}1bhrs4.tm00.bufr_d}
export B1MHS=${B1MHS:-${COMINGDAS}/${PREINPGDAS}1bmhs.tm00.bufr_d}
export ESHRS3=${ESHRS3:-${COMINGDAS}/${PREINPGDAS}eshrs3.tm00.bufr_d}
export ESAMUA=${ESAMUA:-${COMINGDAS}/${PREINPGDAS}esamua.tm00.bufr_d}
export ESAMUB=${ESAMUB:-${COMINGDAS}/${PREINPGDAS}esamub.tm00.bufr_d}
export AIRSBF=${AIRSBF:-${COMINGDAS}/${PREINPGDAS}airsev.tm00.bufr_d}
export IASIBF=${IASIBF:-${COMINGDAS}/${PREINPGDAS}mtiasi.tm00.bufr_d}
export SEVIRIBF=${SEVIRIBF:-${COMINGDAS}/${PREINPGDAS}sevcsr.tm00.bufr_d}
export ATMSBF=${ATMSBF:-${COMINGDAS}/${PREINPGDAS}atms.tm00.bufr_d}
export SSMISBF=${SSMISBF:-${COMINGDAS}/${PREINPGDAS}ssmisu.tm00.bufr_d}
export CRISBF=${CRISBF:-${COMINGDAS}/${PREINPGDAS}cris.tm00.bufr_d}
export SBUVBF=${SBUVBF:-${COMINGDAS}/${PREINPGDAS}osbuv8.tm00.bufr_d}
export GOMEBF=${GOMEBF:-${COMINGDAS}/${PREINPGDAS}gome.tm00.bufr_d}
export OMIBF=${OMIBF:-${COMINGDAS}/${PREINPGDAS}omi.tm00.bufr_d}
export MLSBF=${MLSBF:-${COMINGDAS}/${PREINPGDAS}mls.tm00.bufr_d}
export GPSROBF=${GPSROBF:-${COMINGDAS}/${PREINPGDAS}gpsro.tm00.bufr_d}
export TCVITL=${TCVITL:-${COMINGDAS}/${PREINPGDAS}syndata.tcvitals.tm00}
export SATWND=${SATWND:-${COMINGDAS}/${PREINPGDAS}satwnd.tm00.bufr_d}
export SMIPCP=/dev/null
export TMIPCP=/dev/null

export SIGGES=${SIGGES:-${COMINGES}/sfg_${GDATE}_fhr06_ensmean}
export SIGG03=${SIGG03:-${COMINGES}/sfg_${GDATE}_fhr03_ensmean}
export SIGG04=${SIGG04:-${COMINGES}/sfg_${GDATE}_fhr04_ensmean}
export SIGG05=${SIGG05:-${COMINGES}/sfg_${GDATE}_fhr05_ensmean}
export SIGG06=${SIGG06:-${COMINGES}/sfg_${GDATE}_fhr06_ensmean}
export SIGG07=${SIGG07:-${COMINGES}/sfg_${GDATE}_fhr07_ensmean}
export SIGG08=${SIGG08:-${COMINGES}/sfg_${GDATE}_fhr08_ensmean}
export SIGG09=${SIGG09:-${COMINGES}/sfg_${GDATE}_fhr09_ensmean}

export SFCGES=${SFCGES:-${COMINGES}/bfg_${GDATE}_fhr06_ensmean}
export SFCG03=${SFCG03:-${COMINGES}/bfg_${GDATE}_fhr03_ensmean}
export SFCG04=${SFCG04:-${COMINGES}/bfg_${GDATE}_fhr04_ensmean}
export SFCG05=${SFCG05:-${COMINGES}/bfg_${GDATE}_fhr05_ensmean}
export SFCG06=${SFCG06:-${COMINGES}/bfg_${GDATE}_fhr06_ensmean}
export SFCG07=${SFCG07:-${COMINGES}/bfg_${GDATE}_fhr07_ensmean}
export SFCG08=${SFCG08:-${COMINGES}/bfg_${GDATE}_fhr08_ensmean}
export SFCG09=${SFCG09:-${COMINGES}/bfg_${GDATE}_fhr09_ensmean}

export NSTGES=${NSTGES:-/dev/null}

# Set non-assimilated obs fles as /dev/null to prevent reading
export GSNDBF=${GSNDBF:-/dev/null}
export AMSREBF=${AMSREBF:-/dev/null}
export SSMITBF=${SSMITBF:-/dev/null}

############################################################################ 
#
# Check grib date of current snogrb vs that of prev cycle 
#
# if cdate_of_snogrb -le cdate_of_snoprv, i.e. file has not been updated 
#   then set namelist input to CYCLEXEC to use the snow from the guess
#   FNSNOA=" ";CYCLVARS="FSNOL=99999.,FSNOS=99999.,"
#   FNSNOA is the name of the snow depth  analysis file 
#     when not supplied, signals to CYCLEXEC to blend guess and climatology
#     (Note: file must be " ", not "" or the shell syntax for default
#      values X=${X:-default} will reset to default if X="")
#     FSNOL=99999.,FSNOS=99999., sets the blending of guess and climo to
#		use 100% guess
#
####################################
prev_cdate=$($utilexec/ndate -6 ${PDY}$cyc)
wgrib=$utilexec/wgrib
RUN_GETGES=${RUN_GETGES:-YES}        # Set to NO if not running getges.sh
if [ $RUN_GETGES = YES ]; then
 GETGESSH=${GETGESSH:-$utilscript/getges.sh}
 export gesenvir=${gesenvir:-$envir}
 snoprv=$($GETGESSH -q -t snogrb_$JCAP_ENKF -e $gesenvir -n gdas -v $prev_cdate)
else
 snoprv=${snoprv:-$FNSNOG}
fi
if [ `$wgrib -4yr ${FNSNOA} 2>/dev/null|grep -i snowc |\
	  awk -F: '{print $3}'|awk -F= '{print $2}'` -le \
     `$wgrib -4yr $snoprv 2>/dev/null |grep -i snowc  |\
			awk -F: '{print $3}'|awk -F= '{print $2}'` ] ; then
	export FNSNOA=" "
	export CYCLVARS="FSNOL=99999.,FSNOS=99999.,"
else
     export SNOW_NUDGE_COEFF=${SNOW_NUDGE_COEFF:-0.}
     export CYCLVARS="FSNOL=${SNOW_NUDGE_COEFF},$CYCLVARS"
fi

############################################################################ 
#
# Output File Names

export SIGANL=/dev/null
export ABIAS=/dev/null
export ABIASPC=/dev/null
export ABIASAIR=/dev/null

export SFCANL=${SFCANL:-$COMOUT/sfcanl_${CDATE}_ensmean}
export NSTANL=${NSTANL:-$COMOUT/nstanl_${CDATE}_ensmean}
export ABIASe=${ABIASe:-$COMOUT/biascr_int_${CDATE}_ensmean}
export GSISTAT=${GSISTAT:-${COMOUT}/gsistat_${CDATE}_ensmean}
export CNVSTAT=${CNVSTAT:-${COMOUT}/cnvstat_${CDATE}_ensmean}
export OZNSTAT=${OZNSTAT:-${COMOUT}/oznstat_${CDATE}_ensmean}
export PCPSTAT=${PCPSTAT:-${COMOUT}/pcpstat_${CDATE}_ensmean}
export RADSTAT=${RADSTAT:-${COMOUT}/radstat_${CDATE}_ensmean}
export SELECT_OBS=${SELECT_OBS:-${COMOUT}/obsinput_${CDATE}_ensmean}


#
# PDS Grid Designator
# What IGEN to use for GDAS EnKF?
export IGEN=${IGEN:-82}

msg="HAS BEGUN on `hostname`"
./postmsg "$jlogfile" "$msg"

####################################
# Check if this is a restart
#
# Define Previous Guess File Names (dev users must provide from outside)
####################################
err1=0
if [ $RUN_GETGES = YES ]; then
  export gesenvir=${gesenvir:-$envir}
  $GETGESSH -t biascr -r ${JCAP_ges}$LEVS_ges -v ${PDY}$cyc -e $gesenvir -n gdas gbias
err1=$?
  $GETGESSH -t biascr_pc -r ${JCAP_ges}$LEVS_ges -v ${PDY}$cyc -e $gesenvir -n gdas gbias_pc
  $GETGESSH -t biascr_air -r ${JCAP_ges}${LEVS_ges} -v $PDY$cyc -e $gesenvir -n gdas gbias_air
  $GETGESSH -t radstat -r ${JCAP_ges}$LEVS_ges -v ${PDY}$cyc -e $gesenvir -n gdas gradstat
fi

export GBIAS=${GBIAS:-$DATA/gbias}
export GRADSTAT=${GRADSTAT:-$DATA/gradstat}
export GBIASPC=${GBIASPC:-$DATA/gbias_pc}
export GBIASAIR=${GBIASAIR:-$DATA/gbias_air}


if [ $err1 -eq 0 ] ; then
   msg="Analysis Starting/Guess Fields Found"
   ./postmsg "$jlogfile" "$msg"
else
   msg="Analysis Cannot Start/Guess Fields Not Available"
   ./postmsg "$jlogfile" "$msg"
   export pgm=$job
   export err=911
   ./err_chk
fi


# Set namelist jobs for ensemble data selection
export USE_NEWRADBC=${USE_NEWRADBC:-YES}
export SETUP="miter=0,niter=1,lread_obs_save=.true.,lread_obs_skip=.false.,lwrite_predterms=.true.,lwrite_peakwt=.true.,reduce_diag=.true.,passive_bc=.false.,"
export BKGVERR="bkgv_flowdep=.false.,"

export STRONGOPTS="tlnmc_option=0,nstrong=0,nvmodes_keep=0,baldiag_full=.false.,baldiag_inc=.false.,"
export OBSQC="tcp_width=60.0,tcp_ermin=2.0,tcp_ermax=12.0,qc_noirjaco3_pole=.true.,"
export OBSINPUT="dmesh(1)=225.0,dmesh(2)=225.0,"


############################
# WCOSS environment settings

export MP_EAGER_LIMIT=65536
export MP_COREFILE_FORMAT=lite
export MP_EUIDEVELOP=min
export MP_EUIDEVICE=sn_all
export MP_EUILIB=us
export MP_MPILIB=mpich2

export MP_LABELIO=yes
export MP_USE_BULK_XFER=yes
export MP_SHARED_MEMORY=yes
export MPICH_ALLTOALL_THROTTLE=0
export MP_USE_TOKEN_FLOW_CONTROL=yes
export KMP_STACKSIZE=2048m

export NTHREADS_GSI=${NTHREADS_GSI:-1}
export NTHSTACK=1024000000                # stacks for fcst step; default 128000000
export NTHSTACK_GSI=1024000000            # stack size for anal, default=128000000

export OMP_NUM_THREADS_CY=24

. /usrx/local/Modules/3.2.10/init/ksh
module unload ibmpe/1.3.0.8
module load ibmpe/1.3.0.8p

export machine=WCOSS
##export APRUNCY=
export APRUN='mpirun.lsf'



env

#############################################################
# Execute the script
${ANALYSISSH:-$SCRGSI/exglobal_analysis.sh.ecf}
#############################################################

##########
# NOTES: 1) script exglobal_analysis.sh.ecf compresses the contents of
#           RADSTAT, PCPSTAT, OZNSTAT, and CNVSTAT.  These stat files
#           files are tarballs of compressed files.
##########

if [ $SENDDBN = YES ] ; then
   $DBNROOT/bin/dbn_alert MODEL ENKF1_MSC_gsistat $job $COMOUT/gsistat_${CDATE}_ensmean
   $DBNROOT/bin/dbn_alert MODEL GFS_ENKF $job $SFCANL
fi

cat $pgmout

grep memory $DATA/mpi*

msg="ENDED NORMALLY."
./postmsg "$jlogfile" "$msg"

##############################
# Remove the Temporary working directory
##############################
cd $DATA_IN
if [ ${RM_TMPDIR:-YES} = YES ] ; then rm -rf $DATA ; fi

date
