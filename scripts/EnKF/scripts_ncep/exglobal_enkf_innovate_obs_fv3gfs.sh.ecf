#!/bin/ksh
################################################################################
####  UNIX Script Documentation Block
#                      .                                             .
# Script name:         exglobal_enkf_innovate_obs_fv3gfs.sh.ecf
# Script description:  Compute ensemble innovations
#
# Author:        Rahul Mahajan      Org: NCEP/EMC     Date: 2017-03-02
#
# Abstract: This script runs the innovation calculation script serially over ensemble members
#
# $Id$
#
# Attributes:
#   Language: POSIX shell
#   Machine: WCOSS-Cray/Theia
#
################################################################################

# Set environment.
export VERBOSE=${VERBOSE:-"YES"}
if [ $VERBOSE = "YES" ] ; then
   echo $(date) EXECUTING $0 $* >&2
   set -x
fi

# Directories.
pwd=$(pwd)
export HOMEDIR=${HOMEDIR:-$NWROOT}
export NWPROD=${NWPROD:-$HOMEDIR}
export BASE_GSI=${BASE_GSI:-$NWPROD}
export SCR_GSI=${SCR_GSI:-$BASE_GSI/scripts}
export DATA=${DATA:-$pwd}
export COMIN=${COMIN:-$pwd}
export COMIN_OBS=${COMIN_OBS:-$COMIN}
export COMIN_GES=${COMIN_GES:-$COMIN}
export COMIN_GES_ENS=${COMIN_GES_ENS:-$COMIN}
export COMOUT=${COMOUT:-$COMIN}

# Utilities
export NCP=${NCP:-"/bin/cp -p"}
export NLN=${NLN:-"/bin/ln -sf"}
export ERRSCRIPT=${ERRSCRIPT:-'eval [[ $err = 0 ]]'}

# Scripts.
export OBSINNOVSH=${OBSINNOVSH:-$SCR_GSI/exglobal_innovate_obs_fv3gfs.sh.ecf}
export ANALYSISSH=${ANALYSISSH:-$SCR_GSI/exglobal_analysis_fv3gfs.sh.ecf}

# Enemble group, begin and end
export ENSGRP=${ENSGRP:-1}
export ENSBEG=${ENSBEG:-1}
export ENSEND=${ENSEND:-1}

# Cycling and forecast hour specific parameters
export CDATE=${CDATE:-"2001010100"}
export CDUMP=${CDUMP:-"gdas"}

# Ops related stuff
export SENDECF=${SENDECF:-"NO"}

################################################################################
# Preprocessing
if [ ! -d $DATA ]; then mkdir -p $DATA; fi
cd $DATA || exit 99
export DATATOP=$DATA

################################################################################
# Set output data
cymd=`echo $CDATE | cut -c1-8`
chh=`echo  $CDATE | cut -c9-10`
export EOMGGRP=${EOMGGRP:-$COMOUT/enkf.${CDUMP}.${cymd}/$chh/eomg.grp${ENSGRP}}
rm -f $EOMGGRP

################################################################################
# Run innovation script for ensemble member
rc=0
for imem in `seq $ENSBEG $ENSEND`; do

   export MEMBER=$imem

   memchar="mem"`printf %03i $MEMBER`
   export DATA=$DATATOP/$memchar
   if [ -d $DATA ]; then
      rm -rf $DATA
   fi

   $OBSINNOVSH
   ra=$?
   ((rc+=ra))

   # Notify a member observation innovation failed, freeze eupd, but continue on to next member
   if [ $SENDECF = "YES" -a $ra -ne 0 ]; then
      ecflow_client --abort="observation innovation of member $MEMBER FAILED"
   fi

   rm log
   $NCP $DATATOP/log_all ./log_old
   if [ $ra -ne 0 ]; then
      echo "MEMBER $MEMBER : FAIL" > log
   else
      echo "MEMBER $MEMBER : PASS" > log
   fi
   cat log_old log > log_new
   $NCP log_new $DATATOP/log_all

done

################################################################################
# Save log
cd $DATATOP
$NCP log_all $EOMGGRP

################################################################################
# If any members failed, error out
export ERR=$rc
export err=$ERR
$ERRSCRIPT || exit 2

################################################################################
#  Postprocessing
cd $pwd
[[ ${KEEPDATA:-"NO"} = "NO" ]]&& rm -rf $DATA
set +x
if [ $VERBOSE = "YES" ] ; then
   echo $(date) EXITING $0 with return code $err >&2
fi
exit $err
