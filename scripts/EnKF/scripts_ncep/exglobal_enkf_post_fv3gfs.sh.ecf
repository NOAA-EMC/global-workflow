#!/bin/ksh
################################################################################
####  UNIX Script Documentation Block
#                      .                                             .
# Script name:         exglobal_enkf_post_fv3gfs.sh.ecf
# Script description:  Global ensemble forecast post processing
#
# Author:        Rahul Mahajan      Org: NCEP/EMC     Date: 2017-03-02
#
# Abstract: This script post-processes global ensemble forecast output
#
# $Id$
#
# Attributes:
#   Language: POSIX shell
#   Machine: WCOSS-Cray/Theia
#
################################################################################

# Set environment.
VERBOSE=${VERBOSE:-"YES"}
if [ $VERBOSE = "YES" ]; then
   echo $(date) EXECUTING $0 $* >&2
   set -x
fi

# Directories.
pwd=$(pwd)
NWPROD=${NWPROD:-$pwd}
BASE_GSI=${BASE_GSI:-$NWPROD}
FIX_GSI=${FIX_GSI:-$BASE_GSI/fix}
DATA=${DATA:-$pwd}
COMIN=${COMIN:-$pwd}
COMOUT=${COMOUT:-$COMIN}

# Utilities
ERRSCRIPT=${ERRSCRIPT:-'eval [[ $err = 0 ]]'}
NCP=${NCP:-"/bin/cp"}
NLN=${NLN:-"/bin/ln -sf"}

# Machine related stuff
export MPMD=${MPMD:-"NO"}
export MPMD_OPTS=${MPMD_OPTS:-"-pgmmodel mpmd -ilevel 2 -labelio yes  -stdoutmode ordered"}
APRUN_EPOS=${APRUN_EPOS:-${APRUN:-""}}

# Ops stuff
SENDDBN=${SENDDBN:-"NO"}

# Fix files
LEVS=${LEVS:-64}
HYBENSMOOTH=${HYBENSMOOTH:-$FIX_GSI/global_hybens_smoothinfo.l${LEVS}.txt}

# Executables.
GETATMENSMEANEXEC=${GETATMENSMEANEXEC:-$BASE_GSI/exec/getsigensmeanp_smooth.x}
GETSFCENSMEANEXEC=${GETSFCENSMEANEXEC:-$BASE_GSI/exec/getsfcensmeanp.x}
GETNSTENSMEANEXEC=${GETNSTENSMEANEXEC:-$BASE_GSI/exec/getnstensmeanp.x}
GETATMENSSTATEXEC=${GETATMENSSTATEXEC:-$BASE_GSI/exec/getsigensstatp.x}

# Other variables.
PREFIX=${PREFIX:-""}
SUFFIX=${SUFFIX:-""}
FHMIN=${FHMIN_ENKF:-${FHMIN:-3}}
FHMAX=${FHMAX_ENKF:-${FHMAX:-9}}
FHOUT=${FHOUT_ENKF:-${FHOUT:-1}}
SMOOTH_ENKF=${SMOOTH_ENKF:-"NO"}
NMEM_ENKF=${NMEM_ENKF:-80}
NST_GSI=${NST_GSI:-0}
ENKF_SUFFIX=""
[[ $SMOOTH_ENKF = "YES" ]] && ENKF_SUFFIX="s"

################################################################################
#  Preprocessing
if [ ! -d $DATA ]; then mkdir -p $DATA; fi
cd $DATA || exit 99

################################################################################
# Copy executables to working directory
$NCP $GETSFCENSMEANEXEC $DATA
$NCP $GETATMENSMEANEXEC $DATA
$NCP $GETATMENSSTATEXEC $DATA
if [ $NST_GSI -gt 0 ]; then
   $NCP $GETNSTENSMEANEXEC $DATA
fi

################################################################################
# Forecast ensemble member files
for imem in `seq 1 $NMEM_ENKF`; do
   memchar="mem"`printf %03i $imem`
   for fhr in `seq $FHMIN $FHOUT $FHMAX`; do
      fhrchar=`printf %03i $fhr`
      $NLN $COMIN/$memchar/${PREFIX}sfcf$fhrchar${SUFFIX} sfcf${fhrchar}_$memchar
      $NLN $COMIN/$memchar/${PREFIX}atmf$fhrchar${SUFFIX} atmf${fhrchar}_$memchar
      if [ $NST_GSI -gt 0 ]; then
         $NLN $COMIN/$memchar/${PREFIX}nstf$fhrchar${SUFFIX} nstf${fhrchar}_$memchar
      fi
   done
done

# Forecast ensemble mean and smoothed files
for fhr in `seq $FHMIN $FHOUT $FHMAX`; do
   fhrchar=`printf %03i $fhr`
   $NLN $COMOUT/${PREFIX}sfcf${fhrchar}.ensmean${SUFFIX} sfcf${fhrchar}.ensmean
   $NLN $COMOUT/${PREFIX}atmf${fhrchar}.ensmean${SUFFIX} atmf${fhrchar}.ensmean
   if [ $SMOOTH_ENKF = "YES" ]; then
      for imem in `seq 1 $NMEM_ENKF`; do
         memchar="mem"`printf %03i $imem`
         $NLN $COMOUT/$memchar/${PREFIX}atmf${fhrchar}${ENKF_SUFFIX}${SUFFIX} atmf${fhrchar}${ENKF_SUFFIX}_$memchar
      done
   fi
   if [ $NST_GSI -gt 0 ]; then
      $NLN $COMOUT/${PREFIX}nstf${fhrchar}.ensmean${SUFFIX} nstf${fhrchar}.ensmean
   fi
   $NLN $COMOUT/${PREFIX}atmf${fhrchar}.ensmean.nc4   atmf${fhrchar}_ensmean.nc4
   $NLN $COMOUT/${PREFIX}atmf${fhrchar}.ensspread.nc4 atmf${fhrchar}_ensspread.nc4
done

################################################################################
# Generate ensemble mean surface and atmospheric files

rm ./hybens_smoothinfo
if [ $SMOOTH_ENKF = "YES" ]; then
   $NCP $HYBENSMOOTH ./hybens_smoothinfo
fi

if [ $MPMD = "YES" ]; then

   if [ $machine = WCOSS ] ; then
      nprocs=$LSB_DJOB_NUMPROC
   fi
   cnt=0
   ncnt=-1
   for fhr in `seq $FHMIN $FHOUT $FHMAX`; do
      fhrchar=`printf %03i $fhr`
      cmd[$cnt]="$(basename $GETSFCENSMEANEXEC) ./ sfcf${fhrchar}.ensmean sfcf${fhrchar} $NMEM_ENKF"
      cmd[$cnt]="$(basename $GETATMENSMEANEXEC) ./ atmf${fhrchar}.ensmean atmf${fhrchar} $NMEM_ENKF"
      cmd[$cnt]="$(basename $GETATMENSSTATEXEC) ./                        atmf${fhrchar} $NMEM_ENKF"
      if [ $NST_GSI -gt 0 ]; then
          cmd[$cnt]="$(basename $GETNSTENSMEANEXEC) ./ nstf${fhrchar}.ensmean nstf${fhrchar} $NMEM_ENKF"
      fi
      ((cnt+=1))
      ((ncnt+=1))
   done

   rm $DATA/cmdfile
   m=-1
   n=0
   while [ $((n+=1)) -le $nprocs ] ;do
      while [ $((m+=1)) -le $ncnt ] ;do
         echo "${cmd[m]}" >> $DATA/cmdfile
         ((n+=1))
      done
      if [ $n -le $nprocs ] ; then
         echo "echo do-nothing" >> $DATA/cmdfile
      fi
   done
   if [ $machine = WCOSS ]; then
      export MP_PGMMODEL=${MP_PGMMODEL:-mpmd}
      export MP_CMDFILE=$DATA/cmdfile
      $APRUN_EPOS
      rc=$?
   fi

else # Run serially instead

   rc=0
   for fhr in `seq $FHMIN $FHOUT $FHMAX`; do
      fhrchar=`printf %03i $fhr`
      $APRUN_EPOS ${DATA}/$(basename $GETSFCENSMEANEXEC) ./ sfcf${fhrchar}.ensmean sfcf${fhrchar} $NMEM_ENKF
      ra=$?
      ((rc+=ra))
      $APRUN_EPOS ${DATA}/$(basename $GETATMENSMEANEXEC) ./ atmf${fhrchar}.ensmean atmf${fhrchar} $NMEM_ENKF
      ra=$?
      ((rc+=ra))
      if [ $NST_GSI -gt 0 ]; then
         $APRUN_EPOS ${DATA}/$(basename $GETNSTENSMEANEXEC) ./ nstf${fhrchar}.ensmean nstf${fhrchar} $NMEM_ENKF
         ra=$?
         ((rc+=ra))
      fi
      $APRUN_EPOS ${DATA}/$(basename $GETATMENSSTATEXEC) ./ atmf${fhrchar} $NMEM_ENKF
      ra=$?
      ((rc+=ra))
   done

fi

export ERR=$rc
export err=$ERR
$ERRSCRIPT || exit 2

################################################################################
# If smoothing on but no smoothing output, copy smoothed ensemble atmospheric files
if [ "$SMOOTH_ENKF" = "YES" ]; then
   for fhr in `seq $FHMIN $FHOUT $FHMAX`; do
      fhrchar=`printf %03i $fhr`
      if [ ! -s atmf${fhrchar}${ENKF_SUFFIX}_mem001 ]; then
         echo WARNING! no smoothed ensemble member for fhour = $fhrchar >&2
         for imem in `seq 1 $NMEM_ENKF`; do
            memchar="mem"`printf %03i $imem`
            $NCP atmf${fhrchar}_$memchar atmf${fhrchar}${ENKF_SUFFIX}_$memchar
         done
      fi
   done
fi

################################################################################
# Send DBN alerts
for fhr in `seq $FHMIN $FHOUT $FHMAX`; do
   fhrchar=`printf %03i $fhr`
   if [ `expr $fhr % 3` -eq 0 ]; then
      if [ -s ./sfcf${fhrchar}.ensmean ]; then
         if [ $SENDDBN = "YES" ]; then
            $DBNROOT/bin/dbn_alert MODEL GFS_ENKF $job $COMOUT/${PREFIX}sfcf${fhrchar}.ensmean${SUFFIX}
         fi
      fi
   fi
done

if [ $SENDDBN = "YES" ] ; then
for imem in `seq 1 $NMEM_ENKF`; do
   memchar="mem"`printf %03i $imem`
   for fhr in `seq 6 $FHOUT $FHMAX`; do
      fhrchar=`printf %03i $fhr`
      if [ `expr $fhr % 3` -eq 0 ]; then
          $DBNROOT/bin/dbn_alert MODEL GFS_ENKF $job $COMOUT/$memchar/${PREFIX}atmf${fhrchar}${ENKF_SUFFIX}${SUFFIX}
      fi
   done
done
fi

################################################################################
#  Postprocessing
cd $pwd
[[ ${KEEPDATA:-"NO"} = "NO" ]] && rm -rf $DATA
set +x
if [ $VERBOSE = "YES" ]; then
   echo $(date) EXITING $0 with return code $err >&2
fi
exit $err
