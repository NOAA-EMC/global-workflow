#!/bin/ksh
set -xa
#
# Specify whether the run is production or development
#
export RUN_ENVIR=${RUN_ENVIR:-prod}

#####################################################################################
# Run config file to get input parameters
# This config file should define the following variables
# DATA_IN: Location of working directory, default to /tmpnwprd2
# DEV_ECF: If the job is to be running using ECF, default to YES
# SENDDBN: Set to NO for developers, default to NO
# COM_IN:  Directory for input files, default to /com/$NET/${envir}
# COM_OUT: Directory for output file, default to /com/$NET/${envir}
# gespath: Directory for the guess or restart files, default to /nwges/${envir}
#####################################################################################
if [ "$RUN_ENVIR" != prod ]      ### For Developers, "group_name" is passed from the ECF script
then
  . ${PARA_CONFIG:-/global/save/${LOGNAME}/2jif/q3fy12_hybrid/tests/para_config}
  export userid=$LOGNAME
  export DATA_IN=${DATA_IN:-/ptmp/$userid}
fi

###############################################################
# This block can be modified for different test environment
###############################################################
if [[ $RUN_ENVIR = prod && $envir != prod ]]; then
  export DBNROOT=/nwprod/spa_util/fakedbn
  export jlogfile=${jlogfile:-/com/logs/${envir}/jlogfile}
fi

#
####################################
# Specify NET and RUN Name and model
####################################
export NET=gfs
export RUN=enkf

####################################
# Specify version numbers
####################################
export enkf_ver=${enkf_ver:-v2.0.1}
export gsi_ver=${gsi_ver:-v5.0.0}
export gsm_ver=${gsm_ver:-v12.0.0}
export util_ver=${util_ver:-v1.0.0}

####################################
# set up job name and  environment
####################################
export job=${job:-$RUN}
export envir=${envir:-prod}
export host=${host:-`hostname | cut -c1`}

###############################################

date
export PS4='$SECONDS + '

# ##############################################
# SETUP EnKF DATA SELECTION PROCESSING VARIABLES
# ##############################################

####################################
# obtain unique process id (pid) and make temp directory
####################################
export pid=${pid:-$$}
export DATA_IN=${DATA_IN:-/tmpnwprd2}

export DATA=$DATA_IN/${job}.${pid}
mkdir -p $DATA
cd $DATA
#

####################################
# Determine Job Output Name on System
####################################
export cyc=${cyc:-00}
export outid="LL$job"
[ $envir != prod ]  && export outid="LL${job}_${envir}"
export jobid="${outid}.o${pid}"
export pgmout="OUTPUT.${pid}"
export pgmerr=errfile
export cycle=t${cyc}z

####################################
# SENDECF  - Flag Events on ECF
# SENDCOM  - Copy Files From TMPDIR to $COMOUT
# SENDDBN  - Issue DBNet Client Calls
# RERUN    - Rerun fcst from beginning (default no)
# VERBOSE  - Specify Verbose Output in exglobal_fcst.sh.ecf
####################################
export SAVEGES=${SAVEGES:-NO}
export SENDECF=${SENDECF:-YES}
export SENDCOM=${SENDCOM:-YES}
export SENDDBN=${SENDDBN:-YES}
export RERUN=${RERUN:-NO}
export VERBOSE=${VERBOSE:-YES}

#################################
# Define the Log File directory
#################################
export jlogfile=${jlogfile:-/com/logs/jlogfiles/jlogfile.${job}.${pid}}

####################################
# Specify Execution Areas
####################################
export HOMEGLOBAL=${HOMEGLOBAL:-/nw${envir}/gsm.$gsm_ver}
export EXECGLOBAL=${EXECGLOBAL:-$HOMEGLOBAL/exec}
export FIXGLOBAL=${FIXGLOBAL:-$HOMEGLOBAL/fix/fix_am}
export USHGLOBAL=${USHGLOBAL:-$HOMEGLOBAL/ush}
export SCRGLOBAL=${SCRGLOBAL:-$HOMEGLOBAL/scripts}
export UTILGLOBAL=${UTILGLOBAL:-$HOMEGLOBAL/util}
export PARMGLOBAL=${PARMGLOBAL:-$HOMEGLOBAL/parm}

export HOMEGSM=${HOMEGSM:-/nw${envir}/gsm.$gsm_ver}
export EXECGSM=${EXECGSM:-$HOMEGSM/exec}
export FIXGSM=${FIXGSM:-$HOMEGSM/fix/fix_am}
export USHGSM=${USHGSM:-$HOMEGSM/ush}
export SCRGSM=${SCRGSM:-$HOMEGSM/scripts}
export UTILGSM=${UTILGSM:-$HOMEGSM/util}
export PARMGSM=${PARMGSM:-$HOMEGSM/parm/parm_am}

export HOMEGSI=${HOMEGSI:-/nw${envir}/gsi.$gsi_ver}
export EXECGSI=${EXECGSI:-$HOMEGSI/exec}
export FIXGSI=${FIXGSI:-$HOMEGSI/fix}
export USHGSI=${USHGSI:-$HOMEGSI/ush}
export SCRGSI=${SCRGSI:-$HOMEGSI/scripts}
export UTILGSI=${UTILGSI:-$HOMEGSI/util}
export PARMGSI=${PARMGSI:-$HOMEGSI/parm}

export HOMEENKF=${HOMEENKF:-/nw${envir}/enkf.$enkf_ver}
export EXECENKF=${EXECENKF:-$HOMEENKF/exec}
export FIXENKF=${FIXENKF:-$HOMEENKF/fix}
export USHENKF=${USHENKF:-$HOMEENKF/ush}
export SCRENKF=${SCRENKF:-$HOMEENKF/scripts}
export UTILENKF=${UTILENKF:-$HOMEENKF/util}
export PARMENKF=${PARMENKF:-$HOMEENKF/parm}

export HOMEUTIL=${HOMEUTIL:-/nw${envir}/util.${util_ver}}
export EXECUTIL=${EXECUTIL:-$HOMEUTIL/exec}
export FIXUTIL=${FIXUTIL:-$HOMEUTIL/fix}
export PARMUTIL=${PARMUTIL:-$HOMEUTIL/parm}
export SCRUTIL=${SCRUTIL:-$HOMEUTIL/scripts}
export USHUTIL=${USHUTIL:-$HOMEUTIL/ush}

##############################
# Set up the UTILITIES
##############################
export utilscript=${utilscript:-$USHUTIL}
export utilexec=${utilexec:-$EXECUTIL}
export NDATE=${NDATE:-$utilexec/ndate}

# Run setup to initialize working directory and utility scripts
##############################
$utilscript/setup.sh

err_chk=${err_chk:-$utilscript/err_chk.sh}
startmsg=${startmsg:-$utilscript/startmsg.sh}
ERRSCRIPT=${ERRSCRIPT:-$err_chk}
LOGSCRIPT=${LOGSCRIPT:-$startmsg}
export FILESTYLE=${FILESTYLE:-'L'}

##############################
# Run setpdy and initialize PDY variables
##############################
$utilscript/setpdy.sh
. ./PDY

# Set CDATE and GDATE
export CDATE=${CDATE:-${PDY}${cyc}}
export GDATE=`$NDATE -06 $CDATE`
export PDYges=`echo $GDATE | cut -c1-8`
export CYCges=`echo $GDATE | cut -c9-10`

##############################################
# Define COM directories
##############################################
export COM_IN=${COM_IN:-/com/${NET}/${envir}}
export COM_OUT=${COM_OUT:-/com/${NET}/${envir}}

export COMIN=$COM_IN/enkf.${PDY}/$cyc
export COMOUT=$COM_OUT/enkf.${PDY}/$cyc
export COMINGDAS=${COMINGDAS:-$COM_IN/gdas.${PDY}}
export COMINGES=$COM_IN/enkf.${PDYges}/$CYCges
export GETGES_COM=${GETGES_COM:-/com}
export GETGES_NWG=${GETGES_NWG:-/nwges}


mkdir -m 775 -p $COMOUT

##############################################
# Define GES directories
##############################################
export gespath=${gespath:-/nwges/${envir}}
export GESdir=$gespath/gdas.$PDY
mkdir -m 775 -p $GESdir
####################################
# Specify Special Fcst Vars
####################################
#
#Set hybrid and ensemble resolution parameters
export NTHREADS_ENKF=${NTHREADS_ENKF:-2}
export JCAP_ENKF=${JCAP_ENKF:-574}
export LEVS_ENKF=${LEVS_ENKF:-64}
export LONB_ENKF=${LONB_ENKF:-1152}
export LATB_ENKF=${LATB_ENKF:-576}
export LONA_ENKF=${LONA_ENKF:-1152}
export LATA_ENKF=${LATA_ENKF:-576}
export NMEM_ENKF=${NMEM_ENKF:-80}
export NVARS=${NVARS:-5}

#
# These defaults are for the T254L64
#
export LONA=${LONA_ENKF:-1152}
export LATA=${LATA_ENKF:-576}
export LONB=${LONB_ENKF:-1152}
export LATB=${LATB_ENKF:-576}
export LEVS=${LEVS_ENKF:-64}

# Forecast Vertical Resolution
#
export JCAP_ges=${JCAP_ges:-574}
export LEVS_ges=${LEVS_ges:-64}
#


# EnKF executable
export ENKFUPDEXEC=${ENKFUPDEXEC:-${EXECENKF}/global_enkf}

# EnKF script
export ENKFUPDSH=${ENKFUPDSH:-$SCRENKF/exglobal_enkf_update.sh.ecf}

# Enkf fix files
export SATANGL=${SATANGL:-${FIXGSI}/global_satangbias.txt}
export SATINFO=${SATINFO:-${FIXGSI}/global_satinfo.txt}
export SCANINFO=${SCANINFO:-${FIXGSI}/global_scaninfo.txt}
export CONVINFO=${CONVINFO:-${FIXGSI}/global_convinfo.txt}
export OZINFO=${OZINFO:-${FIXGSI}/global_ozinfo.txt}
export HYBENSINFO=${HYBENSINFO:-${FIXGSI}/global_hybens_locinfo.l${LEVS}.txt}

# EnKF ensemble files
export GBIASE=${GBIASE:-$COMIN/biascr_int_${CDATE}_ensmean}
export CNVSTAT=${CNVSTAT:-$COMIN/cnvstat_$CDATE}
export OZNSTAT=${OZNSTAT:-$COMIN/oznstat_$CDATE}
export RADSTAT=${RADSTAT:-$COMIN/radstat_$CDATE}
export SIGGESENS=${SIGGESENS:-${COMINGES}/sfg_${GDATE}_fhr06s}

export SIGGES=${SIGGES:-${COMINGES}/sfg_${GDATE}_fhr06_ensmean}
export SFCGES=${SFCGES:-${COMINGES}/bfg_${GDATE}_fhr06_ensmean}

############################################################################ 
#
# Output File Names

export ENKFSTAT=${ENKFSTAT:-$COMOUT/enkfstat_$CDATE}
export SIGANLENS=${SIGANLENS:-${COMOUT}/sanl_${CDATE}}


msg="HAS BEGUN on `hostname`"
./postmsg "$jlogfile" "$msg"

####################################
# Check if this is a restart
#
# Define Previous Guess File Names (dev users must provide from outside)
####################################
RUN_GETGES=${RUN_GETGES:-YES}        # Set to NO if not running getges.sh
err1=0
if [ $RUN_GETGES = YES ]; then
  GETGESSH=${GETGESSH:-$utilscript/getges.sh}
  export gesenvir=${gesenvir:-$envir}
  $GETGESSH -t biascr -r ${JCAP_ges}$LEVS_ges -v ${PDY}$cyc -e $gesenvir -n gdas gbias
err1=$?
fi

export GBIAS=${GBIAS:-$DATA/gbias}


if [ $err1 -eq 0 ] ; then
   msg="Analysis Starting/Guess Fields Found"
   ./postmsg "$jlogfile" "$msg"
else
   msg="Analysis Cannot Start/Guess Fields Not Available"
   ./postmsg "$jlogfile" "$msg"
   export pgm=$job
   export err=911
   ./err_chk
fi


# Set namelist variables for enhanced radiance bias correction scheme
export USE_NEWRADBC=${USE_NEWRADBC:-YES}
export NAM_ENKF="univaroz=.true.,adp_anglebc=.true.,angord=4,use_edges=.false.,emiss_bc=.true.,"


############################
# WCOSS environment settings
export MP_DEBUG_NOTIMEOUT=no
export MP_EAGER_LIMIT=165536
export MP_COREFILE_FORMAT=lite
export MP_MPILIB=mpich2

export MP_LABELIO=yes
export MP_USE_BULK_XFER=yes
export MP_SHARED_MEMORY=yes
export MPICH_ALLTOALL_THROTTLE=0
export MP_COLLECTIVE_OFFLOAD=no
export KMP_STACKSIZE=2048m

export machine=WCOSS
export APRUN='mpirun.lsf'

env

#############################################################
# Execute the script
${ENKFUPDSH:-$SCRENKF/exglobal_enkf_update.sh.ecf}
#############################################################


if [ $SENDDBN = YES ] ; then
   $DBNROOT/bin/dbn_alert MODEL ENKF1_MSC_enkfstat $job $COMOUT/enkfstat_${CDATE}
fi

cat $pgmout

grep memory $DATA/mpi*

msg="ENDED NORMALLY."
./postmsg "$jlogfile" "$msg"

##############################
# Remove the Temporary working directory
##############################
cd $DATA_IN
if [ ${RM_TMPDIR:-YES} = YES ] ; then rm -rf $DATA ; fi

date
