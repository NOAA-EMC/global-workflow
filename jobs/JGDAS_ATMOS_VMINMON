#! /usr/bin/env bash

###########################################################
# GDAS Minimization Monitor (MinMon) job
###########################################################
source "${HOMEgfs}/ush/preamble.sh"
source "${HOMEgfs}/ush/jjob_header.sh" -e "vminmon" -c "base vminmon"

###########################################################
# obtain unique process id (pid) and make temp directories
###########################################################
export MINMON_SUFFIX=${MINMON_SUFFIX:-${NET}}
export m_job=${m_job:-${MINMON_SUFFIX}_mmDE}


##############################################
# Specify Package Areas
##############################################
export HOMEgfs=${HOMEgfs:-${NWROOT}/gfs.${gfs_ver}}
export SCRgfs=${SCRgfs:-${HOMEgfs}/scripts}

export M_FIXgdas=${M_FIXgdas:-${HOMEgfs}/fix/gdas}

export HOMEminmon=${HOMEminmon:-${HOMEgfs}}
export EXECminmon=${EXECminmon:-${HOMEminmon}/exec}
export USHminmon=${USHminmon:-${HOMEminmon}/ush}


#############################################
#  determine PDY and cyc for previous cycle
#############################################

pdate=$(${NDATE} -6 ${PDY}${cyc})
echo "pdate = ${pdate}"

export P_PDY=${pdate:0:8}
export p_cyc=${pdate:8:2}


#############################################
# TANKverf - WHERE OUTPUT DATA WILL RESIDE
#############################################
export M_TANKverf=${M_TANKverf:-${COM_IN}/${RUN}.${PDY}/${cyc}/atmos/minmon}
export M_TANKverfM1=${M_TANKverfM1:-${COM_IN}/${RUN}.${P_PDY}/${p_cyc}/atmos/minmon}

YMD=${PDY} HH=${cyc} generate_com -rx COM_ATMOS_ANALYSIS

mkdir -p -m 775 ${M_TANKverf}


########################################
# Set necessary environment variables
########################################
export CYCLE_INTERVAL=6
export gsistat=${gsistat:-${COM_ATMOS_ANALYSIS}/gdas.t${cyc}z.gsistat}


########################################################
# Execute the script.
${GMONSH:-${SCRgfs}/exgdas_atmos_vminmon.sh} ${PDY} ${cyc}
err=$?
[[ ${err} -ne 0 ]] && exit ${err}


################################
# Remove the Working Directory
################################
KEEPDATA=${KEEPDATA:-NO}
cd ${DATAROOT}
if [ ${KEEPDATA} = NO ] ; then
  rm -rf ${DATA}
fi

exit 0
