#!/bin/sh

set -xa
export PS4='$SECONDS + '
date

############################################
# GFS_PGRB2_SPEC_GEMPAK PRODUCT GENERATION
############################################

#########################################################
# obtain unique process id (pid) and make temp directory
#########################################################
export DATA=${DATA:-${DATAROOT}/${jobid:?}}
mkdir -p $DATA
cd $DATA

######################################
# Set up the cycle variable
######################################
export cycle=${cycle:-t${cyc}z}

###########################################
# Run setpdy and initialize PDY variables
###########################################
setpdy.sh
. PDY

################################
# Set up the HOME directory
################################
export HOMEgfs=${HOMEgfs:-${NWROOT}/gfs.${gfs_ver}}
export EXECgfs=${EXECgfs:-$HOMEgfs/exec}
export PARMgfs=${PARMgfs:-$HOMEgfs/parm}
export EXPDIR=${EXPDIR:-$HOMEgfs/parm/config}
export FIXgempak=${FIXgempak:-$HOMEgfs/gempak/fix}
export USHgempak=${USHgempak:-$HOMEgfs/gempak/ush}
export SRCgfs=${SRCgfs:-$HOMEgfs/scripts}

# For half-degree P Grib files
#export DO_HD_PGRB=YES

###################################
# Specify NET and RUN Name and model
####################################
export NET=gfs
export RUN=gfs_goessim
export COMPONENT=${COMPONENT:-atmos}
export finc=3
export model=gfs
export EXT=""

##############################################
# Define COM directories
##############################################
export COMIN=${COMIN:-$(compath.py ${NET}/${envir}/${NET}.${PDY})/${cyc}/$COMPONENT}
export COMOUT=${COMOUT:-${COMROOT}/${NET}/${envir}/${NET}.${PDY}/${cyc}/$COMPONENT/gempak}

export SENDDBN=${SENDDBN:-NO}
export DBNROOT=${DBNROOT:-${UTILROOT}/fakedbn}

if [ $SENDCOM = YES ] ; then
  mkdir -m 775 -p $COMOUT
fi

env

export DATA_HOLD=$DATA

msg="Begin job for $job"
postmsg "$jlogfile" "$msg"

#################################################################
# Execute the script for the regular grib
#################################################################
export DATA=$DATA_HOLD/SPECIAL
mkdir -p $DATA
cd $DATA

export DBN_ALERT_TYPE=GFS_GOESSIM_GEMPAK
export GRIB=goessimpgrb2.0p25.f
export EXT=" "
export fend=180
export finc=3
export fstart=000

echo "RUNS the Program"
set -xa

########################################################
# Execute the script.
$SRCgfs/exgfs_atmos_goes_nawips.sh

#################################################################
# Execute the script for the 221 grib

export DATA=$DATA_HOLD/SPECIAL221
mkdir -p $DATA
cd $DATA

export DBN_ALERT_TYPE=GFS_GOESSIM221_GEMPAK
export RUN=gfs_goessim221
export GRIB=goessimpgrb2f
export EXT=".grd221"
export fend=180
export finc=3
export fstart=000

echo "RUNS the Program"
set -xa

########################################################
# Execute the script.
$SRCgfs/exgfs_atmos_goes_nawips.sh
export err=$?; err_chk
########################################################

msg="JOB $job HAS COMPLETED NORMALLY!"
postmsg $jlogfile "$msg"

echo "end of program"
cd $DATA_HOLD
echo "######################################"
echo "  SPECIAL.OUT "
echo "######################################"

############################################
# print exec I/O output
############################################
if [ -e "$pgmout" ] ; then
  cat $pgmout
fi

###################################
# Remove temp directories
###################################
if [ "$KEEPDATA" != "YES" ] ; then
  rm -rf $DATA
fi

date
