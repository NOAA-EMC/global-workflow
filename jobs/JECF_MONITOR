#!/bin/ksh -x

export RUN_ENVIR=${RUN_ENVIR:-"nco"}
export PS4='$SECONDS + '
date


#############################
# Source relevant config files
#############################
export EXPDIR=${EXPDIR:-$HOMEgfs/parm/config}
configs="base"
config_path=${EXPDIR:-$NWROOT/gfs.${gfs_ver}/parm/config}
for config in $configs; do
    . $config_path/config.$config
    status=$?
    [[ $status -ne 0 ]] && exit $status
done


##############################################
# Obtain unique process id (pid) and make temp directory
##############################################
export pid=${pid:-$$}
export outid=${outid:-"LL$job"}

##############################################
# Run setpdy and initialize PDY variables
##############################################
export cycle="t${cyc}z"
setpdy.sh
. ./PDY


##############################################
# Determine Job Output Name on System
##############################################
export pgmout="OUTPUT.${pid}"
export pgmerr=errfile


##############################################
# Set variables used in the script
##############################################
export CDATE=${CDATE:-${PDY}${cyc}}
export CDUMP=${CDUMP:-${RUN:-"gfs"}}
export COMPONENT=${COMPONENT:-atmos}
GDATE=$($NDATE -06 $CDATE)
gPDY=$(echo $GDATE | cut -c1-8)
gcyc=$(echo $GDATE | cut -c9-10)

##############################################
# Ensure obsproc input exist
##############################################
OBSPROC_GDAS_Trigger=$(compath.py ${envir}/obsproc/${obsproc_ver})/gdas.${PDY}/${cyc}/atmos/gdas.t${cyc}z.updated.status.tm00.bufr_d
IMSSNOW_GDAS_Trigger=$(compath.py ${envir}/obsproc/${obsproc_ver})/gdas.${PDY}/${cyc}/atmos/gdas.t${cyc}z.imssnow96.grib2
OBSPROC_GFS_Trigger=$(compath.py ${envir}/obsproc/${obsproc_ver})/gfs.${PDY}/${cyc}/atmos/gfs.t${cyc}z.updated.status.tm00.bufr_d
IMSSNOW_GFS_Trigger=$(compath.py ${envir}/obsproc/${obsproc_ver})/gfs.${PDY}/${cyc}/atmos/gfs.t${cyc}z.imssnow96.grib2
COMIN_OBS_gfs=$(compath.py prod/obsproc/${obsproc_ver})/gfs.$PDY/$cyc/atmos/gfs.$cycle.prepbufr
COMIN_OBS_gdas=$(compath.py prod/obsproc/${obsproc_ver})/gdas.$PDY/$cyc/atmos/gdas.$cycle.prepbufr
ic=1
release_gdas="NO"
release_gfs="NO"
release_enkfgdas="NO"
while [ $ic -le 20 ];
do
  if [ -s "$OBSPROC_GDAS_Trigger" -a -s "$IMSSNOW_GDAS_Trigger" -a -s "$COMIN_OBS_gdas" -a $release_gdas = "NO" ]; then
    release_gdas="YES"
    ecflow_client --event release_gdas
  fi
  if [ -s "$OBSPROC_GFS_Trigger" -a -s "$IMSSNOW_GFS_Trigger" -a -s "$COMIN_OBS_gfs" -a $release_gfs = "NO" ]; then
    release_gfs="YES"
    ecflow_client --event release_gfs
  fi
  if [ -s $COMIN_OBS_gdas ]; then
    release_enkfgdas="YES"
    ecflow_client --event release_enkfgdas
  fi
  if [ $release_gdas = "YES" -a $release_gfs = "YES" -a $release_enkfgdas = "YES" ]; then
    break
  fi
  ic=`expr $ic + 1`
  if [ $ic -gt 20 ]; then
    exit 99
  fi
  sleep 38
done

echo "ENDED NORMALLY."

date
exit 0

