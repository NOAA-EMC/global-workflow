#! /usr/bin/env bash

if [[ $# -ne 1 ]]; then

    echo "Must specify an input argument to set runtime environment variables!"
    exit 1

fi

step=$1

export launcher="srun -l --export=ALL"
export mpmd_opt="--multi-prog --output=mpmd.%j.%t.out"

export OMP_STACKSIZE=2048000
export NTHSTACK=1024000000

ulimit -s unlimited
ulimit -a

# Calculate common variables
# Check first if the dependent variables are set
if [[ -n "${npe:-}" && -n "${npe_node_max:-}" && -n "${npe_node:-}" ]]; then
    nth_max=$((npe_node_max / npe_node))
    NTHREADSmax=${nth:-${nth_max}}
    NTHREADS1=${nth:-1}
    [[ ${NTHREADSmax} -gt ${nth_max} ]] && NTHREADSmax=${nth_max}
    [[ ${NTHREADS1} -gt ${nth_max} ]] && NTHREADS1=${nth_max}
    # This may be useful when Gaea is fully ported, so ignore SC warning
    # shellcheck disable=SC2034
    APRUN="${launcher} -n ${npe}"
fi

if [[ "${step}" = "waveinit" ]]; then

    export CFP_MP="YES"
    if [[ "${step}" = "waveprep" ]]; then export MP_PULSE=0 ; fi
    export wavempexec=${launcher}
    export wave_mpmd=${mpmd_opt}

elif [[ "${step}" = "fcst" ]]; then

    ppn="npe_node_${RUN}"
    [[ -z "${!ppn+0}" ]] && ppn="npe_node"
    nprocs="npe_${RUN}"
    [[ -z ${!nprocs+0} ]] && nprocs="npe"

    (( nnodes = (${!nprocs}+${!ppn}-1)/${!ppn} ))
    (( ntasks = nnodes*${!ppn} ))
    # With ESMF threading, the model wants to use the full node
    export APRUN_UFS="${launcher} -n ${ntasks}"
    unset nprocs ppn nnodes ntasks

elif [[ "${step}" = "atmos_products" ]]; then

    export USE_CFP="YES"  # Use MPMD for downstream product generation on Hera

elif [[ "${step}" = "oceanice_products" ]]; then

    export NTHREADS_OCNICEPOST=${NTHREADS1}
    export APRUN_OCNICEPOST="${launcher} -n 1 --cpus-per-task=${NTHREADS_OCNICEPOST}"

elif [[ "${step}" = "fit2obs" ]]; then

    export NTHREADS_FIT2OBS=${NTHREADS1}
    export MPIRUN="${APRUN} --cpus-per-task=${NTHREADS_FIT2OBS}"

fi
